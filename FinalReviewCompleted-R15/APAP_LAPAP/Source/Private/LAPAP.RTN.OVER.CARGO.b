* @ValidationCode : MjoyMTA0ODIzOTgwOkNwMTI1MjoxNjkxNjY2MjU0OTA3OklUU1M6LTE6LTE6MjI4NjoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 10 Aug 2023 16:47:34
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 2286
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.LAPAP
*-----------------------------------------------------------------------------
* <Rating>1078</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE LAPAP.RTN.OVER.CARGO
*------------------------------------------------------------------------------------------------------
* Description           : Rutina procesa el el cargo por abno extraodinario en caja
*                         esta rutina esta atada a las versiones de caja para pago de abono extraodinario
* Versiones             : FUNDS.TRANSFER,REDO.MULTI.AA.ACRP.UPD.TR,FUNDS.TRANSFER,REDO.MULTI.AA.ACRP.UPD
* Developed On          : 28-02-2023
* Developed By          : APAP
* Development Reference : CTO-130
*--------------------------------------------------------------------------------------------------------
*MODIFICATION HISTORY:
*DATE          WHO                 REFERENCE               DESCRIPTION
*10-08-2023    VICTORIA S          R22 MANUAL CONVERSION   INSERT FILE MODIFIED,VM TO @VM,FM TO @FM,SM TO @SM
*----------------------------------------------------------------------------------------
    $INSERT I_COMMON ;*R22 MANUAL CONVERSION START
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.L.APAP.LIMITE.ABONADO
    $INSERT I_F.LAPAP.CARGO.ABONO.EXTRAC
    $INSERT I_F.L.APAP.GENERACION.CARGO
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.AA.PAYMENT.SCHEDULE
    $INSERT I_F.AA.TERM.AMOUNT ;*R22 MANUAL CONVERSION END
    $USING APAP.AA

    GOSUB MAIN
RETURN
*==========
LOAD.TABLE:
*==========

    FN.CHK.DIR = "DMFILES"
    F.CHK.DIR = ""
    CALL OPF(FN.CHK.DIR,F.CHK.DIR)

    FN.ACCOUNT = "F.ACCOUNT"; F.ACCOUNT = ""
    CALL OPF (FN.ACCOUNT,F.ACCOUNT)

    FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'; F.AA.ARRANGEMENT = ''
    CALL OPF (FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.LAPAP.CARGO.ABONO.EXTRAC = 'F.ST.LAPAP.CARGO.ABONO.EXTRAC'; F.LAPAP.CARGO.ABONO.EXTRAC = ''
    CALL OPF (FN.LAPAP.CARGO.ABONO.EXTRAC,F.LAPAP.CARGO.ABONO.EXTRAC)

    FN.ST.L.APAP.GENERACION.CARGO = "F.ST.L.APAP.GENERACION.CARGO"; F.ST.L.APAP.GENERACION.CARGO = ""
    CALL OPF (FN.ST.L.APAP.GENERACION.CARGO,F.ST.L.APAP.GENERACION.CARGO)

    FN.ST.L.APAP.LIMITE.ABONADO = "F.ST.L.APAP.LIMITE.ABONADO"; F.ST.L.APAP.LIMITE.ABONADO = ""
    CALL OPF (FN.ST.L.APAP.LIMITE.ABONADO,F.ST.L.APAP.LIMITE.ABONADO)

RETURN

*====
MAIN:
*====
    GOSUB LOAD.TABLE
    Y.MONTO.CARGO = 0 ; Y.TODAY = TODAY
    Y.CURR.NO = R.NEW(FT.CURR.NO)
    Y.MONTO.ABONADO = R.NEW(FT.CREDIT.AMOUNT)
    Y.MONTO.ACTUAL = Y.MONTO.ABONADO
    Y.ACCOUNT.ID = R.NEW(FT.CREDIT.ACCT.NO)

    Y.EDIT.CHAR.POS = '';
    CALL GET.LOC.REF("FUNDS.TRANSFER","L.CHAR.EDIT",Y.EDIT.CHAR.POS)
    Y.EDIT.CHAR = R.NEW(FT.LOCAL.REF)<1,Y.EDIT.CHAR.POS>

    GOSUB GET.ACCOUNT
    GOSUB GET.ARRANGEMENT
    GOSUB GET.CAP.DESEM
    GOSUB GET.PAYMENT.METHOD
    GOSUB GET.TIEMPO.TRANSCURRIDO

    Y.DIAS = 'C'
    CALL CDD('',Y.START.DATE, Y.TODAY, Y.DIAS)

    Y.MONTHS = 1
    CALL EB.NO.OF.MONTHS(Y.START.DATE,Y.TODAY,Y.MONTHS)
    GOSUB GET.PAGO.PAYOFF.PARAMETRO

    Y.MONTO.CARGO = Y.RESUL
    Y.MONTO.CARGO = FMT(Y.MONTO.CARGO, "R2#10")

    CALL F.READ(FN.ST.L.APAP.GENERACION.CARGO,Y.ACCOUNT.ID,R.L.APAP.GENERACION,F.ST.L.APAP.GENERACION.CARGO,ERROR.GENERACION.CARGO)
    IF R.L.APAP.GENERACION THEN
        DELETE F.ST.L.APAP.GENERACION.CARGO,Y.ACCOUNT.ID
    END

    IF NOT(Y.EDIT.CHAR) THEN
        TEXT = "DEBE ESTABLECER ALGUN VALOR EN EL CAMPO: *EDITAR/EXONERAR CARGO?*"
        ETEXT = TEXT
        E = TEXT
        CALL ERR
    END

    IF Y.EDIT.CHAR EQ "No" THEN
        Y.CHAR.AMOUNT.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.MON.CARG",Y.CHAR.AMOUNT.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.CHAR.AMOUNT.POS> = 0

        Y.TOTAL.PAY = Y.MONTO.ABONADO
        Y.TOTAL.PAY.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.TOTAL.PAY",Y.TOTAL.PAY.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.TOTAL.PAY.POS> = Y.TOTAL.PAY
    END

    IF Y.EDIT.CHAR EQ "Ex" THEN
        Y.MONTO.CARGO = 0
        Y.CHAR.AMOUNT.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.MON.CARG",Y.CHAR.AMOUNT.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.CHAR.AMOUNT.POS> = Y.MONTO.CARGO

        Y.TOTAL.PAY.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.TOTAL.PAY",Y.TOTAL.PAY.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.TOTAL.PAY.POS> = Y.MONTO.ABONADO

        TEXT = "LAPAP.EXO.CARGO":@FM:" - APROBACION SUPERVISOR" ;*R22 MANUAL CONVERSION
        CALL STORE.OVERRIDE(Y.CURR.NO)
    END

    IF Y.MONTO.CARGO GT 0 AND Y.EDIT.CHAR EQ "No" THEN
        Y.CHAR.AMOUNT.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.MON.CARG",Y.CHAR.AMOUNT.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.CHAR.AMOUNT.POS> = Y.MONTO.CARGO
        GOSUB SET.CARGO.TEMP

        Y.TOTAL.PAY = Y.MONTO.ABONADO + Y.MONTO.CARGO
        Y.TOTAL.PAY.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.TOTAL.PAY",Y.TOTAL.PAY.POS)
        R.NEW(FT.LOCAL.REF)<1,Y.TOTAL.PAY.POS> = Y.TOTAL.PAY

        TEXT = "LAPAP.EXTRACAP":@FM:" RD$":Y.MONTO.ABONADO:" el cliente debe pagar adicional: RD$":Y.MONTO.CARGO:" del cargo por abono" ;*R22 MANUAL CONVERSION
        CALL STORE.OVERRIDE(Y.CURR.NO)

        Y.CHAR.AMOUNT.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.MON.CARG",Y.CHAR.AMOUNT.POS)
        Y.MONTO.CARGO1 = R.NEW(FT.LOCAL.REF)<1,Y.CHAR.AMOUNT.POS>
        IF Y.MONTO.CARGO1 NE Y.MONTO.CARGO THEN
            TEXT = "EL CARGO NO PUEDE SER MODIFICADO. DEBE ESCOGER MODIFICAR O EXONERAR"
            ETEXT = TEXT
            E = TEXT
            CALL ERR
        END
    END ELSE
        IF Y.MONTO.CARGO GT 0 AND Y.EDIT.CHAR EQ "Yes" THEN
            Y.CHAR.AMOUNT.POS = '';
            CALL GET.LOC.REF("FUNDS.TRANSFER","L.MON.CARG",Y.CHAR.AMOUNT.POS)
            Y.MONTO.CARGO = R.NEW(FT.LOCAL.REF)<1,Y.CHAR.AMOUNT.POS>
            Y.TOTAL.PAY = Y.MONTO.ABONADO + Y.MONTO.CARGO
            Y.TOTAL.PAY.POS = '';

            CALL GET.LOC.REF("FUNDS.TRANSFER","L.TOTAL.PAY",Y.TOTAL.PAY.POS)
            R.NEW(FT.LOCAL.REF)<1,Y.TOTAL.PAY.POS> = Y.TOTAL.PAY

            IF Y.MONTO.CARGO GT Y.RESUL THEN
                TEXT = "EL NUEVO VALOR DEL CARGO NO PUEDE SER MAYOR AL ORIGINAL. VALOR ORIGINAL: ":Y.RESUL
                ETEXT = TEXT
                E = TEXT
                CALL ERR
            END ELSE
                IF Y.MONTO.CARGO LE 0 AND Y.EDIT.CHAR EQ "Yes" THEN
                    TEXT = "PARA ESTABLECER EL CARGO EN 0 ESTE DEBE SER EXONERADO."
                    ETEXT = TEXT
                    E = TEXT
                    CALL ERR
                END
                GOSUB SET.CARGO.TEMP
                Y.TOTAL.PAY = Y.MONTO.ABONADO + Y.MONTO.CARGO
                Y.TOTAL.PAY.POS = '';
                CALL GET.LOC.REF("FUNDS.TRANSFER","L.TOTAL.PAY",Y.TOTAL.PAY.POS)
                R.NEW(FT.LOCAL.REF)<1,Y.TOTAL.PAY.POS> = Y.TOTAL.PAY
                TEXT = "LAPAP.NEW.CHAR":@FM:Y.MONTO.CARGO:" - APROBACION SUPERVISOR" ;*R22 MANUAL CONVERSION
                CALL STORE.OVERRIDE(Y.CURR.NO)
            END
        END
    END
RETURN

*===========
GET.ACCOUNT:
*===========

    R.ACCOUNT = ''; ACCOUNT.ERROR = ''
    CALL F.READ (FN.ACCOUNT,Y.ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERROR)
    Y.AA.ID =  R.ACCOUNT<AC.ARRANGEMENT.ID>
RETURN

*===============
GET.ARRANGEMENT:
*===============

    R.ARRANGEMENT = ''; ERR.ARRANGEMENT = ''
    CALL F.READ(FN.AA.ARRANGEMENT,Y.AA.ID,R.ARRANGEMENT,F.AA.ARRANGEMENT,ERR.ARRANGEMENT)
    Y.START.DATE = R.ARRANGEMENT<AA.ARR.ORIG.CONTRACT.DATE>
    IF NOT(Y.START.DATE) THEN
        Y.START.DATE = R.ARRANGEMENT<AA.ARR.START.DATE>
    END

    Y.PRODUCT = R.ARRANGEMENT<AA.ARR.PRODUCT>
    CHANGE @SM TO @FM IN Y.PRODUCT ;*R22 MANUAL CONVERSION
    CHANGE @VM TO @FM IN Y.PRODUCT ;*R22 MANUAL CONVERSION
    Y.PRODUCT = Y.PRODUCT<1>
RETURN

*=============
GET.CAP.DESEM:
*=============

*CALL REDO.B.CON.LNS.BY.DEBTOR.AA.RECS(Y.AA.ID,OUT.RECORD)
    APAP.AA.redoBConLnsByDebtorAaRecs(Y.AA.ID,OUT.RECORD);* R22 Manual conversion
    R.AA.TERM.AMOUNT.APP = FIELD(OUT.RECORD,"*",1)
    Y.DISBURSED.AMOUNT = R.AA.TERM.AMOUNT.APP<AA.AMT.AMOUNT>
RETURN

*==================
GET.PAYMENT.METHOD:
*==================

*CALL REDO.B.CON.LNS.BY.DEBTOR.AA.RECS(Y.AA.ID,OUT.RECORD)
    APAP.AA.redoBConLnsByDebtorAaRecs(Y.AA.ID,OUT.RECORD);* R22 Manual conversion
    R.AA.PAYMENT.SCHEDULE.APP = FIELD(OUT.RECORD,"*",3)
    CALL GET.LOC.REF ("AA.PRD.DES.PAYMENT.SCHEDULE", "L.AA.PAY.METHD",L.AA.PAY.METHD.POS)
    Y.PAYMENT.METHOD = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.LOCAL.REF,L.AA.PAY.METHD.POS>
RETURN

*=======================
GET.TIEMPO.TRANSCURRIDO:
*=======================

    PROP.CLASS = 'TERM.AMOUNT'; PROP.NAME = ''; returnConditions = ''; RET.ERR = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.AA.ID,PROP.CLASS,PROP.NAME,'','',returnConditions,ERR.COND)
    R.AA.TERM.AMOUNT = RAISE(returnConditions)
    Y.TIEMPO.PRESTAMO =  R.AA.TERM.AMOUNT<AA.AMT.TERM>
    BEGIN CASE
        CASE (INDEX(Y.TIEMPO.PRESTAMO,'D',1)GT 0)
            Y.TIEMPO.PRESTAMO = CHANGE(Y.TIEMPO.PRESTAMO,'D',@FM) ;*R22 MANUAL CONVERSION
            Y.TIEMPO.PRESTAMO = Y.TIEMPO.PRESTAMO<1>
        CASE (INDEX(Y.TIEMPO.PRESTAMO,'M',1)GT 0)
            Y.TIEMPO.PRESTAMO = CHANGE(Y.TIEMPO.PRESTAMO,'M',@FM) ;*R22 MANUAL CONVERSION
            Y.DIAS.DIFF = DIV(365,12)
            Y.TIEMPO.PRESTAMO = Y.TIEMPO.PRESTAMO<1> * Y.DIAS.DIFF
        CASE (INDEX(Y.TIEMPO.PRESTAMO,'Y',1)GT 0)
            Y.TIEMPO.PRESTAMO = CHANGE(Y.TIEMPO.PRESTAMO,'Y',@FM) ;*R22 MANUAL CONVERSION
            Y.TIEMPO.PRESTAMO = Y.TIEMPO.PRESTAMO<1> * 365
    END CASE
RETURN

*=========================
GET.PAGO.PAYOFF.PARAMETRO:
*=========================

    R.LAPAP.PAGO.EXTRA = '' ; ERR.PAGO.EXTRA = ''
    CALL F.READ (FN.LAPAP.CARGO.ABONO.EXTRAC,'SYSTEM',R.LAPAP.CARGO.ABONO.EXTRAC,F.LAPAP.CARGO.ABONO.EXTRAC,ERR.PAGO.EXTRA)
    Y.PRODUCTO = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.PRODUCTO>
    Y.COMISION = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.COMISION>
    Y.BASE.CALCULO = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.BASE.CALCULO>
    Y.PLAZO.PRESTAMO = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.PLAZO.PRESTAMO>
    Y.TIEMPO.TRAN.INI = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.TIEMPO.TRAN.INI>
    Y.TIEMPO.TRAN.FIN = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.TIEMPO.TRAN.FIN>
    Y.SALDO.BASE = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.SALDO.BASE>
    Y.TASA.PORENCIMA = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.TASA.PORENCIMA>
    Y.PERIODO.PARCIALES = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.PERIODO.PARCIAL>
    Y.METODO.PAGO = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.METODO.PAGO>
    Y.METODO.PAGO = CHANGE(Y.METODO.PAGO,'.',' ')
    Y.METODO.PAGO = Y.METODO.PAGO
    Y.FECHA.INI.CHAR = R.LAPAP.CARGO.ABONO.EXTRAC<ST.LAP11.FEHCA.INICIO>

    IF Y.FECHA.INI.CHAR LE Y.START.DATE THEN
        LOCATE Y.PRODUCT IN Y.PRODUCTO<1,1> SETTING PR.POSN.2 THEN
            Y.PLAZO.PRESTAMO = Y.PLAZO.PRESTAMO<PR.POSN.2,1> * 365
            FINDSTR Y.PAYMENT.METHOD IN Y.METODO.PAGO SETTING V.FLD, V.VAL THEN
                RETURN
            END
        END
        IF DROUND(Y.TIEMPO.PRESTAMO) GT DROUND(Y.PLAZO.PRESTAMO) THEN
            Y.CNT = DCOUNT(Y.PRODUCTO,@VM) ;*R22 MANUAL CONVERSION
            FOR I = 1 TO Y.CNT
                IF Y.PRODUCT EQ Y.PRODUCTO<1,I> THEN
                    IF Y.COMISION<1,I> EQ 'ABONO.EXT' THEN
                        Y.FECHA.INC = Y.TIEMPO.TRAN.INI<1,I>
                        Y.FECHA.FIN = Y.TIEMPO.TRAN.FIN<1,I>
                        Y.SALDO.BASE1 = Y.SALDO.BASE<1,I>
                        Y.PERIODO.PARCIALES1 = Y.PERIODO.PARCIALES<1,I>
                        Y.TASA.PORENCIMA1 = Y.TASA.PORENCIMA<1,I>
                        GOSUB GET.TIEMPO.EXEDIDO
                        GOSUB GET.MONTO.ACOUMULADO
                        GOSUB GET.PROCESS.CALL
                        IF Y.RESUL NE 0 THEN
                            RETURN
                        END
                    END
                END
            NEXT I
        END
    END
RETURN

*==================
GET.TIEMPO.EXEDIDO:
*==================

*--- Buscamos la diferencia de los dias para evaluar si el tiempo supera los 24 meses ---*
    Y.TIEMP.EXEDIDO             = "No"
    IF Y.MONTHS GE Y.PERIODO.PARCIALES1 THEN
        Y.TIEMP.EXEDIDO         = "Yes"
    END
RETURN
*====================
GET.MONTO.ACOUMULADO:
*====================

    R.LIMITE.ABONADO = ''; ERR.LIMITE.ABONADO = ''
    CALL F.READ(FN.ST.L.APAP.LIMITE.ABONADO,Y.AA.ID, R.LIMITE.ABONADO, F.ST.L.APAP.LIMITE.ABONADO, ERR.LIMITE.ABONADO)
    IF NOT(R.LIMITE.ABONADO) THEN
        RETURN
    END
    Y.PRESTAMO = R.LIMITE.ABONADO<ST.L.A61.N.PRESTAMO>
    Y.MONTO.ACOMU = R.LIMITE.ABONADO<ST.L.A61.MONTO.EX>
    Y.LIMIT.EX = R.LIMITE.ABONADO<ST.L.A61.LIMIT.EX>
RETURN

*================
GET.PROCESS.CALL:
*================

    Y.RESUL = 0 ; Y.TASA = 0; Y.FECHA = ''
    CHANGE @SM TO @FM IN Y.FECHA.INC ;*R22 MANUAL CONVERSION START
    CHANGE @VM TO @FM IN Y.FECHA.INC
    CHANGE @SM TO @FM IN Y.FECHA.FIN
    CHANGE @SM TO @FM IN Y.FECHA.FIN
    CHANGE @SM TO @FM IN Y.TASA.PORENCIMA1
    CHANGE @VM TO @FM IN Y.TASA.PORENCIMA1
    CHANGE @SM TO @FM IN Y.SALDO.BASE1
    CHANGE @VM TO @FM IN Y.SALDO.BASE1
    Y.CNT1 = DCOUNT(Y.FECHA.INC,@FM) ;*R22 MANUAL CONVERSION END

    FOR K = 1 TO Y.CNT1
        Y.DIF.IN.FIN = DIV(365,12)
        Y.MES.INI = Y.FECHA.INC<K>
        Y.MES.FIN = Y.FECHA.FIN<K>
        Y.BALANCE.IN = Y.FECHA.INC<K> * Y.DIF.IN.FIN
        Y.BALANCE.FIN = Y.FECHA.FIN<K> * Y.DIF.IN.FIN
        Y.BALANCE.IN = DROUND(Y.BALANCE.IN,0)
        Y.BALANCE.FIN = DROUND(Y.BALANCE.FIN,0)
        Y.PORCIENTO.CAPITAL = DIV(Y.SALDO.BASE1<K>,100) * ABS(Y.DISBURSED.AMOUNT)
        Y.PORCIENTO.CAPITAL = FMT(Y.PORCIENTO.CAPITAL, "R2#10")

        IF Y.MONTO.ABONADO GT Y.PORCIENTO.CAPITAL THEN
            IF Y.MONTHS GE Y.MES.INI AND Y.MONTHS LE Y.MES.FIN AND Y.TIEMP.EXEDIDO EQ "No" THEN
*------ Se procede a sacar el excedente del monto abonado para generar el cargo. ------*
                IF Y.LIMIT.EX EQ "TRUE" THEN
                    Y.TASA =  DIV(Y.TASA.PORENCIMA1<K>,100)
                    Y.RESUL = Y.MONTO.ABONADO * Y.TASA
                    RETURN
                END ELSE
                    IF Y.MONTO.ACOMU LE "0" OR Y.MONTO.ACOMU " " THEN
                        Y.DIFERENCIA = Y.MONTO.ABONADO - Y.PORCIENTO.CAPITAL
                        Y.TASA =  DIV(Y.TASA.PORENCIMA1<K>,100)
                        Y.RESUL = Y.DIFERENCIA * Y.TASA
                        Y.LIMIT.EX = "TRUE"
                        Y.CAL.ABO = Y.MONTO.ABONADO
                        GOSUB SET.LIMITE
                        RETURN
                    END ELSE
                        IF Y.MONTO.ACOMU GT "0" AND Y.LIMIT.EX EQ "FALSE" THEN
                            Y.ABONO.CAL =  Y.MONTO.ABONADO + Y.MONTO.ACOMU
                            Y.TASA =  DIV(Y.TASA.PORENCIMA1<K>,100)
                            Y.DIF.CAL = Y.ABONO.CAL - Y.PORCIENTO.CAPITAL
                            Y.RESUL = Y.DIF.CAL * Y.TASA
                            Y.CAL.ABO = Y.ABONO.CAL
                            Y.LIMIT.EX = "TRUE"
                            GOSUB SET.LIMITE
                            RETURN
                        END
                    END
                END
            END
        END ELSE
            IF Y.MONTO.ABONADO LE Y.PORCIENTO.CAPITAL THEN
                IF Y.MONTHS GE Y.MES.INI AND Y.MONTHS LE Y.MES.FIN AND Y.TIEMP.EXEDIDO EQ "No" THEN
                    IF Y.LIMIT.EX EQ "TRUE" THEN
                        Y.TASA =  DIV(Y.TASA.PORENCIMA1<K>,100)
                        Y.RESUL = Y.MONTO.ABONADO * Y.TASA
                        RETURN
                    END
                END
            END
        END

        IF Y.MONTO.ABONADO LE Y.PORCIENTO.CAPITAL THEN
            Y.ABONO.CAL =  Y.MONTO.ABONADO + Y.MONTO.ACOMU
            IF Y.ABONO.CAL GT Y.PORCIENTO.CAPITAL THEN
                IF Y.MONTHS GE Y.MES.INI AND Y.MONTHS LE Y.MES.FIN AND Y.TIEMP.EXEDIDO EQ "No" THEN
                    IF Y.LIMIT.EX EQ "FALSE" OR Y.LIMIT.EX EQ " " THEN
                        Y.TASA =  DIV(Y.TASA.PORENCIMA1<K>,100)
                        Y.DIF.CAL = Y.ABONO.CAL - Y.PORCIENTO.CAPITAL
                        Y.RESUL = Y.DIF.CAL * Y.TASA
                        Y.CAL.ABO = Y.ABONO.CAL
                        Y.LIMIT.EX = "TRUE"
                        GOSUB SET.LIMITE
                        RETURN
                    END
                END
            END ELSE
                IF Y.MONTO.ABONADO LE Y.PORCIENTO.CAPITAL THEN
                    Y.ABONO.CAL =  Y.MONTO.ABONADO + Y.MONTO.ACOMU
                    IF Y.ABONO.CAL LE Y.PORCIENTO.CAPITAL THEN
                        IF Y.MONTHS GE Y.MES.INI AND Y.MONTHS LE Y.MES.FIN AND Y.TIEMP.EXEDIDO EQ "No" THEN
                            Y.CAL.ABO = Y.MONTO.ACOMU + Y.MONTO.ABONADO
                            Y.LIMIT.EX = "FALSE"
                            GOSUB SET.LIMITE
                            RETURN
                        END
                    END
                END
            END
        END
    NEXT K
RETURN

*==========
SET.LIMITE:
*==========
    Y.FILE.NAME = "LIMITEABONADO":Y.ACCOUNT.ID
    Y.ARREGLO<-1> = Y.AA.ID:"|":Y.CAL.ABO:"|":ID.NEW:"|":Y.LIMIT.EX

    R.FIL = ''; READ.FIL.ERR = ''
    CALL F.READ(FN.CHK.DIR,Y.FILE.NAME,R.FIL,F.CHK.DIR,READ.FIL.ERR)
    IF R.FIL THEN
        DELETE F.CHK.DIR,Y.FILE.NAME
    END
    WRITE Y.ARREGLO ON F.CHK.DIR, Y.FILE.NAME ON ERROR
        CALL OCOMO("Error en la escritura del archivo en el directorio":F.CHK.DIR)
    END
RETURN

*==============
SET.CARGO.TEMP:
*==============

    R.ST.L.APAP.GENERACION.CARGO = ""
    R.ST.L.APAP.GENERACION.CARGO<ST.L.A46.L.APA.CUENTA.PRE> = Y.ACCOUNT.ID
    R.ST.L.APAP.GENERACION.CARGO<ST.L.A46.L.APAP.REFERENCIA> = ID.NEW
    R.ST.L.APAP.GENERACION.CARGO<ST.L.A46.L.APAP.MONTO> = Y.MONTO.CARGO
    CALL F.WRITE(FN.ST.L.APAP.GENERACION.CARGO,Y.ACCOUNT.ID,R.ST.L.APAP.GENERACION.CARGO)
RETURN
END
