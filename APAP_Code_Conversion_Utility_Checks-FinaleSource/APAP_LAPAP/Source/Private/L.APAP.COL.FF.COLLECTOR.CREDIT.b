* @ValidationCode : MjoxNDg5MzA3OTU5OkNwMTI1MjoxNzAyOTg4MzQ3MzYxOklUU1MxOi0xOi0xOjA6MTpmYWxzZTpOL0E6UjIyX1NQNS4wOi0xOi0x
* @ValidationInfo : Timestamp         : 19 Dec 2023 17:49:07
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS1
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R22_SP5.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.LAPAP
*-----------------------------------------------------------------------------
* <Rating>105</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE L.APAP.COL.FF.COLLECTOR.CREDIT(Y.CUSTOMER.ID, Y.CREDIT, Y.CREDIT.TXN,PR.GESGARANTIAS,PR.GESCREDITOSGARANTIAS,PR.GESTIPOGARANTIAS,P.GESCREDITOINTEGRACION)
**-----------------------------------------------------------------------------
* Name : L.APAP.COL.FF.COLLECTOR.CREDIT
*        basa en la logica de la rutina : REDO.COLLECTOR.EXTRACT.TO.CREDIT
*      : Allows to mapping the values from AA to INSERT for Collector Data Base
*
* -----------------------------------------------------------------------------------------
* This development uses and Static Mapping defined on RAD.CONDUIT.LINEAR with @id = REDO.COL.MAP.STATIC
*-----------------------------------------------------------------------------
* Date                  Who                               Reference           Description
* ----                  ----                                ----                 ----
*09-08-2023         Ajith Kumar         R22 Manual Code Conversion      LAPAP.BP ,TAM.BP IS REMOVED , VM, SM ,FM to @VM,@SM,@FM
*18-12-2023    Santosh C           MANUAL R22 CODE CONVERSION   APAP Code Conversion Utility Check
* ----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.COMPANY
*   $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.ACCT.ACTIVITY
    $INSERT I_F.EB.CONTRACT.BALANCES
    $INSERT I_F.AA.INTEREST.ACCRUALS
    $INSERT I_F.AA.ACTIVITY.HISTORY
    $INSERT I_F.CUSTOMER
    $INSERT I_F.AA.CHARGE
    $INSERT I_F.AA.REFERENCE.DETAILS
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.DATES
    $USING APAP.TAM
    $USING APAP.REDOSRTN
    $USING APAP.AA
    $USING APAP.REDORETAIL
    $USING AA.PaymentSchedule ;*R22 Manual Code Conversion_Utility Check
*
*$INSERT I_L.APAP.COL.CUSTOMER.COMMON
    $INSERT I_L.APAP.COL.COLLECTOR.COMMON ;*R22 MANUAL CODE CONVERSION
    $INSERT I_REDO.COL.EXTRACT.CREDIT.COMMON ;*R22 MANUAL CODE CONVERSION
*
    $INSERT I_F.REDO.CUSTOMER.ARRANGEMENT
    $INSERT I_F.REDO.H.PROVISION.PARAMETER ;*R22 MANUAL CODE CONVERSION
    $INSERT I_F.REDO.H.CUSTOMER.PROVISIONING
    $INSERT I_F.AA.PRODUCT
*-----------------------------------------------------------------------------

    Y.START.TIME = TIME()
    E = ""
    GOSUB INITIALISE
    IF E THEN
        RETURN
    END
    GOSUB PROCESS
    Y.ELAPSED.TIME = TIME()- Y.START.TIME         ;* How long the select took
    MSG = 'tracking execution time L.APAP.COL.FF.COLLECTOR.CREDIT( ' : Y.CUSTOMER.ID : ') time=' :  Y.ELAPSED.TIME : 'secs'
    CALL OCOMO("")  ;     CALL OCOMO(MSG)     ;    CALL OCOMO("")
RETURN

*-----------------------------------------------------------------------------
* Just Porcess the list of AA for the current Customer
PROCESS:
*-----------------------------------------------------------------------------
* << PACS00169639
    CALL F.READ(FN.REDO.CUSTOMER.ARRANGEMENT,Y.CUSTOMER.ID,R.CUS.ARR,F.REDO.CUSTOMER.ARRANGEMENT,CUS.ARR.ERR)
    AA.LIST = R.CUS.ARR<CUS.ARR.OWNER>
* >> PACS00169639

    E = ""
    PROCESSED.AA.IDS = ""
    LOOP
        REMOVE AA.ID FROM AA.LIST SETTING AA.MARK
    WHILE AA.ID : AA.MARK AND PROCESS.GOAHEAD
        LOCATE AA.ID IN PROCESSED.AA.IDS<1> SETTING AA.POS THEN
            CONTINUE
        END
        PROCESSED.AA.IDS<-1> = AA.ID
        GOSUB INITIALISE.VARS
        E = ""
        GOSUB READ.MAIN.FILES
        IF NOT(E) AND Y.CONTINUE.AA THEN
            GOSUB PROCESS.AA
        END
    REPEAT

RETURN

*-----------------------------------------------------------------------------
* Read Main records from AA files
READ.MAIN.FILES:
*-----------------------------------------------------------------------------
* Read Main Files
* CALL L.APAP.COL.EXTRACT.CREDIT.READ(AA.ID,R.AA,R.ACT.HIST,R.PRINCIPALINT,R.MORA.CHARGE,R.AA.ACCOUNT.DETAILS)
    APAP.LAPAP.lApapColExtractCreditRead(AA.ID,R.AA,R.ACT.HIST,R.PRINCIPALINT,R.MORA.CHARGE,R.AA.ACCOUNT.DETAILS) ;*R22 MANUAL CODE CONVERSION
    IF E NE "" THEN
        RETURN
    END

    Y.CONTINUE.AA = @FALSE
    GOSUB CHECK.SELECTION.CRITERIA.AA
    IF Y.CONTINUE.AA = @FALSE THEN
        RETURN
    END


* Product Code, this code is used to report TRACE info
    Y.TMPCREDITOCODIGOPRODUCTO = R.AA<AA.ARR.PRODUCT.GROUP>
    Y.PRODUCT.GROUP = Y.TMPCREDITOCODIGOPRODUCTO
* CALL REDO.R.COL.GET.MAPPING(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "PRODUCT.GROUP", Y.TMPCREDITOCODIGOPRODUCTO)
    APAP.TAM.redoRColGetMapping(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "PRODUCT.GROUP", Y.TMPCREDITOCODIGOPRODUCTO) ;*R22 MANUAL CODE CONVERSION
    IF E NE "" THEN
        RETURN
    END

    Y.TMPCREDITOCODIGOTIPOINVERSION=R.AA<AA.ARR.PRODUCT.GROUP>
*CALL REDO.R.COL.GET.MAPPING(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "TIPO.INV", Y.TMPCREDITOCODIGOTIPOINVERSION)
    APAP.TAM.redoRColGetMapping(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "PRODUCT.GROUP", Y.TMPCREDITOCODIGOPRODUCTO) ;*R22 MANUAL CODE CONVERSION
    IF E NE "" THEN
        RETURN
    END
    Y.START.DATE = R.AA<AA.ARR.START.DATE>

RETURN
*-----------------------------------------------------------------------------
* Process each AA contract
PROCESS.AA:
*-----------------------------------------------------------------------------
* Start Mapping
* Agency Code

*-----------------------------------------------------------------------------------todo
    Y.TMPCREDITOCAMPO03 = '';
    Y.TMPCREDITOCAMPO45 = '';
    Y.TMPCREDITOCAMPO03 = R.AA<AA.ARR.PRODUCT>
    IF DCOUNT(Y.TMPCREDITOCAMPO03,@VM) GT 1 THEN
        Y.TMPCREDITOCAMPO03 = Y.TMPCREDITOCAMPO03<1,1>
    END

    CALL F.READ (FN.AA.PRODUCT,Y.TMPCREDITOCAMPO03,R.AA.PRODUCT,FV.AA.PRODUCT,ERROR.PRODUCT)
    Y.TMPCREDITOCAMPO45 = R.AA.PRODUCT<AA.PDT.DESCRIPTION>
    Y.TMPCREDITOCAMPO45 = CHANGE(Y.TMPCREDITOCAMPO45,@VM,@FM)
    Y.TMPCREDITOCAMPO45 = CHANGE(Y.TMPCREDITOCAMPO45,@SM,@FM)
    Y.TMPCREDITOCAMPO45 = Y.TMPCREDITOCAMPO45<2>
*-----------------------------------------------------------------------------------------
    Y.CO.CODE = R.AA<AA.ARR.CO.CODE>
    R.COMP = ''
    CALL CACHE.READ('F.COMPANY',Y.CO.CODE, R.COMP ,YERR)
    IF YERR NE '' THEN
        E = yRecordNotFound : @FM : Y.CO.CODE : @VM : 'F.COMPANY'
        RETURN
    END
    Y.TMPCREDITOCODIGOAGENCIA = R.COMP<EB.COM.SUB.DIVISION.CODE> + 0  ;* Change from format 000X to Number
    Y.AGENCY.CODE = Y.TMPCREDITOCODIGOAGENCIA
    IF Y.TMPCREDITOCODIGOAGENCIA EQ '' THEN
        E = yValueMantatory : @FM : "COMPANY>SUB.DIVISION.CODE" : @VM : Y.CO.CODE
        RETURN
    END
* Contract Number
    Y.ACCOUNT.ID = ""
    LOCATE "ACCOUNT" IN R.AA<AA.ARR.LINKED.APPL,1> SETTING Y.POS THEN
        Y.ACCOUNT.ID =  R.AA<AA.ARR.LINKED.APPL.ID,Y.POS>
        Y.TMPCREDITONUMEROCONTRATO = Y.ACCOUNT.ID
    END ELSE
        E = "ST-REDO.COL.NON.ACCOUNT.REF" : @VM : "VALUE ACCOUNT NOT FOUND LINKED.APPL FIELD ON AA.ARRANGEMENT & ID" : @FM : AA.ID
        RETURN
    END
*
    CALL F.READ(FN.ACCOUNT, Y.ACCOUNT.ID ,R.ACCT, F.ACCOUNT, YERR)
    IF YERR NE '' THEN
        E = yRecordNotFound : @FM : Y.ACCOUNT.ID : @VM : 'F.ACCOUNT'
        RETURN
    END

    YAC.INPUT.LST = FIELD(R.ACCT<AC.INPUTTER,1>,'_',2)
    YAC.DATE.TIMELST.TP = R.ACCT<AC.DATE.TIME>
    YAC.DATE.TIME.LST = ICONV(YAC.DATE.TIMELST.TP,'DI')
    YAC.DATE.TIME.LST = OCONV(YAC.DATE.TIME.LST,'D4')
    YAC.DATE.TIME.LST = YAC.DATE.TIME.LST[7,4]:YAC.DATE.TIME.LST[4,2]:YAC.DATE.TIME.LST[1,2]

    Y.ACCOUNT.ID.HST = Y.ACCOUNT.ID:';1'
    YERR = ''; R.ACCT.HST = ''
    CALL F.READ(FN.ACCOUNT.HST, Y.ACCOUNT.ID ,R.ACCT.HST, F.ACCOUNT, YERR)
    YAC.INPUT = FIELD(R.ACCT.HST<AC.INPUTTER,1>,'_',2)
    YAC.DATE.TIME.TP = R.ACCT.HST<AC.DATE.TIME>
    YAC.DATE.TIME = ICONV(YAC.DATE.TIME.TP,'DI')
    YAC.DATE.TIME = OCONV(YAC.DATE.TIME,'D4')
    YAC.DATE.TIME = YAC.DATE.TIME[7,4]:YAC.DATE.TIME[4,2]:YAC.DATE.TIME[1,2]

    CALL F.READ(FN.EB.CONTRACT.BALANCES, Y.ACCOUNT.ID ,R.EB.CONTRACT.BALANCES, F.EB.CONTRACT.BALANCES, YERR)
    IF YERR NE '' THEN
        E = yRecordNotFound : @FM : Y.ACCOUNT.ID : @VM : 'F.EB.CONTRACT.BALANCES'
        RETURN
    END
* Customer Code
    Y.TMPCREDITOCODIGOCLIENTE   = Y.CUSTOMER.ID
* Ccy Code
    Y.TMPCREDITOCODIGOMONEDA = R.AA<AA.ARR.CURRENCY>
* CALL REDO.R.COL.GET.MAPPING(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "CURRENCY", Y.TMPCREDITOCODIGOMONEDA)
    APAP.TAM.redoRColGetMapping(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING, "PRODUCT.GROUP", Y.TMPCREDITOCODIGOPRODUCTO) ;*R22 MANUAL CODE CONVERSION
    IF E NE "" THEN
        RETURN
    END

    Y.TMPCREDITONUMEROCONTRATOORIGEN = R.ACCT<AC.ALT.ACCT.ID,1>       ;* Original Contract Number
    Y.TMPCREDITOFECHAINICIO = TRIM(R.AA<AA.ARR.START.DATE>,"","B")
* Due Days & Number of due payments

*CALL L.APAP.S.COL.GET.BILL.DETAILS(AA.ID,R.AA.ACCOUNT.DETAILS,  Y.PROCESS.DATE,  Y.MORA.CTA.VEN, Y.TMPCREDITODIASATRASO, Y.TMPCREDITOCUOTASVENCIDAS, Y.TMPCREDITOCUOTASPAGADAS, Y.TMPCREDITOMONTOMOROSO );*R22 MANUAL CODE CONVERSION
    APAP.LAPAP.lApapSColGetBillDetails(AA.ID,R.AA.ACCOUNT.DETAILS,  Y.PROCESS.DATE,  Y.MORA.CTA.VEN, Y.TMPCREDITODIASATRASO, Y.TMPCREDITOCUOTASVENCIDAS, Y.TMPCREDITOCUOTASPAGADAS, Y.TMPCREDITOMONTOMOROSO)
    Y.TMPCREDITOFECHAPROXIMOPAGO = TRIM(Y.TMPCREDITOFECHAPROXIMOPAGO,"","B")
* Payment Frequency (M,W,etc)
* CALL REDO.S.COL.GET.PAY.FREQ(AA.ID,  R.STATIC.MAPPING, Y.PROCESS.DATE, Y.TMPCREDITOTIPOCUOTA)
    APAP.REDOSRTN.redoSColGetPayFreq(AA.ID,  R.STATIC.MAPPING, Y.PROCESS.DATE, Y.TMPCREDITOTIPOCUOTA) ;*R22 MANUAL CODE CONVERSION
    IF E THEN
        RETURN
    END
* Contract Status
*CALL REDO.S.COL.GET.AA.STATUS(AA.ID, Y.PROCESS.DATE, Y.TMPCREDITOESTADOCONTRATO, Y.TMPCREDITOCOBROJUDICIAL)
    APAP.AA.redoSColGetAaStatus(AA.ID, Y.PROCESS.DATE, Y.TMPCREDITOESTADOCONTRATO, Y.TMPCREDITOCOBROJUDICIAL) ;*R22 MANUAL CODE CONVERDSION
    IF E THEN
        RETURN
    END
*   Y.TMPCREDITOFECHAVCTO = TRIM(R.AA.ACCOUNT.DETAILS<AA.AD.MATURITY.DATE>,"","B")
    Y.TMPCREDITOFECHAVCTO = TRIM(R.AA.ACCOUNT.DETAILS<AA.PaymentSchedule.AccountDetails.AdMaturityDate>,"","B") ;*R22 Manual Code Conversion_Utility Check

    IF R.ACCT<AC.ACCOUNT.OFFICER>[1,10] EQ '' THEN
        Y.TMPCREDITOCODIGOEJECUTIVO = 'MIGRACION' ;* CN008947
    END ELSE
        Y.TMPCREDITOCODIGOEJECUTIVO = R.ACCT<AC.ACCOUNT.OFFICER>[1,10]          ;* Account Officer
    END

    GOSUB GET.PERIOD.BALANCES

    Y.TMPCREDITOMONTOINTMORADIARIO = 0 ;    Y.TYPE.SYSDATE = "ACCPENALTYINT"
    GOSUB GET.PENALTIES
    Y.TMPCREDITOMONTOINTMORADIARIO = ABS(Y.PENALTY.AMOUNT)

    Y.TMPCREDITOMONTOINTCORRDIARIO = 0 ;    Y.TYPE.SYSDATE = "ACCPRINCIPALINT"
    GOSUB GET.PENALTIES
    Y.TMPCREDITOMONTOINTCORRDIARIO = ABS(Y.PENALTY.AMOUNT)

    Y.TMPCREDITOTASAINTERES = TRIM(R.PRINCIPALINT<AA.INT.ACC.RATE,1,1>,"","B")  ;* Principal Interest
*    Y.TMPCREDITOTASAMORAINTERES = TRIM(R.PENALTYINT<AA.INT.ACC.RATE,1,1>,"","B")       ;* Penalty Interest Rate

    Y.TMPCREDITOTASAMORAINTERES = TRIM(R.MORA.CHARGE<1,AA.CHG.CHARGE.RATE>,"","B")

*CALL REDO.S.COL.GET.PAY.TYPE(AA.ID, R.STATIC.MAPPING, Y.PROCESS.DATE, Y.TMPCREDITOFORMAPAGO)
    APAP.REDOSRTN.redoSColGetPayType(AA.ID, R.STATIC.MAPPING, Y.PROCESS.DATE, Y.TMPCREDITOFORMAPAGO) ;*R22 MANUAL CODE CONVERSION
    IF E THEN
        RETURN
    END
    GOSUB GET.HISTORY.PAYMENT
    IF E THEN
        RETURN
    END

    Y.TMPCREDITOFECHAULTIMOPAGO = TRIM(Y.TMPCREDITOFECHAULTIMOPAGO,"","B")

    Y.TMPCREDITOMORAMES01 = Y.TMPCREDITOCUOTASVENCIDAS
    Y.TMPCREDITOMORAMES02 = Y.MORA.CTA.VEN<1>
    Y.TMPCREDITOMORAMES03 = Y.MORA.CTA.VEN<2>
    Y.TMPCREDITOMORAMES04 = Y.MORA.CTA.VEN<3>
    Y.TMPCREDITOMORAMES05 = Y.MORA.CTA.VEN<4>
    Y.TMPCREDITOMORAMES06 = Y.MORA.CTA.VEN<5>
    Y.TMPCREDITOMORAMES07 = Y.MORA.CTA.VEN<6>
    Y.TMPCREDITOMORAMES08 = Y.MORA.CTA.VEN<7>
    Y.TMPCREDITOMORAMES09 = Y.MORA.CTA.VEN<8>
    Y.TMPCREDITOMORAMES10 = Y.MORA.CTA.VEN<9>
    Y.TMPCREDITOMORAMES11 = Y.MORA.CTA.VEN<10>
    Y.TMPCREDITOMORAMES12 = Y.MORA.CTA.VEN<11>

    Y.TMPCREDITOFACTORMONEDACONVERSI = ""
*CALL REDO.R.GET.MID.RATE.CM(R.AA<AA.ARR.CURRENCY>, 1, Y.TMPCREDITOFACTORMONEDACONVERSI)
    APAP.TAM.redoRGetMidRateCm(R.AA<AA.ARR.CURRENCY>, 1, Y.TMPCREDITOFACTORMONEDACONVERSI)
*
    CALL F.READ(FN.CUSTOMER, Y.CUSTOMER.ID, R.CUS.TEMP, F.CUSTOMER, YERR)
    Y.TMPCREDITOCAMPO50 = R.CUS.TEMP<EB.CUS.LOCAL.REF><1,Y.L.CU.SCO.COB.POS>
*
*****PACS00523653****
*    CALL F.READ(FN.REDO.H.PROVISION.PARAMETER,'SYSTEM', R.RHPP,F.REDO.H.PROVISION.PARAMETER, YERR)
    CALL CACHE.READ(FN.REDO.H.PROVISION.PARAMETER,'SYSTEM', R.RHPP, YERR)
*****PACS00523653****
    Y.PROV.GROUP.LIST     =R.RHPP<PROV.PRODUCT.GROUP>
    Y.PROV.LOAN.TYPE.LIST =R.RHPP<PROV.LOAN.TYPE>
    Y.AA.PRD.GRP          =R.AA<AA.ARR.PRODUCT.GROUP>
    LOCATE Y.AA.PRD.GRP IN Y.PROV.GROUP.LIST<1,1> SETTING Y.PROV.LN.POS THEN
        Y.PROV.LOAN.TYPE=Y.PROV.LOAN.TYPE.LIST<1,Y.PROV.LN.POS>
    END

    CALL F.READ(FN.REDO.H.CUSTOMER.PROVISIONING, Y.CUSTOMER.ID, R.RHCP,F.REDO.H.CUSTOMER.PROVISIONING, YERR)
    Y.LOAN.TYPE.LIST             = R.RHCP<REDO.CUS.PROV.LOAN.TYPE>
    LOCATE Y.PROV.LOAN.TYPE IN Y.LOAN.TYPE.LIST<1,1> SETTING Y.CUR.CLASS.POS THEN
        Y.TMPCREDITOTIPOCALIFICACION = R.RHCP<REDO.CUS.PROV.CURRENT.CLASS,Y.CUR.CLASS.POS>
    END

    Y.TMPCREDITOMONTOACTUAL = Y.TMPCREDITOMONTOCAPITALVIGENTE
*
*CALL L.APAP.COL.FF.EXTRACT.CREDIT.2("GET.AA.CUSTOMER", Y.ACCOUNT.ID, AA.ID, "", P.GET.AA.CUSTOMER, "")
    APAP.LAPAP.lApapColFfExtractCredit2("GET.AA.CUSTOMER", Y.ACCOUNT.ID, AA.ID, "", P.GET.AA.CUSTOMER, "")
    
    IF E THEN
        RETURN
    END
    Y.TMPCREDITOCAMPO59 = P.GET.AA.CUSTOMER<1>
    Y.TMPCREDITOCAMPO60 = P.GET.AA.CUSTOMER<2>
*
    PGET.CREDIT.GRANTED = '';   Y.DELIM='~'
*CALL L.APAP.COL.FF.EXTRACT.CREDIT.2("GET.CREDIT.GRANTED", Y.ACCOUNT.ID, AA.ID, PGET.CREDIT.GRANTED, "", "")
    APAP.LAPAP.lApapColFfExtractCredit2("GET.AA.CUSTOMER", Y.ACCOUNT.ID, AA.ID, "", P.GET.AA.CUSTOMER, "") ;*R22 MANUAL CODE CONVERSION
    IF E THEN
        RETURN
    END
    P.GESGARANTIAS = ''; P.GESCREDITOSGARANTIAS = ''; P.GESTIPOGARANTIAS = ''
    IF PGET.CREDIT.GRANTED THEN
        P.GESGARANTIAS = FIELD(PGET.CREDIT.GRANTED,'#',2)
        P.GESCREDITOSGARANTIAS = FIELD(PGET.CREDIT.GRANTED,'#',3)
        P.GESTIPOGARANTIAS = FIELD(PGET.CREDIT.GRANTED,'#',4)
        P.GESCREDITOSGARANTIAS<4> = Y.TMPCREDITOCODIGOAGENCIA
        P.GESCREDITOSGARANTIAS<5> = FMT(Y.TMPCREDITOCODIGOPRODUCTO,"R%6")
        P.GESCREDITOSGARANTIAS<6> = FMT(Y.ACCOUNT.ID,"R%18")

        CHANGE @FM TO Y.DELIM IN P.GESGARANTIAS
        CHANGE @FM TO Y.DELIM IN P.GESCREDITOSGARANTIAS
        CHANGE @FM TO Y.DELIM IN P.GESTIPOGARANTIAS
        PR.GESGARANTIAS<-1> = P.GESGARANTIAS:@VM: Y.PRODUCT.GROUP
*PR.GESCREDITOSGARANTIAS<-1> = P.GESCREDITOSGARANTIAS:Y.DELIM:"0":Y.DELIM: VM : Y.PRODUCT.GROUP
        PR.GESCREDITOSGARANTIAS<-1> = P.GESCREDITOSGARANTIAS:Y.DELIM:"0": @VM : Y.PRODUCT.GROUP
        PR.GESTIPOGARANTIAS<-1> = P.GESTIPOGARANTIAS:@VM : Y.PRODUCT.GROUP

        P.GET.CREDIT.GRANTED = FIELD(PGET.CREDIT.GRANTED,'#',1)
    END
    Y.TMPCREDITOMONTOAPERTURA = P.GET.CREDIT.GRANTED<1>
    Y.TMPCREDITOGARANTIA           = P.GET.CREDIT.GRANTED<2>
*    Y.TMPCREDITOGARANTIA           = P.GET.CREDIT.GRANTED<3>
    Y.TMPCREDITOUBICACIONGARANTIA  = P.GET.CREDIT.GRANTED<4>
    Y.TMPCREDITOVALORGARANTIA      = P.GET.CREDIT.GRANTED<5>
*    Y.TMPCREDITOMONTODEUDATOTAL=Y.TMPCREDITOMONTOCAPITALVIGENTE+Y.TMPCREDITOMONTOINTERESVIGENTE+Y.ACCPENAL.INT+Y.TMPCREDITOMONTOMOROSO
    Y.PROP.AMT=''
    Y.TMPCREDITOMONTODEUDATOTAL=''
* CALL REDO.COL.GET.TOTAL.OUTSTANDING(AA.ID,Y.PROP.AMT,Y.TMPCREDITOMONTODEUDATOTAL)
    APAP.REDORETAIL.redoColGetTotalOutstanding(AA.ID,Y.PROP.AMT,Y.TMPCREDITOMONTODEUDATOTAL) ;*R22 MANUAL CODE CONVERSION

    GOSUB GESTIPOGARANT.SUB
    GOSUB PROCESS.ITEMS.DETAIL
    GOSUB INSERT.STMT

    Y.LWD=R.DATES(EB.DAT.LAST.WORKING.DAY)
*CALL L.APAP.COL.FF.COLLECTOR.TXN(Y.LWD, AA.ID, R.STATIC.MAPPING, Y.ACCOUNT.ID, Y.PRODUCT.GROUP, Y.AGENCY.CODE, Y.CREDIT.TXN)
    APAP.LAPAP.lApapColFfCollectorTxn(Y.LWD, AA.ID, R.STATIC.MAPPING, Y.ACCOUNT.ID, Y.PRODUCT.GROUP, Y.AGENCY.CODE, Y.CREDIT.TXN)
RETURN

GESTIPOGARANT.SUB:
******************
    YTMPCREDITOCODIGOPRODUCTO = FMT(Y.ACCOUNT.ID,"R%18")
    YTMPCREDITOCODIGOAGENCIA = FMT(Y.TMPCREDITOCODIGOAGENCIA,"R%6")
    YTMPCREDITONUMEROCONTRATOORIGEN = FMT(Y.TMPCREDITOCODIGOPRODUCTO,"R%6")
    YAA.CUSTOMER = FMT(P.GET.AA.CUSTOMER<5>,"R%15")
    YAA.CUSTOMER.1 = FMT(Y.ACCOUNT.ID,"R%18")
*P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0001":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0":Y.DELIM
    P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0001":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0"
    Y.ROLE = P.GET.AA.CUSTOMER<3>
    Y.OTHER.PARTY = P.GET.AA.CUSTOMER<4>

    IF NOT(Y.ROLE) THEN
        RETURN
    END
    Y.ROLE.CNT = DCOUNT(Y.ROLE,@VM)
    Y.CNT = 1
    LOOP
    WHILE Y.CNT LE Y.ROLE.CNT
        Y.ROLE.ID = Y.ROLE<1,Y.CNT>
        YP.CUSTOMER.ID = ''
        IF Y.ROLE.ID EQ 'CO-SIGNER' THEN
            YP.CUSTOMER.ID = Y.OTHER.PARTY<1,Y.CNT>
            YAA.CUSTOMER = FMT(YP.CUSTOMER.ID,"R%15")
*P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0002":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0":Y.DELIM
            P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0002":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0"
        END
        IF Y.ROLE.ID EQ 'GUARANTOR' THEN
            YP.CUSTOMER.ID = Y.OTHER.PARTY<1,Y.CNT>
            YAA.CUSTOMER = FMT(YP.CUSTOMER.ID,"R%15")
*P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0003":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0":Y.DELIM
            P.GESCREDITOINTEGRACION<-1> = "1":Y.DELIM:"1":Y.DELIM:"BPR":Y.DELIM:YTMPCREDITOCODIGOAGENCIA:Y.DELIM:YTMPCREDITONUMEROCONTRATOORIGEN:Y.DELIM:YAA.CUSTOMER.1:Y.DELIM:"0003":Y.DELIM:YAA.CUSTOMER:Y.DELIM:YTMPCREDITOCODIGOPRODUCTO:Y.DELIM:"0":Y.DELIM:"0"
        END
        Y.CNT ++
    REPEAT
RETURN

*-----------------------------------------------------------------------------
* Initialise Process variables
INITIALISE:
*-----------------------------------------------------------------------------
    P.TABLE = "TMPCREDITO"
    PROCESS.GOAHEAD = 1
    Y.PROCESS.DATE = C.REPORT.PROCESS.DATE        ;* R.DATES(EB.DAT.LAST.WORKING.DAY) ;* TODAY

    R.AA   = ""     ;* AA.ARRANGEMENT
    R.ACCOUNT.DETAILS = ""    ;* AA.ACCOUNT.DETAILS
    R.ACCT = ""     ;* ACCOUNT

    R.STATIC.MAPPING    =  C.STATIC.MAPPING       ;* Static Mapping
*CALL REDO.R.COL.GET.MAPPING(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING.OUT, "", "")
    APAP.TAM.redoRColGetMapping(C.ID.STATIC.MAPPING, R.STATIC.MAPPING, 1, R.STATIC.MAPPING.OUT, "PRODUCT.GROUP", Y.TMPCREDITOCODIGOPRODUCTO) ;*R22 MANUAL CODE CONVERSION
    IF E THEN
        RETURN
    END
    R.STATIC.MAPPING = R.STATIC.MAPPING.OUT
*    Y.INS.STMT = C.INS.CREDIT.STMT

RETURN

* ---------------------------------------------------------------------------------------------
* Initialise variables for INSERT statement
INITIALISE.VARS:
* ---------------------------------------------------------------------------------------------

* Variables to use building the INSERT statement
    Y.TMPCREDITOCODIGOTIPOINVERSION=""
    Y.TMPCREDITOCODIGOAGENCIA = ""           ;     Y.TMPCREDITOCODIGOPRODUCTO = ""
    Y.TMPCREDITONUMEROCONTRATO = ""          ;     Y.TMPCREDITOCODIGOCLIENTE = ""
    Y.TMPCREDITOCODIGOMONEDA = ""            ;     Y.TMPCREDITONUMEROCONTRATOORIGEN = ""
    Y.TMPCREDITODIASATRASO = ""              ;     Y.TMPCREDITOCANTIDADCUOTASTOTAL = ""
    Y.TMPCREDITOCUOTASCREADAS = ""           ;     Y.TMPCREDITOCUOTASVENCIDAS = ""
    Y.TMPCREDITOCUOTASPAGADAS = ""           ;     Y.TMPCREDITOTIPOCUOTA = ""
    Y.TMPCREDITOESTADOCONTRATO = ""          ;     Y.TMPCREDITOFECHAINICIO = ""
    Y.TMPCREDITOFECHAVCTO = ""               ;     Y.TMPCREDITOMONTOMENSUALIDAD = ""
    Y.TMPCREDITOMONTOAPERTURA = ""           ;     Y.TMPCREDITOMONTOCAPITALVIGENTE = ""
    Y.TMPCREDITOMONTOCAPITALMOROSO = ""      ;     Y.TMPCREDITOMONTOCAPITALVENCIDO = ""
    Y.TMPCREDITOMONTOINTERESMOROSO = ""      ;     Y.TMPCREDITOMONTOINTERESVIGENTE = ""
    Y.TMPCREDITOMONTOINTERESVENCIDO = ""     ;     Y.TMPCREDITOMONTOSEGUROVIDAVENCI = 0
    Y.TMPCREDITOMONTOSEGUROFISICOVEN = 0     ;     Y.TMPCREDITOMONTOSEGUROVIDAVIGEN = 0
    Y.TMPCREDITOMONTOSEGUROFISICOVIG = 0     ;     Y.TMPCREDITOMONTOVIGENTEOTROS = 0
    Y.TMPCREDITOMONTOMOROSOOTROS = 0         ;     Y.TMPCREDITOMONTODEUDATOTAL = ""
    Y.TMPCREDITOMONTOMOROSO = ""             ;     Y.TMPCREDITOMONTOINTMORADIARIO = ""
    Y.TMPCREDITOMONTOINTCORRDIARIO = ""      ;     Y.TMPCREDITOTASAINTERES = ""
    Y.TMPCREDITOTASAMORAINTERES = ""         ;     Y.TMPCREDITOCODIGOEJECUTIVO = ""
    Y.TMPCREDITOFORMAPAGO = ""               ;     Y.TMPCREDITOFECHAULTIMOPAGO = ""
    Y.TMPCREDITOMONTOULTIMOPAGO = ""         ;     Y.TMPCREDITOFECHAPROXIMOPAGO = ""
    Y.TMPCREDITOTIPOCALIFICACION = ""        ;     Y.TMPCREDITOFECHAENTRADACOBRO = ""
    Y.TMPCREDITOCOBROJUDICIAL = ""           ;     Y.TMPCREDITOCODIGOVISTACREDITO = ""
    Y.TMPCREDITOMORAMES01 = ""               ;     Y.TMPCREDITOMORAMES02 = ""
    Y.TMPCREDITOMORAMES03 = ""               ;     Y.TMPCREDITOMORAMES04 = ""
    Y.TMPCREDITOMORAMES05 = ""               ;     Y.TMPCREDITOMORAMES06 = ""
    Y.TMPCREDITOMORAMES07 = ""               ;     Y.TMPCREDITOMORAMES08 = ""
    Y.TMPCREDITOMORAMES09 = ""               ;     Y.TMPCREDITOMORAMES10 = ""
    Y.TMPCREDITOMORAMES11 = ""               ;     Y.TMPCREDITOMORAMES12 = ""
    Y.TMPCREDITOFACTORMONEDACONVERSI = ""    ;     Y.TMPCREDITOCAMPO59 = ""
    Y.TMPCREDITOCAMPO60 = ""                 ;     Y.TMPCREDITOGARANTIA = ""
    Y.TMPCREDITOUBICACIONGARANTIA = ""       ;     Y.TMPCREDITOVALORGARANTIA = ""
    Y.TMPCREDITOMONTOACTUAL = ""

RETURN

*-----------------------------------------------------------------------------
* Create INSERT statement
INSERT.STMT:
*-----------------------------------------------------------------------------
    Y.TMPCREDITOCODIGOTIPOINVERSION= TRIM(Y.TMPCREDITOCODIGOTIPOINVERSION,"","B")
    Y.TMPCREDITOCODIGOAGENCIA      = TRIM(Y.TMPCREDITOCODIGOAGENCIA,"","B")
    Y.TMPCREDITOCODIGOPRODUCTO = TRIM(Y.TMPCREDITOCODIGOPRODUCTO,"","B")
    Y.TMPCREDITONUMEROCONTRATO = TRIM(Y.TMPCREDITONUMEROCONTRATO,"","B")
    Y.TMPCREDITOCODIGOCLIENTE = TRIM(Y.TMPCREDITOCODIGOCLIENTE,"","B")
    Y.TMPCREDITOCODIGOMONEDA = TRIM(Y.TMPCREDITOCODIGOMONEDA,"","B")
    Y.TMPCREDITONUMEROCONTRATOORIGEN = TRIM(Y.TMPCREDITONUMEROCONTRATOORIGEN,"","B")
    Y.TMPCREDITOCUOTASCREADAS=Y.AL.PAID.BILLS.CNT+Y.TMPCREDITOCUOTASVENCIDAS+Y.TMPCREDITOCUOTASPAGADAS
    Y.TMPCREDITOCUOTASCREADAS = TRIM(Y.TMPCREDITOCUOTASCREADAS,"","B")
    Y.TMPCREDITOCUOTASVENCIDAS = TRIM(Y.TMPCREDITOCUOTASVENCIDAS,"","B")
    Y.TMPCREDITOTIPOCUOTA = TRIM(Y.TMPCREDITOTIPOCUOTA,"","B")
    Y.TMPCREDITOESTADOCONTRATO = TRIM(Y.TMPCREDITOESTADOCONTRATO,"","B")
    Y.TMPCREDITOMONTOMENSUALIDAD = TRIM(Y.TMPCREDITOMONTOMENSUALIDAD,"","B")
    Y.TMPCREDITOMONTOAPERTURA = TRIM(Y.TMPCREDITOMONTOAPERTURA,"","B")
    Y.TMPCREDITOCODIGOEJECUTIVO = TRIM(Y.TMPCREDITOCODIGOEJECUTIVO,"","B")
    Y.TMPCREDITOFORMAPAGO = TRIM(Y.TMPCREDITOFORMAPAGO,"","B")
    Y.TMPCREDITOMONTOULTIMOPAGO = TRIM(Y.TMPCREDITOMONTOULTIMOPAGO,"","B")
    Y.TMPCREDITOTIPOCALIFICACION = TRIM(Y.TMPCREDITOTIPOCALIFICACION,"","B")
    Y.TMPCREDITOFECHAENTRADACOBRO = TRIM(Y.TMPCREDITOFECHAENTRADACOBRO,"","B")
    Y.TMPCREDITOCOBROJUDICIAL = TRIM(Y.TMPCREDITOCOBROJUDICIAL,"","B")
    Y.TMPCREDITOCODIGOVISTACREDITO = TRIM(Y.TMPCREDITOCODIGOVISTACREDITO,"","B")
    Y.TMPCREDITOMORAMES01 = TRIM(Y.TMPCREDITOMORAMES01,"","B")
    Y.TMPCREDITOMORAMES02 = TRIM(Y.TMPCREDITOMORAMES02,"","B")
    Y.TMPCREDITOMORAMES03 = TRIM(Y.TMPCREDITOMORAMES03,"","B")
    Y.TMPCREDITOMORAMES04 = TRIM(Y.TMPCREDITOMORAMES04,"","B")
    Y.TMPCREDITOMORAMES05 = TRIM(Y.TMPCREDITOMORAMES05,"","B")
    Y.TMPCREDITOMORAMES06 = TRIM(Y.TMPCREDITOMORAMES06,"","B")
    Y.TMPCREDITOMORAMES07 = TRIM(Y.TMPCREDITOMORAMES07,"","B")
    Y.TMPCREDITOMORAMES08 = TRIM(Y.TMPCREDITOMORAMES08,"","B")
    Y.TMPCREDITOMORAMES09 = TRIM(Y.TMPCREDITOMORAMES09,"","B")
    Y.TMPCREDITOMORAMES10 = TRIM(Y.TMPCREDITOMORAMES10,"","B")
    Y.TMPCREDITOMORAMES11 = TRIM(Y.TMPCREDITOMORAMES11,"","B")
    Y.TMPCREDITOMORAMES12 = TRIM(Y.TMPCREDITOMORAMES12,"","B")
    Y.TMPCREDITOFACTORMONEDACONVERSI = TRIM(Y.TMPCREDITOFACTORMONEDACONVERSI,"","B")
    Y.TMPCREDITOCAMPO59 = TRIM(Y.TMPCREDITOCAMPO59,"","B")
    Y.TMPCREDITOCAMPO60 = TRIM(Y.TMPCREDITOCAMPO60,"","B")
    Y.TMPCREDITOGARANTIA = TRIM(Y.TMPCREDITOGARANTIA,"","B")
    Y.TMPCREDITOUBICACIONGARANTIA = TRIM(Y.TMPCREDITOUBICACIONGARANTIA,"","B")
    Y.TMPCREDITOVALORGARANTIA = TRIM(Y.TMPCREDITOVALORGARANTIA,"","B")
    Y.TMPCREDITOMONTOACTUAL = TRIM(Y.TMPCREDITOMONTOACTUAL,"","B")
    Y.TMPCREDITOCODIGOZONACOBRO = "1"
    Y.TMPCREDITOMONTOADELANTADO = "0"
    Y.TMPCREDITOSALDOCASTIGADO = ''
    Y.TMPCREDITOCODIGOCARTERACLIENTE = "1"

    Y.DELIM='~'
    Y.INS.VALUES = ""
*                    1            2                     3                                           4
    Y.INS.VALUES := "1":Y.DELIM:"BPR":Y.DELIM:Y.TMPCREDITOCODIGOCARTERACLIENTE:Y.DELIM:Y.TMPCREDITOCODIGOTIPOINVERSION:Y.DELIM
*                        5                                        6
    Y.INS.VALUES := Y.TMPCREDITOCODIGOAGENCIA : Y.DELIM: Y.TMPCREDITOCODIGOPRODUCTO : Y.DELIM
*                       7                                         8                                          9
    Y.INS.VALUES := Y.TMPCREDITONUMEROCONTRATO : Y.DELIM : Y.TMPCREDITOCODIGOCLIENTE : Y.DELIM : Y.TMPCREDITOCODIGOMONEDA : Y.DELIM
*                      10                                            11                               12
    Y.INS.VALUES := Y.TMPCREDITONUMEROCONTRATOORIGEN : Y.DELIM :Y.TMPCREDITOCODIGOZONACOBRO: Y.DELIM: "1" : Y.DELIM
*                            13                                          14                                         15
    Y.INS.VALUES := TRIM(Y.TMPCREDITODIASATRASO,"","B") : Y.DELIM : Y.TMPCREDITOCANTIDADCUOTASTOTAL : Y.DELIM: Y.TMPCREDITOCUOTASCREADAS : Y.DELIM
*                       16                                         17                                              18
    Y.INS.VALUES := Y.TMPCREDITOCUOTASVENCIDAS : Y.DELIM : TRIM(Y.TMPCREDITOCUOTASPAGADAS,"","B") : Y.DELIM : Y.TMPCREDITOTIPOCUOTA : Y.DELIM
*                      19                                     20                                  21
    Y.INS.VALUES := Y.TMPCREDITOESTADOCONTRATO : Y.DELIM : Y.TMPCREDITOFECHAINICIO : Y.DELIM : Y.TMPCREDITOFECHAVCTO : Y.DELIM
*                     22                                        23                                    24
    Y.INS.VALUES := Y.TMPCREDITOMONTOMENSUALIDAD : Y.DELIM: Y.TMPCREDITOMONTOAPERTURA : Y.DELIM : Y.TMPCREDITOMONTOCAPITALVIGENTE : Y.DELIM
*                     25                                        26                                        27
    Y.INS.VALUES := Y.TMPCREDITOMONTOCAPITALMOROSO : Y.DELIM: Y.TMPCREDITOMONTOCAPITALVENCIDO : Y.DELIM : Y.TMPCREDITOMONTOINTERESMOROSO : Y.DELIM
*                             28                                           29                                        30
    Y.INS.VALUES := Y.TMPCREDITOMONTOINTERESVIGENTE : Y.DELIM: Y.TMPCREDITOMONTOINTERESVENCIDO : Y.DELIM : Y.TMPCREDITOMONTOSEGUROVIDAVENCI : Y.DELIM
*                           31                                           32                                           33
    Y.INS.VALUES := Y.TMPCREDITOMONTOSEGUROFISICOVEN : Y.DELIM : Y.TMPCREDITOMONTOSEGUROVIDAVIGEN : Y.DELIM : Y.TMPCREDITOMONTOSEGUROFISICOVIG : Y.DELIM
*                         34                                       35                                    36
    Y.INS.VALUES := Y.TMPCREDITOSALDOCASTIGADO: Y.DELIM:Y.TMPCREDITOMONTOVIGENTEOTROS : Y.DELIM : Y.TMPCREDITOMONTOMOROSOOTROS :Y.DELIM
*                           37                                           38                                           39
    Y.INS.VALUES := Y.TMPCREDITOMONTODEUDATOTAL : Y.DELIM: TRIM(Y.TMPCREDITOMONTOMOROSO,"","B") : Y.DELIM: Y.TMPCREDITOMONTOINTMORADIARIO : Y.DELIM
*                            40                                            41                                  42
    Y.INS.VALUES := Y.TMPCREDITOMONTOINTCORRDIARIO : Y.DELIM: Y.TMPCREDITOTASAINTERES : Y.DELIM : Y.TMPCREDITOTASAMORAINTERES : Y.DELIM
*                          43                                           44                          45
    Y.INS.VALUES := Y.TMPCREDITOCODIGOEJECUTIVO : Y.DELIM: Y.TMPCREDITOFORMAPAGO : Y.DELIM : Y.TMPCREDITOFECHAULTIMOPAGO : Y.DELIM
*                       46                                            47                                      48
    Y.INS.VALUES := Y.TMPCREDITOMONTOULTIMOPAGO : Y.DELIM : Y.TMPCREDITOFECHAPROXIMOPAGO : Y.DELIM : Y.TMPCREDITOTIPOCALIFICACION : Y.DELIM
*                      49                                   50          51           52         53           54         55          56
    Y.INS.VALUES := Y.TMPCREDITOFECHAENTRADACOBRO : Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  57          58          59          60          61          62         63           64          65          66         67
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  68          69         70           71          72          73          74         75           76          77         78
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  79          80          81          82          83         84           85          86         87           88
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                         89                                    90
    Y.INS.VALUES := Y.TMPCREDITOCOBROJUDICIAL : Y.DELIM : Y.TMPCREDITOCODIGOVISTACREDITO : Y.DELIM
*                         91                                   92                               93                            94
    Y.INS.VALUES := Y.TMPCREDITOMORAMES01 : Y.DELIM : Y.TMPCREDITOMORAMES02 : Y.DELIM : Y.TMPCREDITOMORAMES03 : Y.DELIM : Y.TMPCREDITOMORAMES04 : Y.DELIM
*                      95                                96                                 97                              98
    Y.INS.VALUES := Y.TMPCREDITOMORAMES05 : Y.DELIM : Y.TMPCREDITOMORAMES06 : Y.DELIM: Y.TMPCREDITOMORAMES07 : Y.DELIM: Y.TMPCREDITOMORAMES08 : Y.DELIM
*                     99                               100                             101                               102
    Y.INS.VALUES := Y.TMPCREDITOMORAMES09 : Y.DELIM : Y.TMPCREDITOMORAMES10 : Y.DELIM : Y.TMPCREDITOMORAMES11 : Y.DELIM : Y.TMPCREDITOMORAMES12 : Y.DELIM
*                      103                                    104         105         106         107         108
    Y.INS.VALUES := Y.TMPCREDITOFACTORMONEDACONVERSI : Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  109         110                  111                 112         113         114         115        116          117         118
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:Y.TMPCREDITOCAMPO03: Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  119         120        121          122         123         124         125         126         127         128
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  129         130        131          132         133         134         135        136         137          138
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  139         140        141         142         143          144         145        146         147          148
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  149         150         151         152                  153                154         155         156             157                                158
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:Y.TMPCREDITOCAMPO45: Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:Y.TMPCREDITONUMEROCONTRATO: Y.DELIM:Y.TMPCREDITOCAMPO50: Y.DELIM
*                  159         160         161          162         163         164        165          166        167             168
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:Y.TMPCREDITOCAMPO60: Y.DELIM
*                         169                               170                                171                172
    Y.INS.VALUES := Y.TMPCREDITOGARANTIA : Y.DELIM: Y.TMPCREDITOUBICACIONGARANTIA : Y.DELIM:"":Y.DELIM: Y.TMPCREDITOVALORGARANTIA : Y.DELIM
*                  173          174        175          176        177         178         179         180         181         182         183
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  184          185         186        187         188         189         190         191         192         193
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                     194                              195
    Y.INS.VALUES := Y.TMPCREDITOMONTOACTUAL : Y.DELIM : "1" : Y.DELIM
*                  196         197         198         199         200        201         202         203         204         205         206
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  207        208          209         210        211          212        213          214        215          216         217
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*                  218        219          220         221         222         223         224        225          226
    Y.INS.VALUES :="": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM:"": Y.DELIM
*:"": Y.DELIM
    R.REDO.COL.QUEUE = Y.INS.VALUES
    Y.CREDIT<-1> = R.REDO.COL.QUEUE : @VM : Y.PRODUCT.GROUP


RETURN

*-----------------------------------------------------------------------------
PAYMENT.SCHEDULE.DETAILS:
*-----------------------------------------------------------------------------
    DUE.DATES = ''  ;* Holds the list of Schedule due dates
    DUE.TYPES = ''  ;* Holds the list of Payment Types for the above dates
    DUE.TYPE.AMTS = ''        ;* Holds the Payment Type amounts
    DUE.PROPS = ''  ;* Holds the Properties due for the above type
    DUE.PROP.AMTS = ''        ;* Holds the Property Amounts for the Properties above
    DUE.OUTS = ''   ;* Oustanding Bal for the date
    DUE.METHODS = ""
    TOT.PAYMENT = ''
    DATE.REQD = ''
    CYCLE.DATE = ''
    SIM.REF = ''

    Y.TMPCREDITOCANTIDADCUOTASTOTAL = 0
    Y.TMPCREDITOCUOTASCREADAS = 0
    Y.TMPCREDITOMONTOMENSUALIDAD = ""
    Y.MEN.FLAG = @FALSE       ;*PACS00169639

*   CALL AA.SCHEDULE.PROJECTOR(AA.ID, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES, DUE.DEFER.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)   ;* Routine to Project complete schedules
    AA.PaymentSchedule.ScheduleProjector(AA.ID, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES, DUE.DEFER.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS) ;*R22 Manual Code Conversion_Utility Check
    Y.TMPCREDITOCANTIDADCUOTASTOTAL = DCOUNT(DUE.DATES,@FM)

    IF Y.TMPCREDITOCANTIDADCUOTASTOTAL GT 0 THEN
        I = 1
        LOOP WHILE I LE Y.TMPCREDITOCANTIDADCUOTASTOTAL
            IF DUE.DATES<I> LE Y.PROCESS.DATE THEN
                Y.TMPCREDITOCUOTASCREADAS++
            END
            IF Y.MEN.FLAG EQ @FALSE AND DUE.DATES<I> GT Y.PROCESS.DATE THEN
                Y.TMPCREDITOMONTOMENSUALIDAD  = 0 ;* Could be we are running the enquiry after its maturity date, then there is no next payment
                DCNT = I
                TOT.PAY.TYPE = DCOUNT(DUE.TYPES<DCNT>,@VM)
                GOSUB GET.ALL.PAYMENTS.DETAIL
                Y.TMPCREDITOMONTOMENSUALIDAD =  TOT.DUE.PAYM
                Y.TMPCREDITOFECHAPROXIMOPAGO =  DUE.DATES<DCNT>
                Y.MEN.FLAG = @TRUE      ;*PACS00169639
            END
            I++
        REPEAT
    END

RETURN
*------------------------------------------------------
GET.ALL.PAYMENTS.DETAIL:
*------------------------------------------------------

    PAY.CNT = 1
    LOOP WHILE PAY.CNT LE TOT.PAY.TYPE
        GOSUB GET.PAYMENT.DETAIL
        PAY.CNT++
    REPEAT
RETURN
*------------------------------------------------------
GET.PAYMENT.DETAIL:
*------------------------------------------------------
    PROP.LIST = DUE.PROPS<DCNT,PAY.CNT>
    PROP.LIST = RAISE(PROP.LIST)
    CALL AA.GET.PROPERTY.CLASS(PROP.LIST,PROP.CLS.LIST)
    TOT.PROP = DCOUNT(PROP.LIST,@VM)
    PROP.CNT = 1
    LOOP WHILE PROP.CNT LE TOT.PROP
        PROP.AMT = DUE.PROP.AMTS<DCNT,PAY.CNT,PROP.CNT>
        IF DUE.METHODS<DCNT,PAY.CNT,PROP.CNT> EQ 'DUE' THEN
            TOT.DUE.PAYM += PROP.AMT
        END
        PROP.CNT ++
    REPEAT
RETURN
*** </region>
*------------------------------------------------------
GET.PERIOD.BALANCES:
*------------------------------------------------------
    Y.TMPCREDITOMONTOCAPITALVIGENTE = 0
    Y.AA.BALANCE.LIST = C.AA.PERIOD.BALANCES.TYPE
    Y.OUT.AA.AMOUNT.LIST = ""
* CALL REDO.S.GET.PERIOD.AMTS(Y.ACCOUNT.ID,Y.PROCESS.DATE, Y.PROCESS.DATE, Y.AA.BALANCE.LIST, Y.OUT.AA.AMOUNT.LIST)
    APAP.REDOSRTN.redoSGetPeriodAmts(Y.ACCOUNT.ID,Y.PROCESS.DATE, Y.PROCESS.DATE, Y.AA.BALANCE.LIST, Y.OUT.AA.AMOUNT.LIST) ;*R22 MANUAL CODE CONVERSION
    Y.TMPCREDITOMONTOCAPITALVIGENTE = Y.OUT.AA.AMOUNT.LIST<1,1>       ;* Current Outstanding - VIGENTE
    Y.TMPCREDITOMONTOCAPITALMOROSO = Y.OUT.AA.AMOUNT.LIST<2,1>        ;* Age Outstanding - MOROSO
    Y.TMPCREDITOMONTOCAPITALVENCIDO = Y.OUT.AA.AMOUNT.LIST<3,1>       ;* Due Outstanding - VENCIDO
    Y.TMPCREDITOMONTOINTERESMOROSO = Y.OUT.AA.AMOUNT.LIST<4,1>        ;* Age Interest    - MOROSO
    Y.TMPCREDITOMONTOINTERESVIGENTE = Y.OUT.AA.AMOUNT.LIST<5,1>       ;* Acc Interest    - VIGENTE
    Y.TMPCREDITOMONTOINTERESVENCIDO = Y.OUT.AA.AMOUNT.LIST<6,1>       ;* Due Interest    - VENCIDO
    Y.ACCPENAL.INT                  = Y.OUT.AA.AMOUNT.LIST<7,1>
RETURN

*-----------------------------------------------------------------------------
* In AA.ARRANGEMENT, search by arrangement ID:
* 1. For every arrangement, fetch value from LINKED.APPL.ID field, 2. Go to EB.CONTRACT.BALANCES, and search by ID, using the value fetched in step 1,  3. Fetch absolute value from OPEN.BALANCE field from the multivalue set that starts in TYPE.SYSDATE field and ends in CURR.ASSET.TYPE field, when TYPE.SYSDATE field is equal to CURACCOUNT,* 4. Fetch absolute value from CREDIT.MVMT field and from the multivalue set that starts in TYPE.SYSDATE field and ends in CURR.ASSET.TYPE field, when TYPE.SYSDATE field contains CURACCOUNT,* 5. Fetch value from DEBIT.MVMT field from the multivalue set that starts in TYPE.SYSDATE field and ends in CURR.ASSET.TYPE field, when TYPE.SYSDATE field contains CURACCOUNT, which es closest to TODAY's date,* 6. Add values from step 3 and 4, substract the value from step 5, and add the value from TMPCREDITOMONTOMOROSO field for that arrangement, and display the total amount here.'
GET.TOTAL.AMOUNT:
*-----------------------------------------------------------------------------
    Y.TYPE.SYSDATE = "CURACCOUNT"
    Y.TMPCREDITOMONTODEUDATOTAL = 0
    LOCATE Y.TYPE.SYSDATE IN R.EB.CONTRACT.BALANCES<ECB.TYPE.SYSDATE,1> SETTING Y.POS.VM THEN
        Y.TMPCREDITOMONTODEUDATOTAL = ABS(SUM(R.EB.CONTRACT.BALANCES<ECB.OPEN.BALANCE,Y.POS.VM>))
    END
    GOSUB GET.PENALTIES
    Y.TMPCREDITOMONTODEUDATOTAL =  Y.TMPCREDITOMONTODEUDATOTAL + ABS(Y.ECB.CREDIT.MVT) - Y.ECB.DEBIT.MVT + Y.TMPCREDITOMONTOMOROSO
RETURN

**-----------------------------------------------------------------------------
GET.PENALTIES:
*-----------------------------------------------------------------------------
    Y.PENALTY.AMOUNT = 0
    Y.TYPE.SYSDATE.LIST = R.EB.CONTRACT.BALANCES<ECB.TYPE.SYSDATE>
    Y.TOTAL = DCOUNT(Y.TYPE.SYSDATE.LIST, @VM)
    Y.ECB.CREDIT.MVT = 0
    Y.ECB.DEBIT.MVT = 0
    I = 1
    LOOP WHILE I LE Y.TOTAL
        Y.TYPE.SYSDATE.CURR = Y.TYPE.SYSDATE.LIST<1,I>
        IF Y.TYPE.SYSDATE.CURR["-",1,1] EQ Y.TYPE.SYSDATE THEN
            Y.DATE = Y.TYPE.SYSDATE.CURR["-",2,1]
            IF Y.DATE NE "" AND Y.DATE LE Y.PROCESS.DATE THEN
                Y.ECB.CREDIT.MVT = R.EB.CONTRACT.BALANCES<ECB.CREDIT.MVMT,I,1>
                Y.ECB.DEBIT.MVT = R.EB.CONTRACT.BALANCES<ECB.DEBIT.MVMT,I,1>
                Y.PENALTY.AMOUNT = R.EB.CONTRACT.BALANCES<ECB.CREDIT.MVMT,I,1> + R.EB.CONTRACT.BALANCES<ECB.DEBIT.MVMT,I,1>
            END
        END
        I++
    REPEAT
RETURN

*-----------------------------------------------------------------------------
GET.HISTORY.PAYMENT:
*-----------------------------------------------------------------------------

* CALL L.APAP.B.COL.FF.EXT.LAST.PAY(AA.ID,Y.TOTAL.CUOTAS,Y.LASTPAY.AMT, Y.LASTPAY.DAT,Y.NEXTPAY.AMT,Y.NEXTPAY.DATE,Y.AL.PAID.BILLS.CNT)
    APAP.LAPAP.lApapBColFfExtLastPay(AA.ID,Y.TOTAL.CUOTAS,Y.LASTPAY.AMT, Y.LASTPAY.DAT,Y.NEXTPAY.AMT,Y.NEXTPAY.DATE,Y.AL.PAID.BILLS.CNT);*R22 MANUAL CODE CONVERSION

    Y.TMPCREDITOFECHAULTIMOPAGO=Y.LASTPAY.DAT
    Y.TMPCREDITOMONTOULTIMOPAGO=Y.LASTPAY.AMT
    Y.TMPCREDITOCANTIDADCUOTASTOTAL=Y.TOTAL.CUOTAS
    Y.TMPCREDITOMONTOMENSUALIDAD =Y.NEXTPAY.AMT
    Y.TMPCREDITOFECHAPROXIMOPAGO =Y.NEXTPAY.DATE
RETURN
*-----------------------------------------------------------------------------
PROCESS.ITEMS.DETAIL:
*-----------------------------------------------------------------------------

    P.PROCESS.ITEMS.DETAILS = ''
* CALL L.APAP.COL.FF.EXTRACT.CREDIT.2("PROCESS.ITEMS.DETAIL", Y.ACCOUNT.ID, AA.ID, "", "", P.PROCESS.ITEMS.DETAILS)
    APAP.LAPAP.lApapColFfExtractCredit2("PROCESS.ITEMS.DETAIL", Y.ACCOUNT.ID, AA.ID, "", "", P.PROCESS.ITEMS.DETAILS)
*    Y.TMPCREDITOMONTOSEGUROVIDAVIGEN = TRIM(P.PROCESS.ITEMS.DETAILS<1>,"","B")
*    Y.TMPCREDITOMONTOSEGUROVIDAVENCI = TRIM(P.PROCESS.ITEMS.DETAILS<2>,"","B")
*    Y.TMPCREDITOMONTOSEGUROFISICOVIG = TRIM(P.PROCESS.ITEMS.DETAILS<3>,"","B")
*    Y.TMPCREDITOMONTOSEGUROFISICOVEN = TRIM(P.PROCESS.ITEMS.DETAILS<4>,"","B")
*    Y.TMPCREDITOMONTOVIGENTEOTROS    = TRIM(P.PROCESS.ITEMS.DETAILS<5>,"","B")
    Y.TMPCREDITOMONTOMOROSOOTROS      = TRIM(P.PROCESS.ITEMS.DETAILS,"","B")

RETURN
*----------------------------------------------------------------------------
CHECK.SELECTION.CRITERIA.AA:
* Check if the current AA "commits" with filter C.AA.STA... & C.AA.PRD... are initiliazed in REDO.COL.EXTRACT.LOAD
*----------------------------------------------------------------------------
    Y.CONTINUE.AA = @FALSE

    LOCATE "ACCOUNT" IN R.AA<AA.ARR.LINKED.APPL,1> SETTING Y.POS THEN
        Y.ACCOUNT.ID =  R.AA<AA.ARR.LINKED.APPL.ID,Y.POS>
    END
    CALL F.READ(FN.ACCOUNT, Y.ACCOUNT.ID ,R.ACCT, F.ACCOUNT, YERR)

    IF R.AA<AA.ARR.ARR.STATUS> EQ 'CURRENT' AND R.ACCT<AC.POSTING.RESTRICT> EQ '75' THEN
        Y.AA.ARR.ACCT.ST='CANCELLED'
    END
    ELSE
        Y.AA.ARR.ACCT.ST=R.AA<AA.ARR.ARR.STATUS>
    END
    IF Y.AA.ARR.ACCT.ST MATCHES C.AA.STA.SELECTION THEN
        Y.CONTINUE.AA = R.AA<AA.ARR.PRODUCT.GROUP> MATCHES C.AA.PRD.SELECTION
    END

RETURN

END
