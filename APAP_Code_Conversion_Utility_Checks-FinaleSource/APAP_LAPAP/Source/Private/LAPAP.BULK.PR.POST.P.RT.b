* @ValidationCode : MjoxNTQ2NjI2NTQwOkNwMTI1MjoxNzAyOTg4MzY3ODMxOklUU1MxOi0xOi0xOjA6MTpmYWxzZTpOL0E6UjIyX1NQNS4wOi0xOi0x
* @ValidationInfo : Timestamp         : 19 Dec 2023 17:49:27
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS1
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R22_SP5.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.LAPAP

SUBROUTINE LAPAP.BULK.PR.POST.P.RT
*------------------------------------------------------------------------
* Modification History :
*------------------------------------------------------------------------
*  DATE             WHO                   REFERENCE
* 09-AUG-2023      Harsha                R22 Manual Conversion - BP removed from Inserts and OFS.GLOBUS.MANAGER to OFS.CALL.BULK.MANAGER
* 19-12-2023    Santosh C           MANUAL R22 CODE CONVERSION   APAP Code Conversion Utility Check
*------------------------------------------------------------------------
    $INSERT I_EQUATE
    $INSERT I_COMMON
*   $INSERT I_GTS.COMMON ;*R22 Manual Code Conversion_Utility Check
    $INSERT I_System
    $INSERT I_F.DATES
    $INSERT I_F.LAPAP.BULK.PAYROLL
    $INSERT I_F.ST.LAPAP.BULK.PAYROLL.DET
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.AC.LOCKED.EVENTS
    $USING EB.Interface



    GOSUB DO.INITIALIZE
    GOSUB DO.SELECT.PROCESSING

RETURN

DO.INITIALIZE:
    CALL OCOMO('Waiting 60 seconds before executing LAPAP.BULK.PR.POST.P.RT')
    SLEEP 60

    FN.BPR = 'F.ST.LAPAP.BULK.PAYROLL'
    F.BPR = ''
    CALL OPF(FN.BPR,F.BPR)

    FN.BPRD = 'FBNK.ST.LAPAP.BULK.PAYROLL.DET'
    F.BPRD = ''
    CALL OPF(FN.BPRD,F.BPRD)

    FN.FT = 'FBNK.FUNDS.TRANSFER'
    F.FT = ''
    CALL OPF(FN.FT,F.FT)

    APPL.NAME.ARR = "FUNDS.TRANSFER"
    FLD.NAME.ARR = "L.COMMENTS" : @VM : "L.FT.CONCEPT" : @VM : "L.PAYROLL.ID" : @VM : "L.NCF.TAX.NUM"

    CALL MULTI.GET.LOC.REF(APPL.NAME.ARR,FLD.NAME.ARR,FLD.POS.ARR)

    DESCRIPTION.POS = FLD.POS.ARR<1,1>
    L.PAYROLL.ID.POS  = FLD.POS.ARR<1,3>
    L.NCF.TAX.NUM.POS = FLD.POS.ARR<1,4>


RETURN

DO.SELECT.PROCESSING:
    SEL.ERR = ''; SEL.LIST = ''; SEL.REC = ''; SEL.CMD = ''
    SEL.CMD = "SELECT " : FN.BPR : " WITH PAYROLL.STATUS EQ PROCESSING"

    CALL OCOMO("SEL.CMD : " : SEL.CMD)

    CALL EB.READLIST(SEL.CMD,SEL.REC,'',SEL.LIST,SEL.ERR)

    Y.PROCESSED.PAYROLL.ID.L = ''
    LOOP

        REMOVE Y.PR.ID FROM SEL.REC SETTING TAG

    WHILE Y.PR.ID:TAG
        CALL OCOMO("PAYROLL TO PROCESSED = " : Y.PR.ID)
        Y.PROCESSED.PAYROLL.ID.L<-1> = Y.PR.ID
        T.PR.ID = Y.PR.ID
        Y.PAYROLL.ID.CURR = T.PR.ID
        GOSUB DO.PAYROLL.POST.PROCESSING
    REPEAT


RETURN

RETURN

DO.PAYROLL.POST.PROCESSING:

    CALL OCOMO("PROCESSING : " : T.PR.ID)
    SEL2.ERR = ''; SEL2.LIST = ''; SEL2.REC = ''; SEL2.CMD = ''
    SEL2.CMD = "SELECT " : FN.BPRD : " WITH PAYROLL.ID EQ " : T.PR.ID

    CALL OCOMO("SEL.CMD : " : SEL2.CMD)

    CALL OCOMO("PROCESSING : " : T.PR.ID)
    CALL OCOMO("SEL.CMD : " : SEL2.CMD)

    CALL F.READ(FN.BPR,T.PR.ID,R.PR,F.BPR,ERR.PR)

    Y.PAYMENT.ID = R.PR<ST.LAP39.PAYMENT.ID>
    Y.LOCKED.EVENT.ID = R.PR<ST.LAP39.LOCK.EVENT.ID>
    Y.DEBIT.ACCOUNT = R.PR<ST.LAP39.DEBIT.ACCOUNT>
    Y.DEBIT.CURRENCY = R.PR<ST.LAP39.DEBIT.CCY>
    Y.TRANS.ACCOUNT = R.PR<ST.LAP39.TRANS.ACCOUNT>

    Y.CANT.SUCESSFUL = 0;
    Y.CANT.FAILED = 0;
    Y.TOT.AMT.FAILED = 0;
    Y.TOT.AMT.APPLIED = 0;
    Y.SUMMARY.ARR = ''
    CALL EB.READLIST(SEL2.CMD,SEL2.REC,'',SEL2.LIST,SEL2.ERR)
    LOOP

        REMOVE T.PRD.ID FROM SEL2.REC SETTING TAG2

    WHILE T.PRD.ID:TAG2
        CALL F.READ(FN.BPRD,T.PRD.ID,R.PRD,F.BPRD,ERR.PRD)
        IF R.PRD THEN
            Y.PRD.STATUS = R.PRD<ST.LAP4.PAYMENT.STATUS>

            IF Y.PRD.STATUS EQ 'SUCCESSFUL' THEN
                Y.CANT.SUCESSFUL += 1
                Y.SUMMARY.ARR<-1> = R.PRD<ST.LAP4.PAYMENT.ID> : @VM : R.PRD<ST.LAP4.OUR.REFERENCE> : @VM : "SUCCESS" : @VM : ""
                Y.TOT.AMT.APPLIED += R.PRD<ST.LAP4.CREDIT.AMOUNT>
            END ELSE
                Y.CANT.FAILED += 1
                Y.SUMMARY.ARR<-1> = R.PRD<ST.LAP4.PAYMENT.ID> : @VM : '' : @VM :"FAILED" : @VM : "No se pudo realizar la operacion"
                Y.TOT.AMT.FAILED += R.PRD<ST.LAP4.CREDIT.AMOUNT>

            END
        END
    REPEAT
    Y.NOTIFY.STATUS = ''
    BEGIN CASE
        CASE (Y.CANT.SUCESSFUL GT 0) AND (Y.CANT.FAILED EQ 0)
            Y.UPDATED.STATUS = 'APPLIED'
            Y.NOTIFY.STATUS = 'Applied'
        CASE (Y.CANT.SUCESSFUL GT 0) AND (Y.CANT.FAILED GT 0)
            Y.UPDATED.STATUS = 'PARTIALLY.APPLIED'
            Y.NOTIFY.STATUS = 'Partially Applied'
        CASE (Y.CANT.SUCESSFUL EQ 0) AND (Y.CANT.FAILED GT 0)
            Y.UPDATED.STATUS = 'NOT.APPLIED'
            Y.NOTIFY.STATUS = 'Not Applied'
        CASE @TRUE
            Y.UPDATED.STATUS = 'NOT.APPLIED'
            Y.NOTIFY.STATUS = 'Not Applied'
    END CASE
    GOSUB DO.MASTER.FUNDS.TRANSFER
    GOSUB DO.UPDATE.PAYROLL.MASTER

RETURN

DO.MASTER.FUNDS.TRANSFER:
    Y.FT.ID = ''
    R.FT.M<FT.TRANSACTION.TYPE> = 'AC02'          ;*CDI-345, change AC2E to AC02
    R.FT.M<FT.DEBIT.ACCT.NO> = Y.DEBIT.ACCOUNT
    R.FT.M<FT.CREDIT.CURRENCY> = Y.DEBIT.CURRENCY
    R.FT.M<FT.CREDIT.AMOUNT> = Y.TOT.AMT.APPLIED
    R.FT.M<FT.DEBIT.VALUE.DATE> = TODAY
    R.FT.M<FT.CREDIT.ACCT.NO> = 'DOP1406100090017'          ;*CDI-345
    R.FT.M<FT.LOCAL.REF,DESCRIPTION.POS,1> = 'Debito pago nomina'
    R.FT.M<FT.LOCAL.REF,L.PAYROLL.ID.POS,1> = T.PR.ID

    Y.TRANS.ID = ""
    Y.APP.NAME = "FUNDS.TRANSFER"
    Y.VER.NAME = Y.APP.NAME :",PAYROLL.MASTER"
    Y.VERSION.NAME = 'PAYROLL.MASTER'
    Y.FUNC = "I"
    Y.PRO.VAL = "PROCESS"
    Y.GTS.CONTROL = ""
    Y.NO.OF.AUTH = "0"
    FINAL.OFS = ""
    OPTIONS = ""

    Y.TXN.RESULT = ''
*CALL LAPAP.OFS.BUILDER(Y.APP.NAME,Y.VERSION.NAME,Y.FUNC,Y.NO.OF.AUTH,Y.PRO.VAL,Y.GTS.CONTROL,Y.OFS.USER,'',"DO0010001",Y.TRANS.ID,R.FT.M,OUT.OFS)
    CALL OFS.BUILD.RECORD(Y.APP.NAME,Y.FUNC,Y.PRO.VAL,Y.VER.NAME,Y.GTS.CONTROL,Y.NO.OF.AUTH,Y.TRANS.ID,R.FT.M,OUT.OFS)
*Usar GLOBUS.MANAGER mejor
*CALL OFS.BULK.MANAGER(OUT.OFS, Y.TXN.RESULT, '')
    OFS.RESP   = ""; TXN.COMMIT = "" ;* R22 Manual conversion - Start
*CALL OFS.GLOBUS.MANAGER("PAYROLL.OFS",OUT.OFS)
*   CALL OFS.CALL.BULK.MANAGER("PAYROLL.OFS",OUT.OFS, OFS.RESP, TXN.COMMIT) ;* R22 Manual conversion - End
    EB.Interface.OfsCallBulkManager("PAYROLL.OFS",OUT.OFS, OFS.RESP, TXN.COMMIT) ;*R22 Manual Code Conversion_Utility Check
    Y.TXN.RESULT = OUT.OFS

    Y.TXN.NEW.ID = FIELD(Y.TXN.RESULT,'/',1)
    Y.MASTER.FT.ID = Y.TXN.NEW.ID
    CALL OCOMO('Master Debit FT ID = ' : Y.MASTER.FT.ID)
    Y.TXN.RES.CODE = FIELD(Y.TXN.RESULT,'/',3)
    Y.TXN.RES.CODE = FIELD(Y.TXN.RES.CODE,',',1)
    Y.TXN.MESSAGE = FIELD(Y.TXN.RESULT,'/',3)
    Y.TXN.MESSAGE = FIELD(Y.TXN.MESSAGE,',',2)

    Y.SUCCESS.IND = Y.TXN.RES.CODE
    IF (Y.LOCKED.EVENT.ID) THEN
        GOSUB DO.REVERSE.LOCKED.EVENT
    END


RETURN

DO.REVERSE.LOCKED.EVENT:
    Y.TRANS.ID = Y.LOCKED.EVENT.ID
    Y.APP.NAME = "AC.LOCKED.EVENTS"
    Y.VER.NAME = Y.APP.NAME :",LAPAP.PAYROLL"
    Y.FUNC = "R"
    Y.PRO.VAL = "PROCESS"
    Y.GTS.CONTROL = ""
    Y.NO.OF.AUTH = ""
    FINAL.OFS = ""
    OPTIONS = ""
    R.REV.LOCK = ''

    CALL OFS.BUILD.RECORD(Y.APP.NAME,Y.FUNC,Y.PRO.VAL,Y.VER.NAME,Y.GTS.CONTROL,Y.NO.OF.AUTH,Y.TRANS.ID,R.REV.LOCK,FINAL.OFS)
*   CALL OFS.POST.MESSAGE(FINAL.OFS,'',"PAYROLL.OFS",'')
    EB.Interface.OfsPostMessage(FINAL.OFS,'',"PAYROLL.OFS",'') ;*R22 Manual Code Conversion_Utility Check
*Should change CRTs for OCOMOs and CALL to JOURNAL.UPDATE should be commented as it is a sentive routine.
    CALL OCOMO(Y.LOCKED.EVENT.ID : ' Reversed.')
RETURN

DO.UPDATE.PAYROLL.MASTER:

    CALL OCOMO('Payroll ' : Y.PAYROLL.ID.CURR : ', update to status: ' : Y.UPDATED.STATUS)
    CALL OCOMO('Quantity SUCESSFUL ' : Y.CANT.SUCESSFUL)
    CALL OCOMO('Quantity FAILED ' : Y.CANT.FAILED)
    CALL OCOMO('Amount to return ' : Y.TOT.AMT.FAILED)

    CALL F.READ(FN.BPR,Y.PAYROLL.ID.CURR,R.CURRPR,F.BPR,BPR.ERR)

    R.PR.UPDATE = ''
    IF Y.SUCCESS.IND[1,1] EQ "1" THEN
        R.PR.UPDATE<ST.LAP39.PAYROLL.STATUS> =  Y.UPDATED.STATUS
        R.CURRPR<ST.LAP39.PAYROLL.STATUS> =  Y.UPDATED.STATUS
    END ELSE
        R.PR.UPDATE<ST.LAP39.PAYROLL.STATUS> =  'DEBIT.FAILED'
        R.CURRPR<ST.LAP39.PAYROLL.STATUS> =  'DEBIT.FAILED'
        GOSUB DO.RELOCK.AMOUNT
    END

    R.PR.UPDATE<ST.LAP39.QTY.APPLIED> = Y.CANT.SUCESSFUL
    R.PR.UPDATE<ST.LAP39.QTY.NOT.APPLIED> = Y.CANT.FAILED
    R.PR.UPDATE<ST.LAP39.TOT.AMT.NOT.APPL> = Y.TOT.AMT.FAILED
    R.PR.UPDATE<ST.LAP39.OUR.REFERENCE> = Y.MASTER.FT.ID

    R.CURRPR<ST.LAP39.QTY.APPLIED> = Y.CANT.SUCESSFUL
    R.CURRPR<ST.LAP39.QTY.NOT.APPLIED> = Y.CANT.FAILED
    R.CURRPR<ST.LAP39.TOT.AMT.NOT.APPL> = Y.TOT.AMT.FAILED
    R.CURRPR<ST.LAP39.OUR.REFERENCE> = Y.MASTER.FT.ID

*Use of F.LIVE.WRITE instead of OFS Message cause of COB...

    CALL F.LIVE.WRITE(FN.BPR,Y.PAYROLL.ID.CURR,R.CURRPR)

*Notify after this, this was inside DO.POST.OFS before...
    GOSUB DO.READ.RECENT.FT
    GOSUB DO.SEND.RABBIT.NOTIFICATION

*GOSUB DO.POST.OFS

RETURN

DO.RELOCK.AMOUNT:
    Y.ACLE.ID = ''
    R.ACLE<AC.LCK.ACCOUNT.NUMBER> = Y.DEBIT.ACCOUNT
    R.ACLE<AC.LCK.DESCRIPTION> = 'RET. FONDOS NOMINA X NO DEBITO'
    R.ACLE<AC.LCK.FROM.DATE> = TODAY
    Y.END.DATE = TODAY
    CALL EB.ROUND.AMOUNT('DOP',Y.TOT.AMT.APPLIED,2,"")
    R.ACLE<AC.LCK.LOCKED.AMOUNT> = Y.TOT.AMT.APPLIED

    Y.TRANS.ID.L = ""
    Y.APP.NAME.L = "AC.LOCKED.EVENTS"
    Y.VER.NAME.L = Y.APP.NAME :",LAPAP.PAYROLL"
    Y.VERSION.NAME.L = 'LAPAP.PAYROLL'
    Y.FUNC.L = "I"
    Y.PRO.VAL.L = "PROCESS"
    Y.GTS.CONTROL.L = ""
    Y.NO.OF.AUTH.L = "0"
    FINAL.OFS.L = ""
    OPTIONS.L = ""

    CALL OFS.BUILD.RECORD(Y.APP.NAME.L,Y.FUNC.L,Y.PRO.VAL.L,Y.VER.NAME.L,Y.GTS.CONTROL.L,Y.NO.OF.AUTH.L,Y.TRANS.ID.L,R.ACLE,FINAL.OFS.L)
*   CALL OFS.POST.MESSAGE(FINAL.OFS.L,'',"PAYROLL.OFS",'')
    EB.Interface.OfsPostMessage(FINAL.OFS.L,'',"PAYROLL.OFS",'') ;*R22 Manual Code Conversion_Utility Check
RETURN

DO.POST.OFS:
    Y.TRANS.ID = Y.PAYROLL.ID.CURR
    Y.APP.NAME = "ST.LAPAP.BULK.PAYROLL"
    Y.VER.NAME = Y.APP.NAME :",POST.UPD"
    Y.FUNC = "I"
    Y.PRO.VAL = "PROCESS"
    Y.GTS.CONTROL = ""
    Y.NO.OF.AUTH = ""
    FINAL.OFS = ""
    OPTIONS = ""

    CALL OFS.BUILD.RECORD(Y.APP.NAME,Y.FUNC,Y.PRO.VAL,Y.VER.NAME,Y.GTS.CONTROL,Y.NO.OF.AUTH,Y.TRANS.ID,R.PR.UPDATE,FINAL.OFS)
*   CALL OFS.POST.MESSAGE(FINAL.OFS,'',"PAYROLL.OFS",'')
    EB.Interface.OfsPostMessage(FINAL.OFS,'',"PAYROLL.OFS",'') ;*R22 Manual Code Conversion_Utility Check
*Should change CRTs for OCOMOs and CALL to JOURNAL.UPDATE should be commented as it is a sentive routine.
*CALL OCOMO('OFS=': FINAL.OFS)
    CALL JOURNAL.UPDATE('')
*CRT FINAL.OFS
    GOSUB DO.READ.RECENT.FT
    GOSUB DO.SEND.RABBIT.NOTIFICATION
RETURN

DO.READ.RECENT.FT:
    CALL F.READ(FN.FT,Y.MASTER.FT.ID,R.FT,F.FT,FT.PRD)
    Y.NCF.NUM = R.FT<FT.LOCAL.REF,L.NCF.TAX.NUM.POS>
RETURN

DO.SEND.RABBIT.NOTIFICATION:
    Y.ARR.COPY = Y.SUMMARY.ARR
    CHANGE @FM TO '&&' IN Y.ARR.COPY
    CHANGE @VM TO '^' IN Y.ARR.COPY

    V.EB.API.ID = 'PAYROLL.INTERFACE'
    Y.PARAMETRO.ENVIO = Y.PAYMENT.ID : '@' : Y.NOTIFY.STATUS : '@' : Y.MASTER.FT.ID : '@' : Y.NCF.NUM :'@' : Y.ARR.COPY

    CALL EB.CALL.JAVA.API(V.EB.API.ID,Y.PARAMETRO.ENVIO,Y.RESPONSE,Y.CALLJ.ERROR)

    IF Y.RESPONSE THEN
        CALL OCOMO('EB.CALL.JAVA.API Response = ' : Y.RESPONSE)
    END ELSE
        CALL OCOMO('EB.CALL.JAVA.API Error = ' : Y.CALLJ.ERROR)
    END

RETURN

END
