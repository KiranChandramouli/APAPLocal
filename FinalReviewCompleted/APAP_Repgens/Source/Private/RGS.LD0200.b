$PACKAGE APAP.Repgens

SUBROUTINE RGS.LD0200
REM "RGS.LD0200",230614-4
*---------------------------------------------------------------------------------
*Modification History
*DATE                WHO                         REFERENCE                DESCRIPTION
*16-06-2023       Samaran T               R22 Manual Code Conversion       No Changes
*************************************************************************
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_RC.COMMON
    $INSERT I_SCREEN.VARIABLES
    $INSERT I_F.COMPANY
    $INSERT I_F.USER
    $INSERT I_F.STANDARD.SELECTION
    $INSERT I_F.DATES
    SAVE.ID.COMPANY = ID.COMPANY
*************************************************************************
    LD.EXTRCT.VAL = "LD.EXTRCT.VAL"
*************************************************************************
    YT.SMS.COMP = ID.COMPANY
    YT.SMS.FILE = "LMM.ACCOUNT.BALANCES"
    YT.SMS.FILE<-1> = "LD.LOANS.AND.DEPOSITS"
    YT.SMS.FILE<-1> = "DEPT.ACCT.OFFICER"
    YT.SMS.FILE<-1> = "CATEGORY"
    YT.SMS.FILE<-1> = "CUSTOMER"
    YCOUNT = COUNT(YT.SMS.FILE,@FM)+1
    LOOP
        YID.COMP = YT.SMS.COMP<1>; DEL YT.SMS.COMP<1>
        FOR YAF = 1 TO YCOUNT
            YSMS.FILE = YT.SMS.FILE<YAF>
            YPW.OK = 0; Y = 1; X = 1
            LOOP WHILE X DO
                LOCATE YSMS.FILE IN R.USER<EB.USE.APPLICATION,Y> SETTING X ELSE X = 0
                IF X THEN
                    GOSUB 9300000
                    IF X THEN
                        IF R.USER<EB.USE.FUNCTION,X> = "N" THEN
                            IF R.USER<EB.USE.VERSION,X> THEN
                                Y += 1; X = 1
                            END ELSE
                                X = 0; YPW.OK = "NO"
                            END
                        END ELSE
                            Y = X+1; YPW.OK = 1; X = 0
                        END
                    END ELSE
                        Y += 1; X = 1
                    END
                END
* update pointers to definitions in version record
            REPEAT
            IF NOT(YPW.OK) THEN
* when no password for selected pgm ask for a global password
                LOCATE "ALL.PG" IN R.USER<EB.USE.APPLICATION,1> SETTING X ELSE X = 0
                GOSUB 9300000
* ask for a password for all programs
                IF NOT(X) THEN
                    YPGM.TYPE = ""; CALL PGM.TABLE (YSMS.FILE, YPGM.TYPE)
                    Y = "ALL.PG.":YPGM.TYPE[1,1]
                    LOCATE Y IN R.USER<EB.USE.APPLICATION,1> SETTING X ELSE X = 0
                    GOSUB 9300000
* ask for a password for the type of the program
                END
                YPW.OK = 1
            END
            IF NOT(YPW.OK) OR YPW.OK = "NO" THEN
                MSG = "NO PASSWORD FOR FILE=":YSMS.FILE
                MSG<2> = "SECURITY"
                CALL PRO("NO PASSWORD FOR FILE=":YSMS.FILE)
                TEXT = "SECURITY VIOLATION"
                CALL REM  ; RETURN  ;* end of pgm
            END
        NEXT YAF
    WHILE YT.SMS.COMP REPEAT
*************************************************************************
    YBLOCKNO = 0; YKEYNO = 0; YWRITNO = 0
    YT.FORFIL = ""; YKEYFD = ""
    YFD.LEN = ""; YPART.S = ""; YPART.L = ""
    DIM YR.REC(40)
    YFILE = "F":R.COMPANY(EB.COM.MNEMONIC):".RGS.LD0200"
    YOLDFILE = 1
    OPEN "", YFILE TO F.FILE ELSE YOLDFILE = 0
    IF NOT(PHNO) THEN PRINT @(0,10):
    IF YOLDFILE THEN
        CLEARFILE F.FILE
        PRINT "FILE ":YFILE:"  CLEARED"
    END ELSE
        ERROR.MESSAGE = ""
        Y.OUT.FILE = FIELD(YFILE,".",2,99)
        SCHEMA.NAME = ""
        CALL EB.DETERMINE.SCHEMA(Y.OUT.FILE, ID.COMPANY, SCHEMA.NAME)
        IF SCHEMA.NAME THEN
            Y.OUT.FILE<7> = SCHEMA.NAME
        END
        CALL EBS.CREATE.FILE(Y.OUT.FILE,"",ERROR.MESSAGE)
    END
    OPEN "", YFILE TO F.FILE ELSE
        TEXT = "CANNOT OPEN ":YFILE
        CALL FATAL.ERROR ("RGS.LD0200")
    END
*
    YCOM = ID.COMPANY
*
    YT.SMS = ""
    YT.SMS.FILE = "LMM.ACCOUNT.BALANCES"
    YT.SMS.FILE<-1> = "LD.LOANS.AND.DEPOSITS"
    YT.SMS.FILE<-1> = "DEPT.ACCT.OFFICER"
    YT.SMS.FILE<-1> = "CATEGORY"
    YT.SMS.FILE<-1> = "CUSTOMER"
    YCOUNT = COUNT(R.USER<EB.USE.APPLICATION>,@VM)+1
    FOR YAV = 1 TO YCOUNT
        IF R.USER<EB.USE.DATA.COMPARISON,YAV> THEN
            YRESTR = R.USER<EB.USE.COMPANY.RESTR,YAV>
            IF YRESTR THEN
                IF YRESTR = YCOM THEN YRESTR = ""
            END
            IF NOT(YRESTR) THEN
                YAPPLI = R.USER<EB.USE.APPLICATION,YAV>
                LOCATE YAPPLI IN YT.SMS.FILE<1> SETTING X ELSE X = 0
                IF X THEN
                    IF (INDEX(R.USER<EB.USE.FUNCTION,YAV>,"P",1)) OR (INDEX(R.USER<EB.USE.FUNCTION,YAV>,"S",1)) THEN
                        LOCATE YAPPLI IN YT.SMS<1,1> SETTING X ELSE
                            YT.SMS<1,-1> = YAPPLI
                        END
                        YT.SMS<2,X,-1> = YAV
                    END
                END
            END
        END
    NEXT YAV
*
    YFILE = "F.LD.LOANS.AND.DEPOSITS"; YF.LD.LOANS.AND.DEPOSITS = ""
    CALL OPF (YFILE, YF.LD.LOANS.AND.DEPOSITS)
    YFILE = "F.DEPT.ACCT.OFFICER"; YF.DEPT.ACCT.OFFICER = ""
    CALL OPF (YFILE, YF.DEPT.ACCT.OFFICER)
    YFILE = "F.CATEGORY"; YF.CATEGORY = ""
    CALL OPF (YFILE, YF.CATEGORY)
    YFILE = "F.CUSTOMER"; YF.CUSTOMER = ""
    CALL OPF (YFILE, YF.CUSTOMER)
*************************************************************************
    YFILE = "LMM.ACCOUNT.BALANCES"
    FULL.FNAME = "F.LMM.ACCOUNT.BALANCES"; YF.LMM.ACCOUNT.BALANCES = ""
    LOCATE YFILE IN YT.SMS<1,1> SETTING X ELSE
        X = 0; T.PWD = ""
    END
    IF X THEN
        T.PWD = YT.SMS<2,X>
        CONVERT @SM TO @FM IN T.PWD
    END
    SS.REC = ""
    CALL GET.STANDARD.SELECTION.DETS(YFILE,SS.REC)
    LOCATE "CO.CODE" IN SS.REC<SSL.SYS.FIELD.NAME,1> SETTING COMP.FOUND ELSE COMP.FOUND = ""
    CALL OPF (FULL.FNAME, YF.LMM.ACCOUNT.BALANCES)
    CLEARSELECT
    IF C$MULTI.BOOK AND COMP.FOUND THEN
        SEL.ARGS = " WITH CO.CODE EQUAL ":ID.COMPANY
    END ELSE
        SEL.ARGS = ""
    END
    SELECT.CMMD = "SELECT ":FULL.FNAME:SEL.ARGS
    CALL EB.READLIST(SELECT.CMMD,YID.LIST,"","","")
    LOOP
        REMOVE ID.NEW FROM YID.LIST SETTING YDELIM
    WHILE ID.NEW:YDELIM
        MATREAD R.NEW FROM YF.LMM.ACCOUNT.BALANCES, ID.NEW ELSE ID.NEW = "" ; MAT R.NEW = ""
        IF T.PWD THEN
            CALL CONTROL.USER.PROFILE ("RECORD")
            IF ETEXT THEN ID.NEW = ""
        END
        IF ID.NEW <> "" THEN
*
* Handle Decision Table
            YM.ACCBAL.REC.CHECK = R.NEW(109)
            YM.ACCBAL.KEY = ID.NEW
            YM.CONTRACT.NO = YM.ACCBAL.KEY
            YM.CONTRACT.NO = FMT(YM.CONTRACT.NO,"14L"); YM.CONTRACT.NO = YM.CONTRACT.NO[1,12]
            YM.CONTRACT.STATUS = YM.CONTRACT.NO
            IF YM.CONTRACT.STATUS <> "" THEN
                YCOMP = "LD.LOANS.AND.DEPOSITS_90_":YM.CONTRACT.STATUS
                YFORFIL = YF.LD.LOANS.AND.DEPOSITS
                YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
                YM.CONTRACT.STATUS = YFOR.FD
            END
            YM.RECORD.STATUS = YM.CONTRACT.NO
            IF YM.RECORD.STATUS <> "" THEN
                YCOMP = "LD.LOANS.AND.DEPOSITS_245_":YM.RECORD.STATUS
                YFORFIL = YF.LD.LOANS.AND.DEPOSITS
                YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
                YM.RECORD.STATUS = YFOR.FD
            END
            YM.REC.STATUS.CHECK = YM.RECORD.STATUS
            YM.REC.STATUS.CHECK = FMT(YM.REC.STATUS.CHECK,"4L"); YM.REC.STATUS.CHECK = YM.REC.STATUS.CHECK[2,3]
            YM.LD.CHAR = YM.CONTRACT.NO
            YM.LD.CHAR = FMT(YM.LD.CHAR,"12L"); YM.LD.CHAR = YM.LD.CHAR[1,2]
            IF ((YM.ACCBAL.REC.CHECK <> "REVE") AND (YM.CONTRACT.STATUS <> "FWD") AND (YM.CONTRACT.STATUS <> "LIQ") AND (YM.CONTRACT.STATUS <> "WOF") AND (YM.CONTRACT.STATUS <> "NAB")) AND (YM.REC.STATUS.CHECK <> "NAU" AND YM.REC.STATUS.CHECK <> "HLD") AND (YM.LD.CHAR = "LD") THEN
                GOSUB 2000000
            END
        END
*
    REPEAT
    IF YKEYNO THEN
        YR.REC(40)  := @FM
        MATWRITE YR.REC TO F.FILE, YKEY
    END
*
    IF NOT(PHNO) THEN PRINT @(41,L1ST-3):YBLOCKNO+YWRITNO:
    IF SAVE.ID.COMPANY # ID.COMPANY THEN
        CALL LOAD.COMPANY(SAVE.ID.COMPANY)
    END
RETURN
*************************************************************************
*
* Define and Write record
2000000:
*
    YKEY = ""; MAT YR.REC = ""
    YM.ACCBAL.KEY = ID.NEW
    YM.CONTRACT.NO = YM.ACCBAL.KEY
    YM.CONTRACT.NO = FMT(YM.CONTRACT.NO,"14L"); YM.CONTRACT.NO = YM.CONTRACT.NO[1,12]
    YM.ACCT.OFFICER.KEY = YM.CONTRACT.NO
    IF YM.ACCT.OFFICER.KEY <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_79_":YM.ACCT.OFFICER.KEY
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.ACCT.OFFICER.KEY = YFOR.FD
    END
    YM.ACCT.OFFICER.NAME = YM.ACCT.OFFICER.KEY
    IF YM.ACCT.OFFICER.NAME <> "" THEN
        YCOMP = "DEPT.ACCT.OFFICER_2_":YM.ACCT.OFFICER.NAME
        YFORFIL = YF.DEPT.ACCT.OFFICER
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.ACCT.OFFICER.NAME = YFOR.FD
    END
    YKEYFD = YM.ACCT.OFFICER.NAME

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

    FULL.TXN.ID = ""
    CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

    YKEYFD = FMT(YM.ACCT.OFFICER.NAME,"27L")


    IF LEN(YKEYFD) > 27 THEN YKEYFD = YKEYFD[1,26]:"|"
    GOSUB 8000000
    YR.REC(1) = YM.ACCT.OFFICER.NAME
    YM.CATEGORY.KEY = YM.CONTRACT.NO
    IF YM.CATEGORY.KEY <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_11_":YM.CATEGORY.KEY
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CATEGORY.KEY = YFOR.FD
    END
    YM.CATEGORY.PRINT = YM.CATEGORY.KEY
    IF YM.CATEGORY.PRINT <> "" THEN
        YCOMP = "CATEGORY_1_":YM.CATEGORY.PRINT
        YFORFIL = YF.CATEGORY
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 1; GOSUB 9000000
        YM.CATEGORY.PRINT = YFOR.FD
    END
    YKEYFD = YM.CATEGORY.PRINT

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

    FULL.TXN.ID = ""
    CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

    YKEYFD = FMT(YM.CATEGORY.PRINT,"37L")


    IF LEN(YKEYFD) > 37 THEN YKEYFD = YKEYFD[1,36]:"|"
    GOSUB 8000000
    YR.REC(2) = YM.CATEGORY.PRINT
    YM.CONTRACT.NO.PRINT = YM.CONTRACT.NO
    YKEYFD = FMT(YM.CONTRACT.NO.PRINT,"R##-#####-#####")
    IF LEN(YKEYFD) > 14 THEN YKEYFD = YKEYFD[1,13]:"|"
    GOSUB 8000000
    YR.REC(3) = YM.CONTRACT.NO.PRINT
    YM.CUSTOMER.KEY = YM.CONTRACT.NO
    IF YM.CUSTOMER.KEY <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_1_":YM.CUSTOMER.KEY
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CUSTOMER.KEY = YFOR.FD
    END
    YM.CUST.NAME = YM.CUSTOMER.KEY
    IF YM.CUST.NAME <> "" THEN
        YCOMP = "CUSTOMER_2_":YM.CUST.NAME
        YFORFIL = YF.CUSTOMER
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CUST.NAME = YFOR.FD
    END
    YR.REC(4) = YM.CUST.NAME
    YM.CCY = YM.CONTRACT.NO
    IF YM.CCY <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_2_":YM.CCY
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CCY = YFOR.FD
    END
    YR.REC(5) = YM.CCY
    YM.STATUS = YM.CONTRACT.NO
    IF YM.STATUS <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_90_":YM.STATUS
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.STATUS = YFOR.FD
    END
    YR.REC(6) = YM.STATUS
    YM.BLANK.LINE = " "
    YR.REC(7) = YM.BLANK.LINE
    YM.CUSTOMER.ID.PRINT = YM.CUSTOMER.KEY
    YR.REC(8) = YM.CUSTOMER.ID.PRINT
    YM.CURR.LIT = "CURRENT"
    YR.REC(9) = YM.CURR.LIT
    YM.FILE.NAME1 = "F.LMM.ACCOUNT.BALANCES"
    YM23.GOSUB = YM.FILE.NAME1
    YM.ACCBAL.KEY.PARAM1 = YM.ACCBAL.KEY
    YM24.GOSUB = YM.ACCBAL.KEY.PARAM1
    YM.FIELD.NO1 = "6"
    YM25.GOSUB = YM.FIELD.NO1
    YM.OP.CODE1 = "LAST"
    YM26.GOSUB = YM.OP.CODE1
    YM.PRINC.AMT.CURR = ""
    YM27.GOSUB = YM.PRINC.AMT.CURR
    CALL @LD.EXTRCT.VAL (YM23.GOSUB, YM24.GOSUB, YM25.GOSUB, YM26.GOSUB, YM27.GOSUB)
    YM.FILE.NAME1 = YM23.GOSUB
    YM.ACCBAL.KEY.PARAM1 = YM24.GOSUB
    YM.FIELD.NO1 = YM25.GOSUB
    YM.OP.CODE1 = YM26.GOSUB
    YM.PRINC.AMT.CURR = YM27.GOSUB
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.PRINC.AMT.CURR <> "" THEN
        YM.PRINC.AMT.CURR = TRIM(FMT(YM.PRINC.AMT.CURR,"19R":YDEC))
    END
    YR.REC(10) = YM.PRINC.AMT.CURR
    YTRUE.1 = 0
    YM.INT.PAYMT.INDEX = YM.CONTRACT.NO
    IF YM.INT.PAYMT.INDEX <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_15_":YM.INT.PAYMT.INDEX
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.INT.PAYMT.INDEX = YFOR.FD
    END
    IF (((YM.CATEGORY.KEY >= 21050 AND YM.CATEGORY.KEY <= 21074)) AND (YM.INT.PAYMT.INDEX = 1)) OR ((YM.CATEGORY.KEY >= 21095 AND YM.CATEGORY.KEY <= 21099)) THEN
        YTRUE.1 = 1
        YM.INT.BEAR.LOAN.COMMT = R.NEW(11)
        YM.INT.CURR.DUMMY = YM.INT.BEAR.LOAN.COMMT
    END
    IF NOT(YTRUE.1) THEN
        YM.INT.PAYMT.INDEX = YM.CONTRACT.NO
        IF YM.INT.PAYMT.INDEX <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_15_":YM.INT.PAYMT.INDEX
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.INT.PAYMT.INDEX = YFOR.FD
        END
        IF ((YM.CATEGORY.KEY >= 21050 AND YM.CATEGORY.KEY <= 21074)) AND (YM.INT.PAYMT.INDEX = 2) THEN
            YTRUE.1 = 1
            YM.ACCBAL.FILE.NAME1 = "F.LMM.ACCOUNT.BALANCES"
            YM29.GOSUB = YM.ACCBAL.FILE.NAME1
            YM.KEY1 = YM.ACCBAL.KEY
            YM30.GOSUB = YM.KEY1
            YM.FLD.NUM1 = "53"
            YM31.GOSUB = YM.FLD.NUM1
            YM.OPER.CD1 = "SUM"
            YM32.GOSUB = YM.OPER.CD1
            YM.INT.DISC.LOAN = ""
            YM33.GOSUB = YM.INT.DISC.LOAN
            CALL @LD.EXTRCT.VAL (YM29.GOSUB, YM30.GOSUB, YM31.GOSUB, YM32.GOSUB, YM33.GOSUB)
            YM.ACCBAL.FILE.NAME1 = YM29.GOSUB
            YM.KEY1 = YM30.GOSUB
            YM.FLD.NUM1 = YM31.GOSUB
            YM.OPER.CD1 = YM32.GOSUB
            YM.INT.DISC.LOAN = YM33.GOSUB
            YM.INT.CURR.DUMMY = YM.INT.DISC.LOAN
        END
    END
    IF NOT(YTRUE.1) THEN
        YM.INT.PAYMT.INDEX = YM.CONTRACT.NO
        IF YM.INT.PAYMT.INDEX <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_15_":YM.INT.PAYMT.INDEX
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.INT.PAYMT.INDEX = YFOR.FD
        END
        IF ((YM.CATEGORY.KEY >= 21001 AND YM.CATEGORY.KEY <= 21029)) AND (YM.INT.PAYMT.INDEX = 1) THEN
            YTRUE.1 = 1
            YM.INT.BEAR.DEPOSIT = R.NEW(29)
            YM.INT.CURR.DUMMY = YM.INT.BEAR.DEPOSIT
        END
    END
    IF NOT(YTRUE.1) THEN
        YM.INT.PAYMT.INDEX = YM.CONTRACT.NO
        IF YM.INT.PAYMT.INDEX <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_15_":YM.INT.PAYMT.INDEX
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.INT.PAYMT.INDEX = YFOR.FD
        END
        IF ((YM.CATEGORY.KEY >= 21001 AND YM.CATEGORY.KEY <= 21029)) AND (YM.INT.PAYMT.INDEX = 2) THEN
            YTRUE.1 = 1
            YM.ACCBAL.FILE.NAME2 = "F.LMM.ACCOUNT.BALANCES"
            YM35.GOSUB = YM.ACCBAL.FILE.NAME2
            YM.KEY2 = YM.ACCBAL.KEY
            YM36.GOSUB = YM.KEY2
            YM.FLD.NUM2 = "53"
            YM37.GOSUB = YM.FLD.NUM2
            YM.OPER.CD2 = "SUM"
            YM38.GOSUB = YM.OPER.CD2
            YM.INT.DISC.DEPOSIT = ""
            YM39.GOSUB = YM.INT.DISC.DEPOSIT
            CALL @LD.EXTRCT.VAL (YM35.GOSUB, YM36.GOSUB, YM37.GOSUB, YM38.GOSUB, YM39.GOSUB)
            YM.ACCBAL.FILE.NAME2 = YM35.GOSUB
            YM.KEY2 = YM36.GOSUB
            YM.FLD.NUM2 = YM37.GOSUB
            YM.OPER.CD2 = YM38.GOSUB
            YM.INT.DISC.DEPOSIT = YM39.GOSUB
            YM.INT.CURR.DUMMY = YM.INT.DISC.DEPOSIT
        END
    END
    IF NOT(YTRUE.1) THEN YM.INT.CURR.DUMMY = ""
    YM.INT.AMT.PRINT = YM.INT.CURR.DUMMY
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.INT.AMT.PRINT <> "" THEN
        YM.INT.AMT.PRINT = TRIM(FMT(YM.INT.AMT.PRINT,"19R":YDEC))
    END
    YR.REC(11) = YM.INT.AMT.PRINT
    YTRUE.1 = 0
    YM.COMM.PAYMT.INDEX = YM.CONTRACT.NO
    IF YM.COMM.PAYMT.INDEX <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_35_":YM.COMM.PAYMT.INDEX
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.COMM.PAYMT.INDEX = YFOR.FD
    END
    IF YM.COMM.PAYMT.INDEX = 2 THEN
        YTRUE.1 = 1
        YM.ACCBAL.FILE.NAME3 = "F.LMM.ACCOUNT.BALANCES"
        YM45.GOSUB = YM.ACCBAL.FILE.NAME3
        YM.KEY3 = YM.ACCBAL.KEY
        YM46.GOSUB = YM.KEY3
        YM.FLD.NUM3 = "67"
        YM47.GOSUB = YM.FLD.NUM3
        YM.OPER.CD3 = "SUM"
        YM48.GOSUB = YM.OPER.CD3
        YM.COMM.AMT.DISC = ""
        YM49.GOSUB = YM.COMM.AMT.DISC
        CALL @LD.EXTRCT.VAL (YM45.GOSUB, YM46.GOSUB, YM47.GOSUB, YM48.GOSUB, YM49.GOSUB)
        YM.ACCBAL.FILE.NAME3 = YM45.GOSUB
        YM.KEY3 = YM46.GOSUB
        YM.FLD.NUM3 = YM47.GOSUB
        YM.OPER.CD3 = YM48.GOSUB
        YM.COMM.AMT.DISC = YM49.GOSUB
        YM.COMM.AMT.CURR = YM.COMM.AMT.DISC
    END
    IF NOT(YTRUE.1) THEN
        YM.COMM.PAYMT.INDEX = YM.CONTRACT.NO
        IF YM.COMM.PAYMT.INDEX <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_35_":YM.COMM.PAYMT.INDEX
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.COMM.PAYMT.INDEX = YFOR.FD
        END
        IF YM.COMM.PAYMT.INDEX = 1 THEN
            YTRUE.1 = 1
            YM.COMM.AMT.CURR = R.NEW(15)
        END
    END
    IF NOT(YTRUE.1) THEN YM.COMM.AMT.CURR = ""
    YM.COMM.AMT.PRINT = YM.COMM.AMT.CURR
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.COMM.AMT.PRINT <> "" THEN
        YM.COMM.AMT.PRINT = TRIM(FMT(YM.COMM.AMT.PRINT,"19R":YDEC))
    END
    YR.REC(12) = YM.COMM.AMT.PRINT
    YM.FEE.DIFF1 = R.NEW(36)<1,1>
    YM1.FEE.DIFF1 = YM.FEE.DIFF1
    YM.FEE.DIFF1 = R.NEW(35)<1,1>
    IF NUM(YM1.FEE.DIFF1) = NUMERIC THEN IF NUM(YM.FEE.DIFF1) = NUMERIC THEN
        YM1.FEE.DIFF1 = YM1.FEE.DIFF1 - YM.FEE.DIFF1
        IF YM1.FEE.DIFF1 = 0 THEN YM1.FEE.DIFF1 = ""
    END
    YM.FEE.DIFF1 = YM1.FEE.DIFF1
    YM.FEE1 = YM.FEE.DIFF1
    YM1.FEE1 = YM.FEE1
    YM.FEE1 = R.NEW(34)<1,1>
    IF NUM(YM1.FEE1) = NUMERIC THEN IF NUM(YM.FEE1) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE1 * YM.FEE1
        YM1.FEE1 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE1 = 0 THEN YM1.FEE1 = ""
    END
    YM.FEE1 = YM1.FEE1
    YM.SUM2 = YM.FEE1
    YM1.SUM2 = YM.SUM2
    YM.FEE.DIFF2 = R.NEW(36)<1,2>
    YM1.FEE.DIFF2 = YM.FEE.DIFF2
    YM.FEE.DIFF2 = R.NEW(35)<1,2>
    IF NUM(YM1.FEE.DIFF2) = NUMERIC THEN IF NUM(YM.FEE.DIFF2) = NUMERIC THEN
        YM1.FEE.DIFF2 = YM1.FEE.DIFF2 - YM.FEE.DIFF2
        IF YM1.FEE.DIFF2 = 0 THEN YM1.FEE.DIFF2 = ""
    END
    YM.FEE.DIFF2 = YM1.FEE.DIFF2
    YM.FEE2 = YM.FEE.DIFF2
    YM1.FEE2 = YM.FEE2
    YM.FEE2 = R.NEW(34)<1,2>
    IF NUM(YM1.FEE2) = NUMERIC THEN IF NUM(YM.FEE2) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE2 * YM.FEE2
        YM1.FEE2 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE2 = 0 THEN YM1.FEE2 = ""
    END
    YM.FEE2 = YM1.FEE2
    YM.SUM2 = YM.FEE2
    IF NUM(YM1.SUM2) = NUMERIC THEN IF NUM(YM.SUM2) = NUMERIC THEN
        YM1.SUM2 = YM1.SUM2 + YM.SUM2
        IF YM1.SUM2 = 0 THEN YM1.SUM2 = ""
    END
    YM.SUM2 = YM1.SUM2
    YM.SUM3 = YM.SUM2
    YM1.SUM3 = YM.SUM3
    YM.FEE.DIFF3 = R.NEW(36)<1,3>
    YM1.FEE.DIFF3 = YM.FEE.DIFF3
    YM.FEE.DIFF3 = R.NEW(35)<1,3>
    IF NUM(YM1.FEE.DIFF3) = NUMERIC THEN IF NUM(YM.FEE.DIFF3) = NUMERIC THEN
        YM1.FEE.DIFF3 = YM1.FEE.DIFF3 - YM.FEE.DIFF3
        IF YM1.FEE.DIFF3 = 0 THEN YM1.FEE.DIFF3 = ""
    END
    YM.FEE.DIFF3 = YM1.FEE.DIFF3
    YM.FEE3 = YM.FEE.DIFF3
    YM1.FEE3 = YM.FEE3
    YM.FEE3 = R.NEW(34)<1,3>
    IF NUM(YM1.FEE3) = NUMERIC THEN IF NUM(YM.FEE3) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE3 * YM.FEE3
        YM1.FEE3 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE3 = 0 THEN YM1.FEE3 = ""
    END
    YM.FEE3 = YM1.FEE3
    YM.SUM3 = YM.FEE3
    IF NUM(YM1.SUM3) = NUMERIC THEN IF NUM(YM.SUM3) = NUMERIC THEN
        YM1.SUM3 = YM1.SUM3 + YM.SUM3
        IF YM1.SUM3 = 0 THEN YM1.SUM3 = ""
    END
    YM.SUM3 = YM1.SUM3
    YM.SUM4 = YM.SUM3
    YM1.SUM4 = YM.SUM4
    YM.FEE.DIFF4 = R.NEW(36)<1,4>
    YM1.FEE.DIFF4 = YM.FEE.DIFF4
    YM.FEE.DIFF4 = R.NEW(35)<1,4>
    IF NUM(YM1.FEE.DIFF4) = NUMERIC THEN IF NUM(YM.FEE.DIFF4) = NUMERIC THEN
        YM1.FEE.DIFF4 = YM1.FEE.DIFF4 - YM.FEE.DIFF4
        IF YM1.FEE.DIFF4 = 0 THEN YM1.FEE.DIFF4 = ""
    END
    YM.FEE.DIFF4 = YM1.FEE.DIFF4
    YM.FEE4 = YM.FEE.DIFF4
    YM1.FEE4 = YM.FEE4
    YM.FEE4 = R.NEW(34)<1,4>
    IF NUM(YM1.FEE4) = NUMERIC THEN IF NUM(YM.FEE4) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE4 * YM.FEE4
        YM1.FEE4 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE4 = 0 THEN YM1.FEE4 = ""
    END
    YM.FEE4 = YM1.FEE4
    YM.SUM4 = YM.FEE4
    IF NUM(YM1.SUM4) = NUMERIC THEN IF NUM(YM.SUM4) = NUMERIC THEN
        YM1.SUM4 = YM1.SUM4 + YM.SUM4
        IF YM1.SUM4 = 0 THEN YM1.SUM4 = ""
    END
    YM.SUM4 = YM1.SUM4
    YM.SUM5 = YM.SUM4
    YM1.SUM5 = YM.SUM5
    YM.FEE.DIFF5 = R.NEW(36)<1,5>
    YM1.FEE.DIFF5 = YM.FEE.DIFF5
    YM.FEE.DIFF5 = R.NEW(35)<1,5>
    IF NUM(YM1.FEE.DIFF5) = NUMERIC THEN IF NUM(YM.FEE.DIFF5) = NUMERIC THEN
        YM1.FEE.DIFF5 = YM1.FEE.DIFF5 - YM.FEE.DIFF5
        IF YM1.FEE.DIFF5 = 0 THEN YM1.FEE.DIFF5 = ""
    END
    YM.FEE.DIFF5 = YM1.FEE.DIFF5
    YM.FEE5 = YM.FEE.DIFF5
    YM1.FEE5 = YM.FEE5
    YM.FEE5 = R.NEW(34)<1,5>
    IF NUM(YM1.FEE5) = NUMERIC THEN IF NUM(YM.FEE5) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE5 * YM.FEE5
        YM1.FEE5 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE5 = 0 THEN YM1.FEE5 = ""
    END
    YM.FEE5 = YM1.FEE5
    YM.SUM5 = YM.FEE5
    IF NUM(YM1.SUM5) = NUMERIC THEN IF NUM(YM.SUM5) = NUMERIC THEN
        YM1.SUM5 = YM1.SUM5 + YM.SUM5
        IF YM1.SUM5 = 0 THEN YM1.SUM5 = ""
    END
    YM.SUM5 = YM1.SUM5
    YM.SUM6 = YM.SUM5
    YM1.SUM6 = YM.SUM6
    YM.FEE.DIFF6 = R.NEW(36)<1,6>
    YM1.FEE.DIFF6 = YM.FEE.DIFF6
    YM.FEE.DIFF6 = R.NEW(35)<1,6>
    IF NUM(YM1.FEE.DIFF6) = NUMERIC THEN IF NUM(YM.FEE.DIFF6) = NUMERIC THEN
        YM1.FEE.DIFF6 = YM1.FEE.DIFF6 - YM.FEE.DIFF6
        IF YM1.FEE.DIFF6 = 0 THEN YM1.FEE.DIFF6 = ""
    END
    YM.FEE.DIFF6 = YM1.FEE.DIFF6
    YM.FEE6 = YM.FEE.DIFF6
    YM1.FEE6 = YM.FEE6
    YM.FEE6 = R.NEW(34)<1,6>
    IF NUM(YM1.FEE6) = NUMERIC THEN IF NUM(YM.FEE6) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE6 * YM.FEE6
        YM1.FEE6 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE6 = 0 THEN YM1.FEE6 = ""
    END
    YM.FEE6 = YM1.FEE6
    YM.SUM6 = YM.FEE6
    IF NUM(YM1.SUM6) = NUMERIC THEN IF NUM(YM.SUM6) = NUMERIC THEN
        YM1.SUM6 = YM1.SUM6 + YM.SUM6
        IF YM1.SUM6 = 0 THEN YM1.SUM6 = ""
    END
    YM.SUM6 = YM1.SUM6
    YM.SUM7 = YM.SUM6
    YM1.SUM7 = YM.SUM7
    YM.FEE.DIFF7 = R.NEW(36)<1,7>
    YM1.FEE.DIFF7 = YM.FEE.DIFF7
    YM.FEE.DIFF7 = R.NEW(35)<1,7>
    IF NUM(YM1.FEE.DIFF7) = NUMERIC THEN IF NUM(YM.FEE.DIFF7) = NUMERIC THEN
        YM1.FEE.DIFF7 = YM1.FEE.DIFF7 - YM.FEE.DIFF7
        IF YM1.FEE.DIFF7 = 0 THEN YM1.FEE.DIFF7 = ""
    END
    YM.FEE.DIFF7 = YM1.FEE.DIFF7
    YM.FEE7 = YM.FEE.DIFF7
    YM1.FEE7 = YM.FEE7
    YM.FEE7 = R.NEW(34)<1,7>
    IF NUM(YM1.FEE7) = NUMERIC THEN IF NUM(YM.FEE7) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE7 * YM.FEE7
        YM1.FEE7 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE7 = 0 THEN YM1.FEE7 = ""
    END
    YM.FEE7 = YM1.FEE7
    YM.SUM7 = YM.FEE7
    IF NUM(YM1.SUM7) = NUMERIC THEN IF NUM(YM.SUM7) = NUMERIC THEN
        YM1.SUM7 = YM1.SUM7 + YM.SUM7
        IF YM1.SUM7 = 0 THEN YM1.SUM7 = ""
    END
    YM.SUM7 = YM1.SUM7
    YM.SUM8 = YM.SUM7
    YM1.SUM8 = YM.SUM8
    YM.FEE.DIFF8 = R.NEW(36)<1,8>
    YM1.FEE.DIFF8 = YM.FEE.DIFF8
    YM.FEE.DIFF8 = R.NEW(35)<1,8>
    IF NUM(YM1.FEE.DIFF8) = NUMERIC THEN IF NUM(YM.FEE.DIFF8) = NUMERIC THEN
        YM1.FEE.DIFF8 = YM1.FEE.DIFF8 - YM.FEE.DIFF8
        IF YM1.FEE.DIFF8 = 0 THEN YM1.FEE.DIFF8 = ""
    END
    YM.FEE.DIFF8 = YM1.FEE.DIFF8
    YM.FEE8 = YM.FEE.DIFF8
    YM1.FEE8 = YM.FEE8
    YM.FEE8 = R.NEW(34)<1,8>
    IF NUM(YM1.FEE8) = NUMERIC THEN IF NUM(YM.FEE8) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE8 * YM.FEE8
        YM1.FEE8 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE8 = 0 THEN YM1.FEE8 = ""
    END
    YM.FEE8 = YM1.FEE8
    YM.SUM8 = YM.FEE8
    IF NUM(YM1.SUM8) = NUMERIC THEN IF NUM(YM.SUM8) = NUMERIC THEN
        YM1.SUM8 = YM1.SUM8 + YM.SUM8
        IF YM1.SUM8 = 0 THEN YM1.SUM8 = ""
    END
    YM.SUM8 = YM1.SUM8
    YM.SUM9 = YM.SUM8
    YM1.SUM9 = YM.SUM9
    YM.FEE.DIFF9 = R.NEW(36)<1,9>
    YM1.FEE.DIFF9 = YM.FEE.DIFF9
    YM.FEE.DIFF9 = R.NEW(35)<1,9>
    IF NUM(YM1.FEE.DIFF9) = NUMERIC THEN IF NUM(YM.FEE.DIFF9) = NUMERIC THEN
        YM1.FEE.DIFF9 = YM1.FEE.DIFF9 - YM.FEE.DIFF9
        IF YM1.FEE.DIFF9 = 0 THEN YM1.FEE.DIFF9 = ""
    END
    YM.FEE.DIFF9 = YM1.FEE.DIFF9
    YM.FEE9 = YM.FEE.DIFF9
    YM1.FEE9 = YM.FEE9
    YM.FEE9 = R.NEW(34)<1,9>
    IF NUM(YM1.FEE9) = NUMERIC THEN IF NUM(YM.FEE9) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE9 * YM.FEE9
        YM1.FEE9 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE9 = 0 THEN YM1.FEE9 = ""
    END
    YM.FEE9 = YM1.FEE9
    YM.SUM9 = YM.FEE9
    IF NUM(YM1.SUM9) = NUMERIC THEN IF NUM(YM.SUM9) = NUMERIC THEN
        YM1.SUM9 = YM1.SUM9 + YM.SUM9
        IF YM1.SUM9 = 0 THEN YM1.SUM9 = ""
    END
    YM.SUM9 = YM1.SUM9
    YM.FEE.PRINT = YM.SUM9
    YM1.FEE.PRINT = YM.FEE.PRINT
    YM.FEE.DIFF10 = R.NEW(36)<1,10>
    YM1.FEE.DIFF10 = YM.FEE.DIFF10
    YM.FEE.DIFF10 = R.NEW(35)<1,10>
    IF NUM(YM1.FEE.DIFF10) = NUMERIC THEN IF NUM(YM.FEE.DIFF10) = NUMERIC THEN
        YM1.FEE.DIFF10 = YM1.FEE.DIFF10 - YM.FEE.DIFF10
        IF YM1.FEE.DIFF10 = 0 THEN YM1.FEE.DIFF10 = ""
    END
    YM.FEE.DIFF10 = YM1.FEE.DIFF10
    YM.FEE10 = YM.FEE.DIFF10
    YM1.FEE10 = YM.FEE10
    YM.FEE10 = R.NEW(34)<1,10>
    IF NUM(YM1.FEE10) = NUMERIC THEN IF NUM(YM.FEE10) = NUMERIC THEN
        PRECISION 6; YFD = YM1.FEE10 * YM.FEE10
        YM1.FEE10 = OCONV(ICONV(YFD,'MD9'),'MD9'); PRECISION 6
        IF YM1.FEE10 = 0 THEN YM1.FEE10 = ""
    END
    YM.FEE10 = YM1.FEE10
    YM.FEE.PRINT = YM.FEE10
    IF NUM(YM1.FEE.PRINT) = NUMERIC THEN IF NUM(YM.FEE.PRINT) = NUMERIC THEN
        YM1.FEE.PRINT = YM1.FEE.PRINT + YM.FEE.PRINT
        IF YM1.FEE.PRINT = 0 THEN YM1.FEE.PRINT = ""
    END
    YM.FEE.PRINT = YM1.FEE.PRINT
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.FEE.PRINT <> "" THEN
        YM.FEE.PRINT = TRIM(FMT(YM.FEE.PRINT,"19R":YDEC))
    END
    YR.REC(13) = YM.FEE.PRINT
    YTRUE.1 = 0
    YM.MAT.DATE = YM.CONTRACT.NO
    IF YM.MAT.DATE <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.MAT.DATE = YFOR.FD
    END
    YM.MAT.DATE.CHECK = YM.MAT.DATE
    IF YM.MAT.DATE.CHECK > 999 THEN
        YTRUE.1 = 1
        YM.MAT.DATE = YM.CONTRACT.NO
        IF YM.MAT.DATE <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.MAT.DATE = YFOR.FD
        END
        YM.MAT.DATE.DUMMY = YM.MAT.DATE
    END
    IF NOT(YTRUE.1) THEN
        YM.MAT.DATE = YM.CONTRACT.NO
        IF YM.MAT.DATE <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.MAT.DATE = YFOR.FD
        END
        YM.MAT.DATE.CHECK = YM.MAT.DATE
        IF YM.MAT.DATE.CHECK <= 999 THEN
            YTRUE.1 = 1
            YM.MAT.DATE = YM.CONTRACT.NO
            IF YM.MAT.DATE <> "" THEN
                YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
                YFORFIL = YF.LD.LOANS.AND.DEPOSITS
                YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
                YM.MAT.DATE = YFOR.FD
            END
            YM.CALL.NOTICE.LIT = YM.MAT.DATE
            YM1.CALL.NOTICE.LIT = YM.CALL.NOTICE.LIT
            YM.CALL.NOTICE.LIT = " D/N"
            YM1.CALL.NOTICE.LIT = YM1.CALL.NOTICE.LIT : YM.CALL.NOTICE.LIT
            YM.CALL.NOTICE.LIT = YM1.CALL.NOTICE.LIT
            YM.MAT.DATE.DUMMY = YM.CALL.NOTICE.LIT
        END
    END
    IF NOT(YTRUE.1) THEN YM.MAT.DATE.DUMMY = ""
    YM.MAT.DATE.PRINT = YM.MAT.DATE.DUMMY
    YR.REC(14) = YM.MAT.DATE.PRINT
    YM.PRINT.COLON = ":"
    YR.REC(15) = YM.PRINT.COLON
    YM.VAL.DATE = YM.CONTRACT.NO
    IF YM.VAL.DATE <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_6_":YM.VAL.DATE
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.VAL.DATE = YFOR.FD
    END
    YR.REC(16) = YM.VAL.DATE
    YM.OVERDUE.LIT = "OVERDUE"
    YR.REC(17) = YM.OVERDUE.LIT
    YM.FILE.NAME2 = "F.LMM.ACCOUNT.BALANCES"
    YM91.GOSUB = YM.FILE.NAME2
    YM.ACCBAL.KEY.PARAM2 = YM.ACCBAL.KEY
    YM92.GOSUB = YM.ACCBAL.KEY.PARAM2
    YM.FIELD.NO2 = "7"
    YM93.GOSUB = YM.FIELD.NO2
    YM.OP.CODE2 = "LAST"
    YM94.GOSUB = YM.OP.CODE2
    YM.PRINC.OVERDUE = ""
    YM95.GOSUB = YM.PRINC.OVERDUE
    CALL @LD.EXTRCT.VAL (YM91.GOSUB, YM92.GOSUB, YM93.GOSUB, YM94.GOSUB, YM95.GOSUB)
    YM.FILE.NAME2 = YM91.GOSUB
    YM.ACCBAL.KEY.PARAM2 = YM92.GOSUB
    YM.FIELD.NO2 = YM93.GOSUB
    YM.OP.CODE2 = YM94.GOSUB
    YM.PRINC.OVERDUE = YM95.GOSUB
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.PRINC.OVERDUE <> "" THEN
        YM.PRINC.OVERDUE = TRIM(FMT(YM.PRINC.OVERDUE,"19R":YDEC))
    END
    YR.REC(18) = YM.PRINC.OVERDUE
    YM.INT.OVERDUE = R.NEW(12)
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.INT.OVERDUE <> "" THEN
        YM.INT.OVERDUE = TRIM(FMT(YM.INT.OVERDUE,"19R":YDEC))
    END
    YR.REC(19) = YM.INT.OVERDUE
    YM.COMM.OVERDUE = R.NEW(16)
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.COMM.OVERDUE <> "" THEN
        YM.COMM.OVERDUE = TRIM(FMT(YM.COMM.OVERDUE,"19R":YDEC))
    END
    YR.REC(20) = YM.COMM.OVERDUE
    YM.BLANK.LINE.1 = " "
    YR.REC(21) = YM.BLANK.LINE.1
    YM.TAX.LIT = "TAX"
    YR.REC(22) = YM.TAX.LIT
    YM.PRINC.TAX = R.NEW(83)
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.PRINC.TAX <> "" THEN
        YM.PRINC.TAX = TRIM(FMT(YM.PRINC.TAX,"19R":YDEC))
    END
    YR.REC(23) = YM.PRINC.TAX
    YTRUE.1 = 0
    YM.WHT.RATE = YM.CONTRACT.NO
    IF YM.WHT.RATE <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_32_":YM.WHT.RATE
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.WHT.RATE = YFOR.FD
    END
    IF YM.WHT.RATE <> "" THEN
        YTRUE.1 = 1
        YM.WHT.ACCR = R.NEW(77)
        YM.TAX.DUMMY = YM.WHT.ACCR
    END
    IF NOT(YTRUE.1) THEN
        YM.LOCAL.INT.TAX.RATE = YM.CONTRACT.NO
        IF YM.LOCAL.INT.TAX.RATE <> "" THEN
            YCOMP = "LD.LOANS.AND.DEPOSITS_29.1_":YM.LOCAL.INT.TAX.RATE
            YFORFIL = YF.LD.LOANS.AND.DEPOSITS
            YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
            YM.LOCAL.INT.TAX.RATE = YFOR.FD
        END
        IF YM.LOCAL.INT.TAX.RATE <> "" THEN
            YTRUE.1 = 1
            YM.INT.TAX.LOCAL = R.NEW(84)
            YM.TAX.DUMMY = YM.INT.TAX.LOCAL
        END
    END
    IF NOT(YTRUE.1) THEN YM.TAX.DUMMY = ""
    YM.TAX.PRINT = YM.TAX.DUMMY
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.TAX.PRINT <> "" THEN
        YM.TAX.PRINT = TRIM(FMT(YM.TAX.PRINT,"19R":YDEC))
    END
    YR.REC(24) = YM.TAX.PRINT
    YM.COMM.TAX = R.NEW(85)
    YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
    IF YM.COMM.TAX <> "" THEN
        YM.COMM.TAX = TRIM(FMT(YM.COMM.TAX,"19R":YDEC))
    END
    YR.REC(25) = YM.COMM.TAX
    YM.BLANK.LINE.2 = " "
    YR.REC(26) = YM.BLANK.LINE.2
    YM.START.DATE.LIT = "START DATE"
    YR.REC(27) = YM.START.DATE.LIT
    YM.INT.START.DATE = R.NEW(51)
    YR.REC(28) = YM.INT.START.DATE
    YM.COMM.START.DATE = R.NEW(66)
    YR.REC(29) = YM.COMM.START.DATE
    YM.END.DATE.LIT = "END DATE"
    YR.REC(30) = YM.END.DATE.LIT
    YM.INT.END.DATE = R.NEW(52)
    YR.REC(31) = YM.INT.END.DATE
    YM.COMM.END.DATE = R.NEW(67)
    YR.REC(32) = YM.COMM.END.DATE
    YM.ACCR.LIT = "ACCRUED TO"
    YR.REC(33) = YM.ACCR.LIT
    YM.FILE.NAME4 = "F.LMM.ACCOUNT.BALANCES"
    YM115.GOSUB = YM.FILE.NAME4
    YM.ACCBAL.KEY.PARAM4 = YM.ACCBAL.KEY
    YM116.GOSUB = YM.ACCBAL.KEY.PARAM4
    YM.FIELD.NO4 = "62"
    YM117.GOSUB = YM.FIELD.NO4
    YM.OP.CODE4 = "LAST"
    YM118.GOSUB = YM.OP.CODE4
    YM.INT.ACCR.DATE = ""
    YM119.GOSUB = YM.INT.ACCR.DATE
    CALL @LD.EXTRCT.VAL (YM115.GOSUB, YM116.GOSUB, YM117.GOSUB, YM118.GOSUB, YM119.GOSUB)
    YM.FILE.NAME4 = YM115.GOSUB
    YM.ACCBAL.KEY.PARAM4 = YM116.GOSUB
    YM.FIELD.NO4 = YM117.GOSUB
    YM.OP.CODE4 = YM118.GOSUB
    YM.INT.ACCR.DATE = YM119.GOSUB
    YM.INT.ACCR.DT.PRT = YM.INT.ACCR.DATE
    YR.REC(34) = YM.INT.ACCR.DT.PRT
    YM.FILE.NAME5 = "F.LMM.ACCOUNT.BALANCES"
    YM121.GOSUB = YM.FILE.NAME5
    YM.ACCBAL.KEY.PARAM5 = YM.ACCBAL.KEY
    YM122.GOSUB = YM.ACCBAL.KEY.PARAM5
    YM.FIELD.NO5 = "70"
    YM123.GOSUB = YM.FIELD.NO5
    YM.OP.CODE5 = "LAST"
    YM124.GOSUB = YM.OP.CODE5
    YM.COMM.ACCR.DATE = ""
    YM125.GOSUB = YM.COMM.ACCR.DATE
    CALL @LD.EXTRCT.VAL (YM121.GOSUB, YM122.GOSUB, YM123.GOSUB, YM124.GOSUB, YM125.GOSUB)
    YM.FILE.NAME5 = YM121.GOSUB
    YM.ACCBAL.KEY.PARAM5 = YM122.GOSUB
    YM.FIELD.NO5 = YM123.GOSUB
    YM.OP.CODE5 = YM124.GOSUB
    YM.COMM.ACCR.DATE = YM125.GOSUB
    YR.REC(35) = YM.COMM.ACCR.DATE
    YM.BLANK.LINE.3 = " "
    YR.REC(36) = YM.BLANK.LINE.3
    YM.END.REC.LIT1 = "*********************************"
    YR.REC(37) = YM.END.REC.LIT1
    YM.END.REC.LIT2 = "*********************************"
    YR.REC(38) = YM.END.REC.LIT2
    YM.END.REC.LIT3 = "*********************************"
    YR.REC(39) = YM.END.REC.LIT3
    YM.END.REC.LIT4 = "*********************************"
    YR.REC(40) = YM.END.REC.LIT4
*
    YKEYNO = YKEYNO + 1
    IF YKEYNO > 9999 THEN
        YKEY = YKEY:YKEYNO
    END ELSE
        YKEY = YKEY : FMT(YKEYNO,'5"0"R')
    END
    MATWRITE YR.REC TO F.FILE, YKEY
*
    IF NOT(PHNO) THEN
        IF YWRITNO < 9 THEN
            YWRITNO = YWRITNO + 1
        END ELSE
            YWRITNO = 0; YBLOCKNO = YBLOCKNO + 10
            PRINT @(41,L1ST-3):YBLOCKNO+YWRITNO:
        END
    END
RETURN
*************************************************************************
*
* Update Key (and convert invalid Key char.)
8000000:
*
    YLEN.KEY = LEN(YKEYFD)
    FOR YNO = 1 TO YLEN.KEY
        YKEY.CHR = YKEYFD[YNO,1]
        IF YKEY.CHR MATCHES "1A" OR YKEY.CHR MATCHES "1N" THEN
            YKEY = YKEY : YKEY.CHR
        END ELSE
            IF INDEX(".$",YKEY.CHR,1) THEN
                YKEY = YKEY : YKEY.CHR
            END ELSE
                YKEY = YKEY : "&"
            END
        END
    NEXT YNO
RETURN
*************************************************************************
*
* Update table of Parameters of foreign file
9000000:
*
    LOCATE YCOMP IN YT.FORFIL<1,1> SETTING YLOC.FOR ELSE
        YFOR.ID = FIELD(YCOMP,"_",3)
        YFOR.FD = FIELD(YCOMP,"_",2)
        YFOR.AF = FIELD(YFOR.FD,".",1)
        YFOR.AV = FIELD(YFOR.FD,".",2)
        YFOR.AS = FIELD(YFOR.FD,".",3)
*
        T.PWD.SAVE = T.PWD; T.PWD = ""
        IF YT.SMS THEN
            LOCATE FIELD(YCOMP,"_",1) IN YT.SMS<1,1> SETTING T.PWD ELSE NULL
        END
        IF T.PWD THEN
            MAT R.NEW.LAST = MAT R.NEW
            ID.NEW.SAVE = ID.NEW; ID.NEW = YFOR.ID
            MATREAD R.NEW FROM YFORFIL, ID.NEW ELSE MAT R.NEW = ""
            T.PWD = YT.SMS<2,T.PWD>; CONVERT @SM TO @FM IN T.PWD
            CALL CONTROL.USER.PROFILE ("RECORD")
            IF ETEXT THEN
                YFOR.FD = "@"
            END ELSE
                YFOR.FD = R.NEW(YFOR.AF)
            END
            MAT R.NEW = MAT R.NEW.LAST; ID.NEW = ID.NEW.SAVE
        END ELSE
            IF FIELD(YCOMP,"_",1) = "DATES"  AND (RUNNING.UNDER.BATCH) THEN
                COB.N.W.DATE = R.DATES(YFOR.AF)
                YFOR.FD = COB.N.W.DATE
            END ELSE
                READV YFOR.FD FROM YFORFIL, YFOR.ID, YFOR.AF ELSE YFOR.FD = ""
            END
        END
        T.PWD = T.PWD.SAVE; T.PWD.SAVE = ""
*
        IF NOT(YHANDLE.LNGG) THEN
            IF YFOR.AV <> "" THEN YFOR.FD = YFOR.FD<1,YFOR.AV,YFOR.AS>
        END ELSE
            IF YFOR.FD<1,LNGG> = "" THEN
                YFOR.FD = YFOR.FD<1,1>
            END ELSE
                YFOR.FD = YFOR.FD<1,LNGG>
            END
        END
        IF NOT(COUNT(YFOR.FD,@VM)) THEN
            DEL YT.FORFIL<1,50>; DEL YT.FORFIL<2,50>
            INS YCOMP BEFORE YT.FORFIL<1,1>
            INS YFOR.FD BEFORE YT.FORFIL<2,1>
        END
        YLOC.FOR = 0
    END
    IF YLOC.FOR THEN YFOR.FD = YT.FORFIL<2,YLOC.FOR>
    IF YPART.S <> "" THEN
        YCOUNT.FOR = COUNT(YFOR.FD,@VM)+1
        FOR YAV.FOR = 1 TO YCOUNT.FOR
            YCOUNT.AS.FOR = COUNT(YFOR.FD<1,YAV.FOR>,@SM)+1
            FOR YAS.FOR = 1 TO YCOUNT.AS.FOR
                IF YFD.LEN = "" THEN
                    YFOR.FD<1,YAV.FOR,YAS.FOR> = FIELD(YFOR.FD<1,YAV.FOR,YAS.FOR>,YPART.S,YPART.L)
                END ELSE
                    X = FMT(YFOR.FD<1,YAV.FOR,YAS.FOR>,YFD.LEN)
                    YFOR.FD<1,YAV.FOR,YAS.FOR> = X[YPART.S,YPART.L]
                END
            NEXT YAS.FOR
        NEXT YAV.FOR
    END
RETURN
*************************************************************************
*
* Ask for valid file password in connection with Company code
9300000:
*
    IF X THEN IF R.USER<EB.USE.COMPANY.RESTR,X> THEN
        IF R.USER<EB.USE.COMPANY.RESTR,X> <> YID.COMP THEN X = 0
    END
RETURN
*************************************************************************
END
