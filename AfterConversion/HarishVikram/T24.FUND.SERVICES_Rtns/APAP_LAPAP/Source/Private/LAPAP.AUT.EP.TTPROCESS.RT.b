$PACKAGE APAP.LAPAP
*-----------------------------------------------------------------------------
* <Rating>-60</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE LAPAP.AUT.EP.TTPROCESS.RT
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
*This routine is an authorisation routine attached to below versions,
*TELLER, SERVICE.CREATE

* Input/Output:
*--------------
* IN  : -NA-
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference            Description
* 27-Jan-2023      J.Q.- APAP                             Initial Creation
*  06-11-2023      HARISHVIKRAM C   R22 Manual Conversion  BP name removed in INSERT file
*------------------------------------------------------------------------------------------
    $INSERT  I_EQUATE      ;*R22 Manual Conversion-start
    $INSERT  I_COMMON
    $INSERT  I_F.TELLER
    $INSERT  I_F.USER
    $INSERT  I_F.FUNDS.TRANSFER
    $INSERT  I_F.TELLER.DEFAULT
    $INSERT  I_F.REDO.TELLER.PROCESS
    $INSERT  I_F.REDO.PIGGY.STOCK.BY.DATE
    $INSERT  I_F.REDO.TT.GROUP.PARAM
    $INSERT  I_F.REDO.H.PIGGY.BANKS
    $INSERT  I_F.REDO.H.MAIN.COMPANY
    $INSERT  I_F.REDO.ITEM.STOCK
    $INSERT  I_F.REDO.ITEM.STOCK.BY.DATE
    $INSERT  I_F.REDO.TELLER.REJECT
    $INSERT  I_F.REDO.TFS.PROCESS
    $INSERT  I_F.REDO.TFS.REJECT
    $INSERT  I_F.REDO.H.ITEM.DETAILS
    $INSERT  I_F.T24.FUND.SERVICES      ;*R22 Manual Conversion-end

    GOSUB INIT
    GOSUB CHECK.COND
RETURN
INIT:
*MSG<-1> = 'Ingreso en LAPAP.AUT.EP.TTPROCESS.RT'
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)
    LREF.FIELDS='L.TT.PROCESS':FM:'L.TT.PROCESS':FM:'L.TT.PROCESS':FM:'L.US.IDC.BR':VM:'L.US.IDC.CODE'
    LREF.POS=''
    LREF.APPLICATION='TELLER':FM:'T24.FUND.SERVICES':FM:'FUNDS.TRANSFER':FM:'USER'
    CALL MULTI.GET.LOC.REF(LREF.APPLICATION,LREF.FIELDS,LREF.POS)
    VAR.TELLER.PROCESS.ID.POS=LREF.POS<1,1>
    VAR.TFS.PROCESS.ID.POS=LREF.POS<2,1>
    VAR.FT.PROCESS.ID.POS=LREF.POS<3,1>
    POS.BRANCH = LREF.POS<4,1>
    POS.DEPT = LREF.POS<4,2>


    FN.REDO.TELLER.PROCESS='F.REDO.TELLER.PROCESS'
    F.REDO.TELLER.PROCESS=''
    CALL OPF(FN.REDO.TELLER.PROCESS,F.REDO.TELLER.PROCESS)

    FN.REDO.ITEM.STOCK = 'F.REDO.ITEM.STOCK'
    F.REDO.ITEM.STOCK =''
    CALL OPF(FN.REDO.ITEM.STOCK,F.REDO.ITEM.STOCK)

    FN.REDO.ITEM.STOCK.BY.DATE = 'F.REDO.ITEM.STOCK.BY.DATE'
    F.REDO.ITEM.STOCK.BY.DATE = ''
    CALL OPF(FN.REDO.ITEM.STOCK.BY.DATE,F.REDO.ITEM.STOCK.BY.DATE)


    FN.USER='F.USER'
    F.USER = ''
    CALL OPF(FN.USER,F.USER)

    FN.REDO.PIGGY.STOCK.BY.DATE = 'F.REDO.PIGGY.STOCK.BY.DATE'
    F.REDO.PIGGY.STOCK.BY.DATE = ''
    CALL OPF(FN.REDO.PIGGY.STOCK.BY.DATE,F.REDO.PIGGY.STOCK.BY.DATE)

    FN.REDO.TELLER.REJECT='F.REDO.TELLER.REJECT'
    F.REDO.TELLER.REJECT=''
    CALL OPF(FN.REDO.TELLER.REJECT,F.REDO.TELLER.REJECT)

    FN.REDO.H.MAIN.COMPANY ='F.REDO.H.MAIN.COMPANY'
    F.REDO.H.MAIN.COMPANY = ''
    CALL OPF(FN.REDO.H.MAIN.COMPANY,F.REDO.H.MAIN.COMPANY)

    FN.REDO.H.PIGGY.BANKS = 'F.REDO.H.PIGGY.BANKS'
    F.REDO.H.PIGGY.BANKS = ''
    CALL OPF(FN.REDO.H.PIGGY.BANKS,F.REDO.H.PIGGY.BANKS)

    FN.REDO.TFS.PROCESS='F.REDO.TFS.PROCESS'
    F.REDO.TFS.PROCESS=''
    CALL OPF(FN.REDO.TFS.PROCESS,F.REDO.TFS.PROCESS)

    FN.REDO.TFS.REJECT='F.REDO.TFS.REJECT'
    F.REDO.TFS.REJECT=''
    CALL OPF(FN.REDO.TFS.REJECT,F.REDO.TFS.REJECT)

    FN.TELLER.DEFAULT = 'F.TELLER.DEFAULT'
    F.TELLER.DEFAULT = ''
    CALL OPF(FN.TELLER.DEFAULT,F.TELLER.DEFAULT)

    FN.ITEM.DETAILS = 'F.REDO.H.ITEM.DETAILS'
    F.ITEM.DETAILS = ''
    CALL OPF(FN.ITEM.DETAILS,F.ITEM.DETAILS)
RETURN

CHECK.COND:
*MSG = ''
*MSG<-1> = 'App =' : APPLICATION
*MSG<-1> = 'PGM VERSION =' : PGM.VERSION
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

    IF APPLICATION EQ 'REDO.TELLER.PROCESS' AND PGM.VERSION EQ ",PROCESS" THEN


        Y.SUB.GROUP = R.NEW(TEL.PRO.SUB.GROUP)

*MSG = ''
*MSG<-1> = 'Sub Group = ' : Y.SUB.GROUP
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

        IF Y.SUB.GROUP EQ 'PASO RAPIDO' OR Y.SUB.GROUP EQ 'KIT PASO RAPIDO' OR Y.SUB.GROUP EQ 'KIT PASO RAPIDO PIGGY' THEN
            GOSUB PROCESS
        END
    END
RETURN

PROCESS:

*MSG = ''
*MSG<-1> = 'Ingreso a PROCESS'
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)
    Y.QTY = R.NEW(TEL.PRO.QUANTITY) * 1;
    Y.CODE.VAL = ''
    Y.CODE = ''
    Y.DES = ''
    Y.GROUP = ID.COMPANY

    CALL F.READ(FN.USER,OPERATOR,R.USE,F.USER,Y.ERR.US)

    Y.BRANCH.LIST = R.USE<EB.USE.LOCAL.REF,POS.BRANCH>

    Y.CODE.LIST   = R.USE<EB.USE.LOCAL.REF,POS.DEPT>

    LOCATE ID.COMPANY IN Y.BRANCH.LIST<1,1,1> SETTING POS.BR THEN
        Y.CODE.VAL = Y.CODE.LIST<1,1,POS.BR>

    END

*MSG = ''
*MSG<-1> = 'QTY = ' : Y.QTY
*MSG<-1> = 'CODE VAL = ' : Y.CODE.VAL
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

    CALL F.READ(FN.ITEM.DETAILS,"SYSTEM",R.ITEM.DETAILS,F.ITEM.DETAILS,Y.ERR.ITEM.DETAILS)
    IF (R.ITEM.DETAILS) THEN

*MSG = ''
*MSG<-1> = 'Inside ITEM.DEATILS'
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

        Y.DESCRIPTION.LIST = R.ITEM.DETAILS<IT.DT.DESCRIPTION>
        Y.ITEM.CODE = ''

        Y.SUB.GROUP.FMT = Y.SUB.GROUP
        Y.DESC.LIST.FMT = Y.DESCRIPTION.LIST

        CHANGE ' ' TO '.' IN Y.SUB.GROUP.FMT
        CHANGE ' ' TO '.' IN Y.DESC.LIST.FMT

        FIND Y.SUB.GROUP.FMT IN Y.DESC.LIST.FMT SETTING Ap, Vp THEN
*MSG = ''
*MSG<-1> = "Item is in Field ":Ap:", value ":Vp
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)



*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

            Y.ITEM.CODE = R.ITEM.DETAILS<IT.DT.SUPPLY.CODE,Vp>
            IF(Y.CODE.VAL) THEN
                Y.ID.COMP.ITEM = ID.COMPANY : '-' : Y.CODE.VAL : '.' : Y.ITEM.CODE
                Y.ID.COMP = ID.COMPANY : '-' : Y.CODE.VAL
            END ELSE
                Y.ID.COMP.ITEM = ID.COMPANY : '.' : Y.ITEM.CODE
                Y.ID.COMP = ID.COMPANY
            END

            GOSUB UPD.ITEM.STOCK

            GOSUB UPD.ITEM.STOCK.RPT

        END ELSE
            MSG = ''
*MSG<-1> =  "JAC could not be found"
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)
        END
    END




RETURN

UPD.ITEM.STOCK:
*-------------------------------
    Y.ITEM.STOCK.ID = Y.ID.COMP

*MSG = ''
*MSG<-1> = 'ID to update : ' : Y.ITEM.STOCK.ID : ', on :' : FN.REDO.ITEM.STOCK
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

    CALL F.READ(FN.REDO.ITEM.STOCK,Y.ITEM.STOCK.ID,R.REDO.ITEM.STOCK,F.REDO.ITEM.STOCK,Y.ERR)
    IF R.REDO.ITEM.STOCK THEN
        LOCATE Y.ITEM.CODE IN R.REDO.ITEM.STOCK<ITEM.REG.ITEM.CODE,1> SETTING POS THEN
            Y.BAL = R.REDO.ITEM.STOCK<ITEM.REG.BAL,POS>
            R.REDO.ITEM.STOCK<ITEM.REG.BAL,POS> = Y.BAL - R.NEW(TEL.PRO.QUANTITY)
        END
        CALL F.WRITE(FN.REDO.ITEM.STOCK,Y.ITEM.STOCK.ID,R.REDO.ITEM.STOCK)
    END
RETURN

*-------------------------------
UPD.ITEM.STOCK.RPT:
*-------------------------------

    Y.ITEM.STOCK.RPT.ID = Y.ID.COMP.ITEM
    MSG = ''
*MSG<-1> = 'ID to update : ' : Y.ITEM.STOCK.RPT.ID : ', on :' : FN.REDO.ITEM.STOCK.BY.DATE
*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)
    CALL F.READ(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID,R.REDO.ITEM.STOCK.BY.DATE,F.REDO.ITEM.STOCK.BY.DATE,Y.ER.RPT)
    Y.DATE.RPT = TODAY
    IF R.REDO.ITEM.STOCK.BY.DATE THEN
        LOCATE Y.DATE.RPT IN R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE,1> SETTING POS.RPT THEN
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ASSIGNED,POS.RPT>            =   R.NEW(TEL.PRO.QUANTITY) + R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ASSIGNED,POS.RPT>
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,POS.RPT>           =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,POS.RPT> - R.NEW(TEL.PRO.QUANTITY)

            MSG = ''
*MSG<-1> = 'Stock by date already exists...'
*MSG<-1> = 'RPT.ASSIGNED =' :   R.NEW(TEL.PRO.QUANTITY) + R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ASSIGNED,POS.RPT>
*MSG<-1> = 'RPT.AVALIABLE =' :    R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,POS.RPT> - R.NEW(TEL.PRO.QUANTITY)



*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)

        END ELSE
            Y.DATE.COUNT1 = DCOUNT(R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE>,VM)
            Y.DATE.COUNT = Y.DATE.COUNT1 + 1
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE,Y.DATE.COUNT>                =   Y.DATE.RPT
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ITEM.CODE,Y.DATE.COUNT>           =   Y.ITEM.CODE
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.INITIAL.STOCK,Y.DATE.COUNT>       =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1>
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ASSIGNED,Y.DATE.COUNT>            =   R.NEW(TEL.PRO.QUANTITY)
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT>           =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1> - R.NEW(TEL.PRO.QUANTITY)

            MSG = ''
            MSG<-1> = 'Stock by date does not exists, adding initial values'
            MSG<-1> = 'Qty to decrease = ' : R.NEW(TEL.PRO.QUANTITY)
            MSG<-1> = 'REDO.ITEM.STOCK.BY.DATE updated for  ' : Y.ITEM.STOCK.RPT.ID
            MSG<-1> = 'Y.DATE.RPT = ' : Y.DATE.RPT
            MSG<-1> = 'ITEM.CODE = ' : Y.ITEM.CODE<1,1>
            MSG<-1> = 'NEW ASSIGNED =' :  R.NEW(TEL.PRO.QUANTITY)
            MSG<-1> = 'RPT.INITIAL.STOCK =' :  R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1>
            MSG<-1> = 'RPT.AVALIABLE =' :  R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1> - R.NEW(TEL.PRO.QUANTITY)
        END
    END

    CALL F.WRITE(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID,R.REDO.ITEM.STOCK.BY.DATE)


*CALL LAPAP.LOGGER('TESTLOG',ID.NEW,MSG)
RETURN
END
