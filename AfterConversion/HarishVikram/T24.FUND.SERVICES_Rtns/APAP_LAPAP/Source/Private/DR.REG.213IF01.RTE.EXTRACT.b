$PACKAGE APAP.LAPAP
*-----------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>1295</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE DR.REG.213IF01.RTE.EXTRACT(REC.ID)
*-----------------------------------------------------------------------------
* Company Name   : APAP
* Developed By   :
* Program Name   : DR.REG.213IF01.RTE.EXTRACT
* Date           : 07-Mar-2018
*-----------------------------------------------------------------------------
* Description:
*------------
* This multi-thread job is meant for to extact the tranactions made over 15000 by individual Customer daily.
*-----------------------------------------------------------------------------
* Modification History :
* ----------------------
*   Date          Author              Modification Description
*
* 08-Mar-2018     Bernard Gladin      Initial Version
*  06-11-2023      HARISHVIKRAM C   R22 Manual Conversion  / removed in INSERT file "I_DR.REG.213IF01.RTE.EXTRACT.COMMON"
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_BATCH.FILES
    $INSERT I_TSA.COMMON
    $INSERT I_F.DATES
    $INSERT I_F.CUSTOMER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.T24.FUND.SERVICES
    $INSERT I_F.COUNTRY
    $INSERT I_F.CURRENCY
*
    $INSERT I_DR.REG.213IF01.RTE.EXTRACT.COMMON
    $INSERT I_F.DR.REG.213IF01.PARAM
    $INSERT I_F.DR.REG.213IF01.CONCAT

    $INSERT I_F.REDO.RTE.CUST.CASHTXN
    $INSERT I_F.REDO.RTE.CATEG.POSITION
    $INSERT I_F.TFS.TRANSACTION
    $INSERT I_F.REDO.PAY.TYPE
    $INSERT I_F.FT.TXN.TYPE.CONDITION
    $INSERT I_F.TELLER.TRANSACTION
*
    GOSUB INIT.PROCESS
    GOSUB RTE.PROCESS
RETURN

**************
INIT.PROCESS:
**************

    CUST.TYPE = ''; CUST.CODE = ''; CUST.NAME = ''; INITIALS = ''; TXN.DATE = ''; TXN.TIME = ''; TXN.ACCTS = ''; CUST.INDUS = ''
    NATION = ''; TYPE.OF.OPER = ''; AC.AFFECT = ''; ACC.STATUS = ''; AMT.TXN = ''; CCY = '';  TT.CUST.2 = ''; CUST.ID = ''; STMT.ENT.VAL = ''
    INTER.OPER = ''; INTERMEDIARY = ''; INTERM.NAME = ''; INTERM.SURNAME = ''; INT.NATION = ''; CLNT.TYPE = ''; PERS.BENEF = ''; BEN.NAME1 = ''
    BEN.NAME2 = ''; PAIS = ''; R.DR.REG.213IF01.CONCAT = ''; DR.REG.213IF01.CONCAT.ERR = ''; PER.PERSON = ''; CUS.PEP = ''; ACT.INT = ''; PEP.INTERM = ''
    TYPE.PEP.INT = ''; ACT.BEN = ''; PEP.BEN = ''; TYPE.PEP.BEN = ''; TT.ACCT.NUM = ''; FT.ACCT.NUM = ''; TT.TRANS.CODE = ''; TT.CUST.1 = ''
    Y.FCY.FLAG = ''; YJOINT.VAL = ''
    TOT.CASH.AMT = ''
    Y.CHQ.TXN.FLAG = ''
    Y.AMY.FCY.1 = ''

    Y.TT.ACC.ID = ''

    AMT.LCY = ''; THRESHOLD.FCY = ''; R.CURRENCY = ''; CURR.ERR = ''
    CUR.AMLBUY.RATE = ''; YTHRESHOLD.CCY = ''
    THRESHOLD.FCY = R.DR.REG.213IF01.PARAM<DR.213IF01.THRESHOLD.AMT>
    YTHRESHOLD.CCY = R.DR.REG.213IF01.PARAM<DR.213IF01.THRESHOLD.CCY>

    CALL CACHE.READ(FN.CURRENCY,YTHRESHOLD.CCY,R.CURRENCY,CURR.ERR)
    CUR.AMLBUY.RATE = R.CURRENCY<EB.CUR.LOCAL.REF,L.CU.AMLBUY.RT.POS>
    AMT.LCY = THRESHOLD.FCY * CUR.AMLBUY.RATE

RETURN

*************
RTE.PROCESS:
*************

    RTE.CUST.ID = REC.ID
    CONCAT.ID = REC.ID

    R.REDO.RTE.CUST.CASHTXN = '';CUST.DATE = ''
    CALL F.READ(FN.REDO.RTE.CUST.CASHTXN,RTE.CUST.ID,R.REDO.RTE.CUST.CASHTXN,F.REDO.RTE.CUST.CASHTXN,REDO.RTE.CUST.CASHTXN.ERR)
    CNT.TXN = DCOUNT(R.REDO.RTE.CUST.CASHTXN<RTE.CASH.AMOUNT>,VM)
    IF R.REDO.RTE.CUST.CASHTXN THEN
        Y.RTE.TXN.CNT = ''
        Y.TXN.CNT = DCOUNT(R.REDO.RTE.CUST.CASHTXN<RTE.CASH.AMOUNT>,VM)
        FOR I = 1 TO Y.TXN.CNT
            IF R.REDO.RTE.CUST.CASHTXN<RTE.CASH.AMOUNT,I> NE '' THEN

                Y.RTE.TXN.CNT += 1
                TOT.CASH.AMT += R.REDO.RTE.CUST.CASHTXN<RTE.CASH.AMOUNT,I>
                Y.ID.COMPANY = R.REDO.RTE.CUST.CASHTXN<RTE.BRANCH.CODE,I>
                Y.RTE.TXN.DATE = R.REDO.RTE.CUST.CASHTXN<RTE.TRANS.DATE,I>
                Y.TXN.CASH.AMOUNT = R.REDO.RTE.CUST.CASHTXN<RTE.CASH.AMOUNT,I>
                Y.TXN.ID = R.REDO.RTE.CUST.CASHTXN<RTE.TXN.ID,I>

                CUST.ID = FIELD(RTE.CUST.ID,'.',1)
                GOSUB GET.TXN.DETAILS
            END
        NEXT I
    END

RETURN


*****************
GET.TXN.DETAILS:
*****************

    AML.CHECK.OVERRIDE.ID = 'AML.TXN.AMT.EXCEED'
    Y.OVERRIDE.FLAG = ''

    BEGIN CASE

        CASE Y.TXN.ID[1,2] EQ 'TT'
            CALL F.READ(FN.TELLER,Y.TXN.ID,R.TT,F.TELLER,TELLER.ERR)
            IF NOT(R.TT) THEN
                CALL EB.READ.HISTORY.REC(F.TT.HIS,Y.TXN.ID,R.TT,ERRH.TT)
            END
            IF R.TT THEN
                Y.TT.OVERRIDE = R.TT<TT.TE.OVERRIDE>

                FINDSTR AML.CHECK.OVERRIDE.ID IN Y.TT.OVERRIDE SETTING OVER.POS THEN
                    Y.OVERRIDE.FLAG = 'Y'
                END ELSE
                    Y.OVERRIDE.FLAG = ''
                    RETURN
                END

                IF NOT(NUM(CUST.ID)) THEN
                    CUST.ID = R.TT<TT.TE.LOCAL.REF><1,TT.L.CUSTOMER.CODE.POS>
                    IF CUST.ID EQ '' OR CUST.ID EQ 'NA' THEN
                        RETURN
                    END
                END

                Y.TT.TXN.ID = R.TT<TT.TE.TRANSACTION.CODE>
                GOSUB CHECK.TT.TRANSACTION

                ACC.ID = R.TT<TT.TE.ACCOUNT.2>
                Y.TT.ACC.ID = R.TT<TT.TE.LOCAL.REF><1,TT.L.CUSTOMER.CODE.POS>
                GOSUB GET.CUSTOMER.VALUES

                GOSUB GET.TT.ACCOUNT
                Y.RTE.TXN.CCY = Y.TT.CCY
                ACC.ID = Y.ACCOUNT
                GOSUB TT.INTERMEDIARY
                INTERM.1ST.NAME = R.TT<TT.TE.LOCAL.REF,TT.L.1ST.NAME.POS>
                INTERM.2ND.NAME = R.TT<TT.TE.LOCAL.REF,TT.L.2ND.NAME.POS>
                INTERM.SOCIAL.NAME = R.TT<TT.TE.LOCAL.REF,TT.LAST.NAME.POS>

                INT.NATION = R.TT<TT.TE.LOCAL.REF,TT.L.NATIONALITY.POS>
                SEX.VAL = R.TT<TT.TE.LOCAL.REF,TT.L.SEX.POS>
                ACT.INT = R.TT<TT.TE.LOCAL.REF,TT.L.ACT.INT.POS>
                Y.TXN.PROVINCE = R.TT<TT.TE.LOCAL.REF,TT.PROVINCE.POS>
                Y.TXN.CITY = R.TT<TT.TE.LOCAL.REF,TT.L.CITY.POS>
                Y.TXN.DISTRICT = R.TT<TT.TE.LOCAL.REF,TT.L.DISTRICT.POS>
                Y.TXN.STREET = R.TT<TT.TE.LOCAL.REF,TT.L.STREET.POS>
                Y.TXN.HOUSE.NO = R.TT<TT.TE.LOCAL.REF,TT.L.HOUSE.NO.POS>
                Y.TXN.BUILDING = R.TT<TT.TE.LOCAL.REF,TT.L.BUILDING.POS>
                Y.TXN.APARTMENT = R.TT<TT.TE.LOCAL.REF,TT.L.APARTMENT.POS>
                Y.TXN.HOME.NO = R.TT<TT.TE.LOCAL.REF,TT.L.HOME.PH.NO.POS>
                Y.TXN.OFFICE.NO = R.TT<TT.TE.LOCAL.REF,TT.L.OFFICE.PH.NO.POS>
                Y.TXN.CEL.NO = R.TT<TT.TE.LOCAL.REF,TT.L.CELLULAR.NO.POS>
                GOSUB FORM.RTE.ARR
            END ELSE
                RETURN
            END

        CASE Y.TXN.ID[1,2] EQ 'FT'
            CALL F.READ(FN.FT,Y.TXN.ID,R.FT,F.FT,FT.ERR)
            IF NOT(R.FT) THEN
                CALL EB.READ.HISTORY.REC(F.FT.HIS,Y.TXN.ID,R.FT,ERRH.FT)
            END
            IF R.FT THEN

                Y.FT.OVERRIDE = R.FT<FT.OVERRIDE>

                FINDSTR AML.CHECK.OVERRIDE.ID IN Y.FT.OVERRIDE SETTING OVER.POS THEN
                    Y.OVERRIDE.FLAG = 'Y'
                END ELSE
                    Y.OVERRIDE.FLAG = ''
                    RETURN
                END

                Y.FTTC = R.FT<FT.TRANSACTION.TYPE>
                CALL F.READ(FN.FTTC,Y.FTTC,R.FTTC,F.FTTC,FTTC.ERR)
                IF R.FTTC THEN
                    Y.TT.PAY.TYPE.ID = R.FTTC<FT6.LOCAL.REF,L.FTTC.POS>
                    GOSUB TT.PAY.TYPE
                END
                GOSUB GET.CUSTOMER.VALUES
                Y.RTE.TXN.CCY = R.FT<FT.CREDIT.CURRENCY>
                ACC.ID = R.FT<FT.CREDIT.ACCT.NO>
                Y.ACCOUNT = ACC.ID
*            GOSUB CHECK.ACCOUNT
                GOSUB FT.INTERMEDIARY

                INTERM.1ST.NAME = R.FT<FT.LOCAL.REF,FT.L.1ST.NAME.POS>
                INTERM.2ND.NAME = R.FT<FT.LOCAL.REF,FT.L.2ND.NAME.POS>
                INTERM.SOCIAL.NAME = R.FT<FT.LOCAL.REF,FT.LAST.NAME.POS>

                INT.NATION = R.FT<FT.LOCAL.REF,FT.L.NATIONALITY.POS>
                SEX.VAL = R.FT<FT.LOCAL.REF,FT.L.SEX.POS>
                ACT.INT = R.FT<FT.LOCAL.REF,FT.L.ACT.INT.POS>
                Y.TXN.PROVINCE = R.FT<FT.LOCAL.REF,FT.PROVINCE.POS>
                Y.TXN.CITY = R.FT<FT.LOCAL.REF,FT.L.CITY.POS>
                Y.TXN.DISTRICT = R.FT<FT.LOCAL.REF,FT.L.DISTRICT.POS>
                Y.TXN.STREET = R.FT<FT.LOCAL.REF,FT.L.STREET.POS>
                Y.TXN.HOUSE.NO = R.FT<FT.LOCAL.REF,FT.L.HOUSE.NO.POS>
                Y.TXN.BUILDING = R.FT<FT.LOCAL.REF,FT.L.BUILDING.POS>
                Y.TXN.APARTMENT = R.FT<FT.LOCAL.REF,FT.L.APARTMENT.POS>
                Y.TXN.HOME.NO = R.FT<FT.LOCAL.REF,FT.L.HOME.PH.NO.POS>
                Y.TXN.OFFICE.NO = R.FT<FT.LOCAL.REF,FT.L.OFFICE.PH.NO.POS>
                Y.TXN.CEL.NO = R.FT<FT.LOCAL.REF,FT.L.CELLULAR.NO.POS>
                GOSUB FORM.RTE.ARR
            END ELSE
                RETURN
            END

        CASE Y.TXN.ID[1,5] EQ 'T24FS'
            CALL F.READ(FN.T24FS,Y.TXN.ID,R.T24FS,F.T24FS,TFS.ERR)
            IF NOT(R.T24FS) THEN
                CALL EB.READ.HISTORY.REC(F.T24FS.HIS,Y.TXN.ID,R.T24FS,ERRH.T24FS)
            END

            IF R.T24FS THEN

                Y.TFS.OVERRIDE = R.T24FS<TFS.OVERRIDE>

                FINDSTR AML.CHECK.OVERRIDE.ID IN Y.TFS.OVERRIDE SETTING OVER.POS THEN
                    Y.OVERRIDE.FLAG = 'Y'
                END ELSE
                    Y.OVERRIDE.FLAG = ''
                    RETURN
                END

                Y.TFS.ACT.VERSION = R.T24FS<TFS.LOCAL.REF,L.T24FS.TRA.DAY.POS>
                ACC.ID = R.T24FS<TFS.PRIMARY.ACCOUNT>
                LOCATE Y.TFS.ACT.VERSION IN Y.TFS.SERVICE.VERSIONS<1,1> SETTING TFS.SERVICE.POS THEN
                    ACC.ID = R.T24FS<TFS.LOCAL.REF,L.FT.ADD.INFO.POS>
                    GOSUB GET.CUSTOMER.VALUES
                    GOSUB GET.TFS.DETAILS
                END
                Y.ACCOUNT = ACC.ID
                Y.TRANSACTION.CODE = R.T24FS<TFS.TRANSACTION>
                Y.TRANSACTION.CNT = DCOUNT(Y.TRANSACTION.CODE,VM)
                Y.VAR1=1
                LOOP
                WHILE Y.VAR1 LE Y.TRANSACTION.CNT
                    Y.TRANS = Y.TRANSACTION.CODE<1,Y.VAR1>
                    IF Y.TRANS EQ 'CASHDEP' OR Y.TRANS EQ 'FCASHDEP' OR Y.TRANS EQ 'CASHDEPD' THEN
                        Y.RTE.TXN.CCY = R.T24FS<TFS.CURRENCY><1,Y.VAR1>
                        CALL F.READ(FN.TFS.TRANSACTION,Y.TRANS,R.TFS.TRANSACTION,F.TFS.TRANSACTION,TFS.ERR)
                        Y.TT.TXN.ID = R.TFS.TRANSACTION<TFS.TXN.INTERFACE.AS>
                    END
                    Y.VAR1++
                REPEAT
                GOSUB CHECK.TT.TRANSACTION

                IF NOT(NUM(ACC.ID)) THEN
                    RETURN
                END
                Y.TFS.ACCT.DR = R.T24FS<TFS.ACCOUNT.DR>
                Y.TFS.ACCT.CR = R.T24FS<TFS.ACCOUNT.CR>
                Y.TFS.AC.CNT = DCOUNT(Y.TFS.ACCT.DR,VM)
                Y.TFS.ACT.VERSION = R.T24FS<TFS.LOCAL.REF,L.T24FS.TRA.DAY.POS>
                LOCATE Y.TFS.ACT.VERSION IN Y.TFS.LCY.VERSIONS<1,1> SETTING TFS.LCY.POS THEN
                    FOR V = 1 TO Y.TFS.AC.CNT
                        IF NUM(Y.TFS.ACCT.DR<1,V>) OR NUM(Y.TFS.ACCT.CR<1,V>) THEN
                            Y.TFS.TT.REF = R.T24FS<TFS.UNDERLYING,V>
                            IF Y.TFS.TT.REF[1,2] EQ 'TT' THEN
                                CALL F.READ(FN.TELLER,Y.TFS.TT.REF,R.TT,F.TELLER,TT.ERR)
                                IF NOT(R.TT) THEN
                                    CALL EB.READ.HISTORY.REC(F.TT.HIS,Y.TFS.TT.REF,R.TT,ERRH.TT)
                                END
                                IF R.TT THEN
                                    ACC.ID = R.TT<TT.TE.ACCOUNT.2>
                                    Y.TT.ACC.ID = R.TT<TT.TE.LOCAL.REF><1,TT.L.CUSTOMER.CODE.POS>
                                    GOSUB GET.CUSTOMER.VALUES
                                    GOSUB GET.TT.ACCOUNT
                                    ACC.ID = Y.ACCOUNT
                                END
                            END
                            GOSUB GET.TFS.DETAILS
                        END
                    NEXT V
                END
                GOSUB FORM.RTE.ARR
            END ELSE
                RETURN
            END


    END CASE
RETURN

********************
GET.CUSTOMER.VALUES:
********************
    R.CUSTOMER = ''; CUSTOMER.ERR = ''
    CALL F.READ(FN.CUSTOMER,CUST.ID,R.CUSTOMER,F.CUSTOMER,CUSTOMER.ERR)
    TIPO.CL.POS.VAL = R.CUSTOMER<EB.CUS.LOCAL.REF,TIPO.CL.POS>
    GOSUB GET.CUSTOMER.DETAILS
RETURN

GET.CUSTOMER.DETAILS:
*-------------------*
    NAMES = ''; CUSTOMER.TYPE = ''; CUSTOMER.CODE = ''
    NATION = R.CUSTOMER<EB.CUS.NATIONALITY>
    YRESID = R.CUSTOMER<EB.CUS.RESIDENCE>
    YGENT = R.CUSTOMER<EB.CUS.GENDER>
    CUS.NATION = R.CUSTOMER<EB.CUS.NATIONALITY>
    CUST.INDUS = R.CUSTOMER<EB.CUS.LOCAL.REF,Y.APAP.INDUS.POS>
    CUST.TOWN.COUNTRY = R.CUSTOMER<EB.CUS.TOWN.COUNTRY>
    CUST.CITY  = R.CUSTOMER<EB.CUS.COUNTRY>
    CUST.SEC = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.SEC.POS>
    CUST.ADDR = R.CUSTOMER<EB.CUS.ADDRESS>
    CHANGE VM TO ' ' IN CUST.ADDR
    YACC.ID = ACC.ID
    Y.NATION = R.CUSTOMER<EB.CUS.NATIONALITY>
    CALL F.READ(FN.COUNTRY,Y.NATION,R.COUNTRY,F.COUNTRY,ERR)
    Y.NATION = R.COUNTRY<EB.COU.COUNTRY.NAME>

    Y.PASS.NAT = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.PNA.POS>
    Y.PASS.NAT = FIELD(Y.PASS.NAT,'-',2)
    CALL F.READ(FN.COUNTRY,Y.PASS.NAT,R.COUNTRY.ACQ,F.COUNTRY,ERR)
    Y.PASS.NAT = R.COUNTRY.ACQ<EB.COU.COUNTRY.NAME>

    CUST.TEL.TYPE = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.TEL.TYPE>
    CUST.TEL.NO = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.TEL.NO>
    CUST.TEL.AREA = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.TEL.AREA>
    CHANGE SM TO FM IN CUST.TEL.TYPE
    CHANGE SM TO FM IN CUST.TEL.NO
    CHANGE SM TO FM IN CUST.TEL.AREA
    LOCATE '01' IN CUST.TEL.TYPE SETTING HOME.POS THEN
        CUST.HOME = CUST.TEL.AREA<HOME.POS>:CUST.TEL.NO<HOME.POS>
    END
    LOCATE '05' IN CUST.TEL.TYPE SETTING OFF.POS THEN
        CUST.OFF = CUST.TEL.AREA<OFF.POS>:CUST.TEL.NO<OFF.POS>
    END
    LOCATE '06' IN CUST.TEL.TYPE SETTING CELL.POS THEN
        CUST.CELL = CUST.TEL.AREA<CELL.POS>:CUST.TEL.NO<CELL.POS>
    END

    GOSUB GET.NAMES
    GOSUB GET.NAME.INITIALS

    Y.L.CUS.PEP = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CUS.PEP.POS>
    IF Y.L.CUS.PEP NE '' THEN
        TIPO.CL.POS.VAL = 'PEP'
    END

RETURN

GET.NAME.INITIALS:
*----------------*
*
    BEGIN CASE
        CASE TIPO.CL.POS.VAL EQ "PERSONA FISICA" OR TIPO.CL.POS.VAL EQ "CLIENTE MENOR"
            NAME.INITIALS = R.CUSTOMER<EB.CUS.FAMILY.NAME>
            Y.CEDULA = R.CUSTOMER<EB.CUS.LOCAL.REF,CIDENT.POS>
            Y.SOCIAL.NAME = R.CUSTOMER<EB.CUS.GIVEN.NAMES>
            Y.FIRST.NAME = R.CUSTOMER<EB.CUS.FAMILY.NAME>

        CASE TIPO.CL.POS.VAL EQ "PERSONA JURIDICA"
            NAME.INITIALS = R.CUSTOMER<EB.CUS.SHORT.NAME,1>
            Y.PASSPORT = R.CUSTOMER<EB.CUS.LEGAL.ID>
            Y.RNC = R.CUSTOMER<EB.CUS.LOCAL.REF,RNC.POS>
            Y.SOCIAL.NAME = R.CUSTOMER<EB.CUS.NAME.1>:' ':R.CUSTOMER<EB.CUS.NAME.2>
    END CASE
RETURN
*-----------------------------------------------------------------------------------
GET.NAMES:
*--------*
    BEGIN CASE
        CASE TIPO.CL.POS.VAL EQ "PERSONA FISICA" OR TIPO.CL.POS.VAL EQ "CLIENTE MENOR"
            NAMES = R.CUSTOMER<EB.CUS.GIVEN.NAMES>:' ':R.CUSTOMER<EB.CUS.FAMILY.NAME>
* Fix - 20170515
            NAMES = R.CUSTOMER<EB.CUS.GIVEN.NAMES>
        CASE TIPO.CL.POS.VAL EQ "PERSONA JURIDICA"
            NAMES = R.CUSTOMER<EB.CUS.NAME.1,1>:' ':R.CUSTOMER<EB.CUS.NAME.2,1>
    END CASE
RETURN

***************
GET.TT.ACCOUNT:
***************

    Y.DR.CR.MARKER = R.TT<TT.TE.DR.CR.MARKER>
    IF Y.DR.CR.MARKER EQ 'CREDIT' THEN
        Y.CUS = R.TT<TT.TE.CUSTOMER.1>
        Y.TT.CCY = R.TT<TT.TE.CURRENCY.2>

        Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.1>
        GOSUB READ.ACCOUNT
        IF NOT(R.ACC<AC.CUSTOMER>) THEN
            Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.2>
        END
    END ELSE
        Y.CUS = R.TT<TT.TE.CUSTOMER.2>
        Y.TT.CCY = R.TT<TT.TE.CURRENCY.1>

        Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.2>
        GOSUB READ.ACCOUNT
        IF NOT(R.ACC<AC.CUSTOMER>) THEN
            Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.1>
        END
    END

    Y.TT.AC1 = R.TT<TT.TE.ACCOUNT.1>
    Y.TT.AC2 = R.TT<TT.TE.ACCOUNT.2>
    IF NOT(NUM(Y.TT.AC1)) AND NOT(NUM(Y.TT.AC2)) THEN
        BEGIN CASE
            CASE Y.DR.CR.MARKER EQ 'CREDIT'
                Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.1>
                Y.CUS = R.TT<TT.TE.CUSTOMER.1>
                Y.TT.CCY = R.TT<TT.TE.CURRENCY.1>
                GOSUB READ.ACCOUNT
            CASE Y.DR.CR.MARKER EQ 'DEBIT'
                Y.ACCOUNT = R.TT<TT.TE.ACCOUNT.2>
                Y.CUS = R.TT<TT.TE.CUSTOMER.2>
                Y.TT.CCY = R.TT<TT.TE.CURRENCY.2>
                GOSUB READ.ACCOUNT
        END CASE
    END

    IF NOT(Y.CUS) AND R.REDO.RTE.CUST.CASHTXN<RTE.ACTUAL.VERSION> EQ 'TELLER,REDO.OVERPYMT.CASH' THEN
        Y.CUS = R.TT<TT.TE.LOCAL.REF><1,TT.L.COMMENTS.POS>
        Y.ACCOUNT = R.TT<TT.TE.NARRATIVE.1>
        GOSUB READ.ACCOUNT
    END

    IF NOT(Y.CUS) THEN
        Y.CUS=R.TT<TT.TE.LOCAL.REF><1,CIDENT.POS>
        Y.CREDIT.CARD.ACC = R.TT<TT.TE.LOCAL.REF><1,TT.L.TT.CR.ACCT.NO.POS>
        IF Y.CREDIT.CARD.ACC THEN
            Y.ACCOUNT = Y.CREDIT.CARD.ACC
            GOSUB READ.ACCOUNT
        END
    END

RETURN

*************
READ.ACCOUNT:
*************

    R.ACC = ''
    CALL F.READ(FN.ACCOUNT,Y.ACCOUNT,R.ACC,F.ACCOUNT,ERR.ACC)
    IF R.ACC THEN
        Y.ACC.CATEG = R.ACC<AC.CATEGORY>
    END

RETURN

FT.INTERMEDIARY:
***************
    Y.CEDULA.NO = R.FT<FT.LOCAL.REF,FT.L.NEW.ID.CARD.POS>
    IF Y.CEDULA.NO EQ '' THEN
        Y.CEDULA.NO = R.FT<FT.LOCAL.REF,FT.L.OLD.ID.CARD.POS>
    END
    Y.PASSPORT.NO = R.FT<FT.LOCAL.REF,FT.L.PASSPORT.POS>
    Y.RNC.NO = R.FT<FT.LOCAL.REF,FT.RNC.POS>


RETURN

TT.INTERMEDIARY:
****************
    Y.CEDULA.NO = R.TT<TT.TE.LOCAL.REF,TT.L.NEW.ID.CARD.POS>
    IF Y.CEDULA.NO EQ '' THEN
        Y.CEDULA.NO = R.TT<TT.TE.LOCAL.REF,TT.L.OLD.ID.CARD.POS>
    END
    Y.PASSPORT.NO = R.TT<TT.TE.LOCAL.REF,TT.L.PASSPORT.POS>
    Y.RNC.NO = R.TT<TT.TE.LOCAL.REF,TT.RNC.POS>


RETURN

****************
GET.TFS.DETAILS:
****************

    Y.CEDULA.NO = R.T24FS<TFS.LOCAL.REF,L.NEW.ID.CARD.POS>
    IF Y.CEDULA.NO EQ '' THEN
        Y.CEDULA.NO = R.T24FS<TFS.LOCAL.REF,L.OLD.ID.CARD.POS>
    END
    Y.PASSPORT.NO = R.T24FS<TFS.LOCAL.REF,L.PASSPORT.POS>
    Y.RNC.NO = R.T24FS<TFS.LOCAL.REF,TFS.RNC.POS>

    INTERM.1ST.NAME = R.T24FS<TFS.LOCAL.REF,L.1ST.NAME.POS>
    INTERM.2ND.NAME = R.T24FS<TFS.LOCAL.REF,L.2ND.NAME.POS>
    INTERM.SOCIAL.NAME = R.T24FS<TFS.LOCAL.REF,L.LAST.NAME.POS>

    INT.NATION = R.T24FS<TFS.LOCAL.REF,L.NATIONALITY.POS>
    SEX.VAL = R.T24FS<TFS.LOCAL.REF,L.SEX.POS>

    Y.TXN.PROVINCE = R.T24FS<TFS.LOCAL.REF,TFS.PROVINCE.POS>
    Y.TXN.CITY = R.T24FS<TFS.LOCAL.REF,TFS.L.CITY.POS>
    Y.TXN.DISTRICT = R.T24FS<TFS.LOCAL.REF,TFS.L.DISTRICT.POS>
    Y.TXN.STREET = R.T24FS<TFS.LOCAL.REF,TFS.L.STREET.POS>
    Y.TXN.HOUSE.NO = R.T24FS<TFS.LOCAL.REF,TFS.L.HOUSE.NO.POS>
    Y.TXN.BUILDING = R.T24FS<TFS.LOCAL.REF,TFS.L.BUILDING.POS>
    Y.TXN.APARTMENT = R.T24FS<TFS.LOCAL.REF,TFS.L.APARTMENT.POS>
    Y.TXN.HOME.NO = R.T24FS<TFS.LOCAL.REF,TFS.L.HOME.PH.NO.POS>
    Y.TXN.OFFICE.NO = R.T24FS<TFS.LOCAL.REF,TFS.L.OFFICE.PH.NO.POS>
    Y.TXN.CEL.NO = R.T24FS<TFS.LOCAL.REF,TFS.L.CELLULAR.NO.POS>

    VAL.DATE= R.T24FS<TFS.DATE.TIME>
*    CCY = R.T24FS<TFS.CURRENCY>

RETURN

*****************
GET.PRODUCT.TYPE:
*****************

    R.ACCOUNT = ''
    ACCOUNT.ERR = ''
    CALL F.READ(FN.ACCOUNT,Y.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
    IF R.ACCOUNT THEN
        Y.AC.CATEG = R.ACCOUNT<AC.CATEGORY>
    END

    R.RTE.CATEG.POS = ''
    CALL CACHE.READ(FN.REDO.RTE.CATEG.POS,"SYSTEM",R.RTE.CATEG.POS,CATEG.ERR)
    Y.RTE.POSITION = R.RTE.CATEG.POS<REDO.RTE.POS.RTE.POSITION>
    Y.CATEG.INIT   = R.RTE.CATEG.POS<REDO.RTE.POS.CATEG.INIT>
    Y.CATEG.END    = R.RTE.CATEG.POS<REDO.RTE.POS.CATEG.END>

    Y.RTE.POS.CNT = DCOUNT(Y.RTE.POSITION,@VM)
    FOR K = 1 TO Y.RTE.POS.CNT
        Y.CATEG.FROM = Y.CATEG.INIT<1,K>
        Y.CATEG.TO   = Y.CATEG.END<1,K>
        Y.CNT.CATEG = DCOUNT(Y.CATEG.FROM,SM)
        Y.CATEG = 1
        LOOP
        WHILE Y.CATEG LE Y.CNT.CATEG
            IF Y.AC.CATEG GE Y.CATEG.FROM<1,1,Y.CATEG> AND Y.AC.CATEG LE Y.CATEG.TO<1,1,Y.CATEG> THEN
                Y.PROD = R.RTE.CATEG.POS<REDO.RTE.POS.DESCRIPTION,K>
                Y.CATEG += Y.CNT.CATEG
                K += Y.RTE.POS.CNT
            END ELSE
                Y.PROD = 'Otras'
            END
            Y.CATEG += 1
        REPEAT
    NEXT K

RETURN


**********************
CHECK.TT.TRANSACTION:
***********************
    R.TT.TXN = ''
    CALL F.READ(FN.TELLER.TRANSACTION,Y.TT.TXN.ID,R.TT.TXN,F.TELLER.TRANSACTION,TT.TXN.ERR)
    IF R.TT.TXN THEN
        Y.TT.PAY.TYPE.ID = R.TT.TXN<TT.TR.LOCAL.REF,L.TT.TXN.POS>
        GOSUB TT.PAY.TYPE
    END ELSE
        Y.PAY.TYPE = ''
    END
RETURN

************
TT.PAY.TYPE:
************

    Y.PAY.TYPE.ID = Y.TT.PAY.TYPE.ID
    R.PAY.TYPE = ''
    CALL F.READ(FN.REDO.PAY.TYPE,Y.PAY.TYPE.ID,R.PAY.TYPE,F.REDO.PAY.TYPE,PAY.ERR)
    IF R.PAY.TYPE THEN
        Y.PAY.TYPE = R.PAY.TYPE<REDO.PAY.TYPE.DESCRIPTION>
    END ELSE
        Y.PAY.TYPE = ''
    END
RETURN

************
GET.CCY.AMT:
************

    CALL CACHE.READ(FN.CURRENCY,Y.TXN.CCY,R.CURRENCY,CURR.ERR)
    CCY.AMLBUY.RATE = R.CURRENCY<EB.CUR.LOCAL.REF,L.CU.AMLBUY.RT.POS>

    IF Y.TXN.CCY NE 'DOP' THEN
        Y.CCY.AMT = Y.TXN.CASH.AMOUNT/CCY.AMLBUY.RATE
        Y.CCY.RATE = CCY.AMLBUY.RATE
    END ELSE
        Y.CCY.AMT = ''
        Y.CCY.RATE = ''
    END

RETURN

**************
FORM.RTE.ARR:
**************

    Y.NO.DEREPORTE = ''
    Y.ID.SUCURSAL = Y.ID.COMPANY

    Y.CUST.ID = FIELD(RTE.CUST.ID,'.',1)

    Y.TIPO.PERSONA = TIPO.CL.POS.VAL

    Y.SEX = YGENT

* DOC TYPE / ID

    BEGIN CASE

        CASE Y.CEDULA NE ''
            Y.DOC.TYPE = 'Cedula'
            Y.DOC.ID = Y.CEDULA
        CASE Y.RNC NE ''
            Y.DOC.TYPE = 'RNC'
            Y.DOC.ID = Y.RNC
        CASE Y.PASSPORT NE ''
            Y.DOC.TYPE = 'Pasaporte'
            Y.DOC.ID = Y.PASSPORT
        CASE OTHERWISE
            Y.DOC.TYPE = ''
            Y.DOC.ID = ''
    END CASE

    Y.NAME.ALL = Y.SOCIAL.NAME

    Y.FIRST.FAM.NAME = Y.FIRST.NAME

    Y.SECOND.FAM.NAME = ''

    Y.NAT.ORIGIN = Y.NATION

    Y.NAT.ADQ = Y.PASS.NAT

    Y.ACT.ECONOMIC = CUST.INDUS

    GOSUB GET.PRODUCT.TYPE

    Y.PROD.TYPE = Y.PROD

    Y.RTE.ACCOUNT = Y.ACCOUNT

    Y.PROVINCE = CUST.TOWN.COUNTRY

    Y.MUNICIPAL = CUST.CITY

    Y.SECTOR = CUST.SEC

    Y.DIRECTION = CUST.ADDR

    Y.HOME = CUST.HOME

    Y.OFF = CUST.OFF

    Y.CELL = CUST.CELL

    Y.TXN.TYPE = Y.PAY.TYPE

    Y.TXN.CCY = Y.RTE.TXN.CCY

    GOSUB GET.CCY.AMT

    Y.TXN.CCY.AMT = Y.CCY.AMT

    Y.EXCHG.RATE = Y.CCY.RATE

    Y.LOC.AMT = Y.TXN.CASH.AMOUNT

    Y.INSTRMT.TYPE = Y.PROD

    Y.DATE = Y.RTE.TXN.DATE[10,17]

    Y.TIME = Y.RTE.TXN.DATE[1,8]

    IF Y.RTE.TXN.CNT GT 1 THEN
        Y.ACCUMATE.FLAG = 'SI'
        Y.ACCUMATE.TXN = Y.RTE.TXN.CNT
    END ELSE
        Y.ACCUMATE.FLAG = 'NO'
        Y.ACCUMATE.TXN = ''
    END

* Intermediary Details

    Y.INT.SEX = SEX.VAL

    BEGIN CASE
        CASE Y.CEDULA.NO NE ''
            Y.INT.DOC = 'CEDULA'
            Y.INT.DOC.NO = Y.CEDULA.NO
        CASE Y.RNC.NO NE ''
            Y.INT.DOC = 'RNC'
            Y.INT.DOC.NO = Y.RNC.NO
        CASE Y.PASSPORT.NO NE ''
            Y.INT.DOC = 'PASAPORTE'
            Y.INT.DOC.NO = Y.PASSPORT.NO
    END CASE

    IF INTERM.SOCIAL.NAME NE '' THEN
        Y.INT.NAMES = INTERM.SOCIAL.NAME
    END ELSE
        Y.INT.NAMES = INTERM.1ST.NAME
    END

    Y.INT.1ST.SURNAME = INTERM.2ND.NAME
    Y.INT.2ND.SURNAME = ''
    Y.INT.NATION = INT.NATION
    Y.INT.NAT.ADQ = ''
    Y.INT.ACT.ECONOMIC = ACT.INT

    Y.INT.PROVINCE=Y.TXN.PROVINCE
    Y.INT.CITY=Y.TXN.CITY
    Y.INT.DISTRICT=Y.TXN.DISTRICT
    Y.INT.STREET=Y.TXN.STREET
    Y.INT.HOUSE.NO=Y.TXN.HOUSE.NO
    Y.INT.BUILDING=Y.TXN.BUILDING
    Y.INT.APARTMENT=Y.TXN.APARTMENT
    Y.DIRECTION = Y.INT.STREET:' ':Y.INT.HOUSE.NO:' ':Y.INT.BUILDING:' ':Y.INT.APARTMENT
    Y.INT.HOME.NO=Y.TXN.HOME.NO
    Y.INT.OFFICE.NO=Y.TXN.OFFICE.NO
    Y.INT.CEL.NO=Y.TXN.CEL.NO

    Y.FORM.ARR = Y.NO.DEREPORTE:'|':Y.ID.SUCURSAL:'|':Y.TIPO.PERSONA:'|':Y.SEX:'|':Y.DOC.TYPE:'|':Y.DOC.ID:'|':Y.NAME.ALL:'|':Y.FIRST.FAM.NAME
    Y.FORM.ARR := '|':Y.SECOND.FAM.NAME:'|':Y.NAT.ORIGIN:'|':Y.NAT.ADQ:'|':Y.ACT.ECONOMIC:'|':Y.PROD.TYPE:'|':Y.RTE.ACCOUNT:'|':'':'|':'':'|':Y.PROVINCE:'|':Y.MUNICIPAL
    Y.FORM.ARR := '|':Y.SECTOR:'|':Y.DIRECTION:'|':Y.HOME:'|':Y.OFF:'|':Y.CELL:'|':Y.TXN.TYPE:'|':Y.TXN.CCY:'|':Y.TXN.CCY.AMT:'|':Y.EXCHG.RATE:'|':Y.LOC.AMT
    Y.FORM.ARR := '|':Y.INSTRMT.TYPE:'|':Y.DATE:'|':Y.TIME:'|':Y.ACCUMATE.FLAG:'|':Y.ACCUMATE.TXN:'|':Y.INT.SEX:'|':Y.INT.DOC:'|':Y.INT.DOC.NO:'|':Y.INT.NAMES
    Y.FORM.ARR := '|':Y.INT.1ST.SURNAME:'|':Y.INT.2ND.SURNAME:'|':Y.INT.NATION:'|':Y.INT.NAT.ADQ:'|':Y.INT.ACT.ECONOMIC:'|':Y.INT.PROVINCE:'|':Y.INT.CITY
    Y.FORM.ARR := '|':Y.INT.DISTRICT:'|':Y.DIRECTION:'|':Y.INT.HOME.NO:'|':Y.INT.OFFICE.NO:'|':Y.INT.CEL.NO
    CHANGE ',' TO '' IN Y.FORM.ARR
    RTE.REP.ID = R.REDO.RTE.CUST.CASHTXN<RTE.TRANS.DATE,I>[1,8]
    CHANGE ':' TO '' IN RTE.REP.ID
    RTE.REP.ID = REC.ID['.',2,1]:RTE.REP.ID:'.':R.REDO.RTE.CUST.CASHTXN<RTE.TXN.ID,I>

    Y.CUST.DATE = FIELD(RTE.CUST.ID,'.',2)
    IF ymend EQ 0 OR YLST.TODAY EQ Y.CUST.DATE THEN
        CALL F.WRITE(FN.REDO.RTE.IF.WORKFILE,RTE.REP.ID,Y.FORM.ARR)
    END ELSE
        RTE.REP.ID = 'MTH-':RTE.REP.ID
        CALL F.WRITE(FN.REDO.RTE.IF.WORKFILE,RTE.REP.ID,Y.FORM.ARR)
    END

RETURN
END
