* @ValidationCode : MjotMjA3MTcxMTc5MjpDcDEyNTI6MTY4Nzg0MTAzNDE2OTozMzNzdTotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 27 Jun 2023 10:13:54
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : 333su
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.V.AUT.REVERSE.CHG
***********************************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: Arulprakasam P
* PROGRAM NAME: REDO.V.AUT.REVERSE.CHG
* ODR NO      : ODR-2010-09-0148
*-----------------------------------------------------------------------------
*DESCRIPTION: This is AUTHORISATION routine for REDO.CLEARING.INWARD,APPROVE
*

*IN PARAMETER:  NA
*OUT PARAMETER: NA
*LINKED WITH: REDO.CLEARING.INWARD,APPROVE
*----------------------------------------------------------------------
* Modification History :
*---------------------------------------------------------------------------------------
*Modification History:
*DATE                 WHO                    REFERENCE                         DESCRIPTION
*26/06/2023      CONVERSION TOOL            AUTO R22 CODE CONVERSION             FM TO @FM
*26/06/2023      SURESH                     MANUAL R22 CODE CONVERSION       VARIABLE NAME MODIFIED
*----------------------------------------------------------------------------------------
*----------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_GTS.COMMON
    $INSERT I_F.ACCOUNT
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.USER
    $INSERT I_F.REDO.APAP.CLEARING.INWARD
*    $INSERT I_F.REDO.APAP.CLEAR.PARAM       ;*R22 MANUAL CODE CONVERSION

    IF V$FUNCTION EQ 'A' THEN
        GOSUB INIT
        GOSUB PROCESS
    END
RETURN

*****
INIT:
*****
    FN.REDO.APAP.CLEAR.PARAM = 'F.REDO.APAP.CLEAR.PARAM'
    F.REDO.APAP.CLEAR.PARAM = ''
    CALL OPF(FN.REDO.APAP.CLEAR.PARAM,F.REDO.APAP.CLEAR.PARAM)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.STMT.ENTRY = 'F.STMT.ENTRY'
    F.STMT.ENTRY  = ''
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)

    FN.CATEG.ENTRY = 'F.CATEG.ENTRY'
    F.CATEG.ENTRY  = ''
    CALL OPF(FN.CATEG.ENTRY,F.CATEG.ENTRY)


RETURN

********
PROCESS:
********
    GOSUB FIND.MULTI.LOC.REF

    CALL CACHE.READ(FN.REDO.APAP.CLEAR.PARAM,'SYSTEM',R.REDO.APAP.CLEAR.PARAM,REDO.APAP.CLEAR.PARAM.ERR)
    Y.WAIVE = R.NEW(CLEAR.CHQ.WAIVE.CHARGES)
    Y.CHARGE.AMT = R.NEW(CLEAR.CHQ.CHG.AMOUNT)
    Y.ACCOUNT.NO = R.NEW(CLEAR.CHQ.ACCOUNT.NO)
    Y.CHEQUE.AMT = R.NEW(CLEAR.CHQ.AMOUNT)

    CALL F.READ(FN.ACCOUNT,Y.ACCOUNT.NO,R.ACCOUNT,F.ACCOUNT,ACC.ERR)

    Y.CUSTOMER = R.ACCOUNT<AC.CUSTOMER>
    Y.ACCT.OFFICER = R.ACCOUNT<AC.ACCOUNT.OFFICER>
    Y.CATEGORY = R.ACCOUNT<AC.CATEGORY>
    Y.CURRENCY  = R.ACCOUNT<AC.CURRENCY>

*Raising Debit Entry for INW.RETURN internal acc ount by check amount

*    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.INW.RET.ACCT> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.DR.CODE'
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY> = -1 *  Y.CHEQUE.AMT
*    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.TAX.DR.CODE> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.DR.CODE'
    GOSUB GET.STMT.DETAILS

    FINAL.ENTRY.REC<-1> = LOWER(STMT.ENTRY.REC)
 
*Raising Credit Entry to INW.REFERRAL Internal account by cheque amount

**   STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.INW.REF.ACCT> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.CR.CODE'
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY> = Y.CHEQUE.AMT
**    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.TAX.CR.CODE> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.DR.CODE'
    GOSUB GET.STMT.DETAILS

    FINAL.ENTRY.REC<-1> = LOWER(STMT.ENTRY.REC)

    IF Y.WAIVE EQ 'YES' THEN

*Raising Debit Entry for Customer account by charge amount

        STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER> = Y.ACCOUNT.NO
        STMT.ENTRY.REC<AC.STE.AMOUNT.LCY> =  Y.CHARGE.AMT
**        STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.TAX.CR.CODE> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.CR.CODE'
        GOSUB GET.STMT.DETAILS

        FINAL.ENTRY.REC<-1> = LOWER(STMT.ENTRY.REC)

*Raising Credit PL category account by charge amount

        CATEG.ENTRY.REC = ''
        CATEG.ENTRY.REC<AC.CAT.AMOUNT.LCY>       = Y.CHARGE.AMT
*        CATEG.ENTRY.REC<AC.CAT.TRANSACTION.CODE> = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.TAX.CR.CODE>   ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.TAX.CR.CODE'
*        CATEG.ENTRY.REC<AC.CAT.PL.CATEGORY>      = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.CLEARING.COMM> ;*Because of commented 'I_F.T24.FUND.SERVICES' insert file, Comment this variable 'CLEAR.PARAM.CLEARING.COMM'
        GOSUB GET.CATEG.DETAILS

        FINAL.ENTRY.REC<-1> = LOWER(CATEG.ENTRY.REC)

    END

    Y.TYPE='SAO'
    CALL EB.ACCOUNTING.WRAPPER('CHQ',Y.TYPE,YENTRY.REC,'',EB.ACCT.ERR.MSG)
RETURN

*****************
GET.STMT.DETAILS:
*****************

    STMT.ENTRY.REC = ''
    STMT.ENTRY.REC<AC.STE.THEIR.REFERENCE>   = ID.NEW
    STMT.ENTRY.REC<AC.STE.CUSTOMER.ID>       = Y.CUSTOMER
    STMT.ENTRY.REC<AC.STE.ACCOUNT.OFFICER>   = Y.ACCT.OFFICER
    STMT.ENTRY.REC<AC.STE.PRODUCT.CATEGORY>  = Y.CATEGORY
    STMT.ENTRY.REC<AC.STE.VALUE.DATE>        = TODAY
    STMT.ENTRY.REC<AC.STE.CURRENCY>          = Y.CURRENCY
    STMT.ENTRY.REC<AC.STE.POSITION.TYPE>     = 'TR'
    STMT.ENTRY.REC<AC.STE.OUR.REFERENCE>     = ID.NEW
* STMT.ENTRY.REC<AC.STE.EXPOSURE.DATE>     =
    STMT.ENTRY.REC<AC.STE.CURRENCY.MARKET>   = '1'
    STMT.ENTRY.REC<AC.STE.DEPARTMENT.CODE>   = R.USER<EB.USE.DEPARTMENT.CODE>
    STMT.ENTRY.REC<AC.STE.TRANS.REFERENCE>   = ID.NEW
    STMT.ENTRY.REC<AC.STE.SYSTEM.ID>         = 'CHQ'
    STMT.ENTRY.REC<AC.STE.BOOKING.DATE>      = TODAY
    STMT.ENTRY.REC<AC.STE.COMPANY.CODE>      = ID.COMPANY
    STMT.ENTRY.REC<AC.STE.LOCAL.REF,L.EB.IMAGE.ID.SE.POS> = R.NEW(CLEAR.CHQ.IMAGE.REFERENCE)
RETURN

RETURN

******************
GET.CATEG.DETAILS:
******************

    CATEG.ENTRY.REC<AC.CAT.CUSTOMER.ID>      = Y.CUSTOMER
    CATEG.ENTRY.REC<AC.CAT.ACCOUNT.OFFICER>  = Y.ACCT.OFFICER
    CATEG.ENTRY.REC<AC.CAT.PRODUCT.CATEGORY> = Y.CATEGORY
    CATEG.ENTRY.REC<AC.CAT.VALUE.DATE>       = TODAY
    CATEG.ENTRY.REC<AC.CAT.CURRENCY>         = Y.CURRENCY
    CATEG.ENTRY.REC<AC.CAT.POSITION.TYPE>    = 'TR'
    CATEG.ENTRY.REC<AC.CAT.OUR.REFERENCE>    = ID.NEW
* CATEG.ENTRY.REC<AC.CAT.EXPOSURE.DATE>    =
    CATEG.ENTRY.REC<AC.CAT.CURRENCY.MARKET>  = '1'
    CATEG.ENTRY.REC<AC.CAT.DEPARTMENT.CODE>  = R.USER<EB.USE.DEPARTMENT.CODE>
    CATEG.ENTRY.REC<AC.CAT.TRANS.REFERENCE>  = ID.NEW
    CATEG.ENTRY.REC<AC.CAT.SYSTEM.ID>        = 'CHQ'
    CATEG.ENTRY.REC<AC.CAT.BOOKING.DATE>     = TODAY
    CATEG.ENTRY.REC<AC.CAT.COMPANY.CODE>     = ID.COMPANY
    CATEG.ENTRY.REC<AC.CAT.LOCAL.REF,L.EB.IMAGE.ID.CE.POS> = R.NEW(CLEAR.CHQ.IMAGE.REFERENCE)

RETURN

*******************
FIND.MULTI.LOC.REF:
*******************

    APPL.ARRY = 'STMT.ENTRY':@FM:'CATEG.ENTRY'
    FLD.ARRAY = 'L.EB.IMAGE.ID':@FM:'L.EB.IMAGE.ID'
    FLD.POS = ''

    CALL MULTI.GET.LOC.REF(APPL.ARRAY,FLD.ARRAY,FLD.POS)
    L.EB.IMAGE.ID.SE.POS = FLD.POS<1,1>
    L.EB.IMAGE.ID.CE.POS = FLD.POS<2,1>

RETURN
END
