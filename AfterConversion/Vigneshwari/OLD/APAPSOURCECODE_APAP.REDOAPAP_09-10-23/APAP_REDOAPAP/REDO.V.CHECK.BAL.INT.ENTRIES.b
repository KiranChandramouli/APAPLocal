* @ValidationCode : MjoxNDU0OTEzNzMyOkNwMTI1MjoxNjk2ODI5MTU2MTI0OnZpZ25lc2h3YXJpOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 09 Oct 2023 10:55:56
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : vigneshwari
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOAPAP
*-----------------------------------------------------------------------------
* <Rating>93</Rating>
*------------------------------------------------------------------------------
    SUBROUTINE REDO.V.CHECK.BAL.INT.ENTRIES(ACCT.ID,BALANCE,BAL.CR.AMT,BAL.DR.AMT,Y.ACC.INT,INT.CR.AMT,INT.DR.AMT,Y.BAL.DET,Y.INT.DET)
*---------------------------------------------------------------------------------
*This is call routine to check the balance and interest reclassification for entries
*----------------------------------------------------------------------------------
* Company Name  : ASOCIACION POPUL
* Developed By  : Edwin Charles
* Program Name  : REDO.V.CHECK.BAL.INT.ENTRIES
*
* Routine Name   :REDO.V.CHECK.BAL.INT.ENTRIES
* LINKED WITH:
*----------------------------------------------------------------------
*Input param = none
*output param =none
*-----------------------------------------------------------------------
* MODIFICATION DETAILS:
*  DATE             NAME                    REFERENCE                        DESCRIPTION
* 31 JAN 2023  Edwin Charles D             ACCOUNTING-CR                     TSR479892
* 30 MAY 2023    Jayasurya                 ACCOUNTING-CR                     TSR-571606
* 20 AUG 2023    EDWIN CDB                 Accounting CR                     TSR-637100
* 06/10/2023     VIGNESHWARI            MANUAL R22 CODE CONVERSION           VM TO @VM,SM TO @SM,FM TO @FM
*----------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT    
    $INSERT I_F.REDO.T.STATSEQ.BY.ACCT
    $INSERT I_F.REDO.PREVALANCE.STATUS
    $INSERT I_REDO.CRF.NWGL.COMMON
    $INSERT I_F.RE.STAT.REP.LINE
    $INSERT I_F.RE.STAT.LINE.CONT
    $INSERT I_REDO.PREVAL.STATUS.COMMON
    $INSERT I_F.DATES         ;*TSR637100
    $INSERT I_F.EB.CONTRACT.BALANCES
    $INSERT I_F.RE.CONSOL.ASSET.LINE
    $INSERT I_F.APAP.H.GARNISHMENT.REVERSE        ;*TSR637100
    IF ACCT.ID EQ '1000763447' THEN DEBUG
    GOSUB INIT
    GOSUB OPENFILE
    GOSUB PROCESS
    RETURN
*----------------------------
INIT:

    RETURN
*------------------------------
OPENFILE:

    FN.DATES = 'F.DATES'      ;*TSR637100 Start
    F.DATES = ''
    CALL OPF(FN.DATES, F.DATES)         ;*TSR637100 End

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.T.STATSEQ.BY.ACCT = 'F.REDO.T.STATSEQ.BY.ACCT'
    F.REDO.T.STATSEQ.BY.ACCT = ''
    CALL OPF(FN.REDO.T.STATSEQ.BY.ACCT,F.REDO.T.STATSEQ.BY.ACCT)

    FN.REDO.PREVALANCE.STATUS = 'F.REDO.PREVALANCE.STATUS'
    F.REDO.PREVALANCE.STATUS = ''
    CALL OPF(FN.REDO.PREVALANCE.STATUS, F.REDO.PREVALANCE.STATUS)

    FN.RE.STAT.LINE.CONT = 'F.RE.STAT.LINE.CONT'
    F.RE.STAT.LINE.CONT = ''
    CALL OPF(FN.RE.STAT.LINE.CONT, F.RE.STAT.LINE.CONT)

    FN.EB.CONTRACT.BALANCES = 'F.EB.CONTRACT.BALANCES'
    F.EB.CONTRACT.BALANCES = ''
    CALL OPF(FN.EB.CONTRACT.BALANCES, F.EB.CONTRACT.BALANCES)

    FN.RE.STAT.REP.LINE = 'F.RE.STAT.REP.LINE'
    F.RE.STAT.REP.LINE = ''
    CALL OPF(FN.RE.STAT.REP.LINE, F.RE.STAT.REP.LINE)

    FN.RE.CONSOL.ASSET.LINE = 'F.RE.CONSOL.ASSET.LINE'
    F.RE.CONSOL.ASSET.LINE = ''
    CALL OPF(FN.RE.CONSOL.ASSET.LINE, F.RE.CONSOL.ASSET.LINE)

    FN.APAP.H.GARNISHMENT.REVERSE = 'F.APAP.H.GARNISHMENT.REVERSE'    ;*TSR637100 start
    F.APAP.H.GARNISHMENT.REVERSE = ''
    CALL OPF(FN.APAP.H.GARNISHMENT.REVERSE, F.APAP.H.GARNISHMENT.REVERSE)       ;*TSR637100  end

    LF.APP = 'RE.STAT.REP.LINE':@FM:'ACCOUNT'
    LF.FLD = 'L.BALEM':@VM:'L.BALPG':@VM:'L.BALFA':@VM:'L.ACCEM':@VM:'L.ACCPG':@VM:'L.ACCFA':@FM:'L.AC.AV.BAL'
    LF.POS = ''
    CALL MULTI.GET.LOC.REF(LF.APP,LF.FLD,LF.POS)
    L.BALEM.POS = LF.POS<1,1>
    L.BALPG.POS = LF.POS<1,2>
    L.BALFA.POS = LF.POS<1,3>
    L.ACCEM.POS = LF.POS<1,4>
    L.ACCPG.POS = LF.POS<1,5>
    L.ACCFA.POS = LF.POS<1,6>
    L.AVL.BAL.POS = LF.POS<2,1>         ;* For reversal
    R.DATE = ''     ;*TSR637100 start
    CALL F.READ(FN.DATES,'DO0010001',R.DATE,F.DATES,DAT.ERR)
    IF RUNNING.UNDER.BATCH THEN
        CURR.DATE = R.DATE<EB.DAT.LAST.WORKING.DAY>
    END ELSE
        CURR.DATE = TODAY
    END   ;*TSR637100 end


    RETURN

*----------------------------
PROCESS:
*********
*-------Modification ends--------------------------------
    Y.BAL.RECLASSIFY = '' ; Y.INT.RECLASSIFY = '' ; BAL.CR.AMT = '' ; BAL.DR.AMT = ''; INT.CR.AMT = '' ; INT.DR.AMT = ''
    CALL F.READ(FN.ACCOUNT,ACCT.ID,REC.ACCOUNT,F.ACCOUNT,ERR.ACC)
    BALANCE = REC.ACCOUNT<AC.WORKING.BALANCE>
    Y.AVL.BAL = REC.ACCOUNT<AC.LOCAL.REF,L.AVL.BAL.POS>     ;*For reversal amount
    LOCK.TOT = DCOUNT(REC.ACCOUNT<AC.LOCKED.AMOUNT>,@VM)
    Y.LOCKED.AMT = REC.ACCOUNT<AC.LOCKED.AMOUNT,LOCK.TOT>
    Y.ACC.INT = REC.ACCOUNT<AC.ACCR.CR.AMOUNT,1>
    Y.AC.CATEG = REC.ACCOUNT<AC.CATEGORY>
    Y.AZ.ACCOUNT = REC.ACCOUNT<AC.ALL.IN.ONE.PRODUCT>
    Y.STATUS = ''

    CALL REDO.CONV.MNEM.TO.STATUS(ACCT.ID,Y.STATUS)

    BEGIN CASE
    CASE Y.AZ.ACCOUNT OR Y.AC.CATEG EQ '6015'
        Y.CATEG = 'DEP'

    CASE Y.AC.CATEG GE '6000' AND Y.AC.CATEG LE '6999'
        Y.CATEG = 'SAV'

    CASE Y.AC.CATEG GE '1000' AND Y.AC.CATEG LE '1999'
        Y.CATEG = 'ALL'

    END CASE


    FLAG.RECLASSIFY = ''
    GOSUB GET.PREVALANCE.STATUS
    GOSUB FM.COUNTER.CHECK
    GOSUB GET.ACCOUNTING.ACCOUNT
    Y.REV.AMOUNT = '' ; Y.REV.FLAG = '' ;*TSR637100
    GOSUB CHECK.REVERSE.AMOUNT          ;*TSR637100

    IF Y.BAL.RECLASSIFY OR Y.REV.AMOUNT THEN
* Get balances and splitted balances for entries
        IF Y.BAL.RECLASSIFY[1,3] EQ 'LCK' OR Y.REV.AMOUNT THEN
            FLAG.RECLASSIFY = '1'
            BEGIN CASE

            CASE Y.LOCKED.AMT AND NOT(Y.REV.AMOUNT)
                BAL.CR.AMT = BALANCE - Y.LOCKED.AMT
                BAL.DR.AMT = Y.LOCKED.AMT

                IF Y.INT.RECLASSIFY[1,3] EQ 'PER' AND BALANCE THEN
                    Y.PERC = Y.LOCKED.AMT / BALANCE
                    INT.DR.AMT = Y.ACC.INT * Y.PERC
                    INT.CR.AMT = Y.ACC.INT - INT.DR.AMT
                    INT.CR.AMT = FMT(INT.CR.AMT,"R2#10")
                    INT.DR.AMT = FMT(INT.DR.AMT,"R2#10")
                END

            CASE Y.REV.AMOUNT

                Y.REV.FLAG = '1'
                BAL.CR.AMT = Y.AVL.BAL  ;* for reversal amount with available bal
                BAL.DR.AMT = Y.REV.AMOUNT
                IF Y.ACC.INT THEN
                    Y.PERC = Y.REV.AMOUNT / BALANCE
                    INT.DR.AMT = Y.ACC.INT * Y.PERC
                    INT.CR.AMT = INT.DR.AMT
                    INT.CR.AMT = FMT(INT.CR.AMT,"R2#10")
                    INT.DR.AMT = FMT(INT.DR.AMT,"R2#10")
                END
            CASE 1
            END CASE
        END
    END ELSE
        IF ACCT.STATUS MATCHES 'AC':@VM:'IL':@VM:'IM':@VM:'LE':@VM:'ME':@VM:'FA':@VM:'PG':@VM:'EM' THEN
            BEGIN CASE
*            CASE Y.REV.AMOUNT
*                BAL.DR.AMT = Y.REV.AMOUNT
*                BAL.CR.AMT = Y.REV.AMOUNT
*                Y.PERC = Y.REV.AMOUNT / BALANCE
*                INT.DR.AMT = Y.ACC.INT * Y.PERC
*                INT.CR.AMT = INT.DR.AMT
*                INT.DR.AMT = @FMT(INT.DR.AMT,"R2#10")
*                INT.CR.AMT = @FMT(INT.CR.AMT,"R2#10")
*                Y.REV.FLAG = '1'
            CASE BALANCE GT '0'
                BAL.CR.AMT = BALANCE
                INT.CR.AMT = Y.ACC.INT
            CASE 1
                BAL.DR.AMT = BALANCE
                INT.DR.AMT = Y.ACC.INT
            END CASE
        END
    END
* Get accounting account for entries

    Y.BAL.DET = '' ; Y.INT.DET = ''
    IF BAL.CR.AMT OR INT.CR.AMT OR BAL.DR.AMT OR INT.DR.AMT THEN
        IF FLAG.RECLASSIFY OR Y.REV.AMOUNT THEN   ;*TSR637100  start
            BEGIN CASE        ;* for locating correct local fields

            CASE Y.BAL.RECLASSIFY[5,2] EQ 'EM' OR Y.REV.AMOUNT
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.INT

            CASE Y.BAL.RECLASSIFY[5,2] EQ 'FA'
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALFA.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCFA.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,1,1>:'*':RE.STAT.REP.ID.INT

            CASE Y.BAL.RECLASSIFY[5,2] EQ 'PG'
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALPG.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCPG.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.INT

            CASE Y.REV.AMOUNT
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.INT

            END CASE

        END ELSE
            BEGIN CASE
            CASE ACCT.STATUS MATCHES 'AC':@VM:'IL':@VM:'IM':@VM:'LE':@VM:'ME':@VM:'EM'
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCEM.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.INT

            CASE ACCT.STATUS EQ 'FA'
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALFA.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCFA.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,1,1>:'*':RE.STAT.REP.ID.INT

            CASE ACCT.STATUS EQ 'PG'
                Y.BAL.DET = R.STAT.REP.LINE.CAP<RE.SRL.LOCAL.REF,L.BALPG.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.BAL:'*':Y.REV.FLAG
                Y.INT.DET = R.STAT.REP.LINE.INT<RE.SRL.LOCAL.REF,L.ACCPG.POS>:'*':Y.NAME:'*':R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>:'*':Y.SIB.ACC.NO:'*':RE.STAT.REP.ID.INT
            END CASE          ;*TSR637100 end
        END

    END


    RETURN
*--------------------------------------------------------------------------------------------
FM.COUNTER.CHECK:
*--------------------------------------------------------------------------------------------
* 20170327 /S TUS
    Y.FINAL.STATUS = '' ; AC.FLAG = '' ; CNT.AC = 1 ; Y.AC.TYPE = ''

    TOT.AC.CNT = DCOUNT(ACCT.TYPE.LIST,@FM)
    LOOP
    WHILE CNT.AC LE TOT.AC.CNT
        Y.AC.TYPE = ACCT.TYPE.LIST<CNT.AC>
        BEGIN CASE
        CASE Y.AC.TYPE EQ Y.CATEG
            GOSUB STATUS.CHECK
        CASE Y.AC.TYPE EQ 'ALL'
            GOSUB STATUS.CHECK
        END CASE

        CNT.AC= CNT.AC+1
    REPEAT

STATUS.CHECK:
*************
    IF Y.STATUS EQ PARAM.STATUS<CNT.AC> THEN
        Y.FINAL.STATUS = PREVALANCE.STATUS<CNT.AC>
        Y.BAL.RECLASSIFY = Y.BAL.RECLASSIFY.VAL<CNT.AC>
        Y.INT.RECLASSIFY = Y.INT.RECLASSIFY.VAL<CNT.AC>
        CNT.AC = TOT.AC.CNT
    END
    RETURN


GET.ACCOUNTING.ACCOUNT:
***********************
    R.EB.CONTRACT.BALANCES = '' ; EB.CONT.ERROR = '' ; ACCT.STATUS = ''
    BAL.CR.AMT = ''; BAL.DR.AMT = '' ; INT.CR.AMT = '' ; INT.DR.AMT = ''
    CALL F.READ(FN.EB.CONTRACT.BALANCES,ACCT.ID,R.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES,EB.CONT.ERROR)

    IF R.EB.CONTRACT.BALANCES THEN
        CONSOL.KEY.TEMP = R.EB.CONTRACT.BALANCES<ECB.CONSOL.KEY>
        ACCT.STATUS = FIELD(CONSOL.KEY.TEMP,".",11)
        Y.TERM = FIELD(CONSOL.KEY.TEMP,".",8)     ;* for deposit account
        Y.SAP.TXN.COMP = FIELD(CONSOL.KEY.TEMP,".",17)
        Y.RE.STAT.LINE.BAL.CUR = FIELD(CONSOL.KEY.TEMP,".",4)
        RE.STAT.REP.ID = ''
        IF Y.CATEG EQ 'DEP' THEN        ;* for deposit accounts
            GOSUB GET.RE.STAT.REP.ID.DEP
        END ELSE
            SEL.CMD  = "SELECT ":FN.RE.STAT.LINE.CONT:" WITH @ID LIKE 'NWGL...' AND ASST.CONSOL.KEY EQ ":CONSOL.KEY.TEMP:" AND ASSET.TYPE EQ 'CREDIT'"
            CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
            RE.STAT.REP.ID.BAL = SEL.LIST<1>
            RE.STAT.REP.ID.BAL = RE.STAT.REP.ID.BAL[1,9]
*        SEL.CMD  = "SELECT ":FN.RE.STAT.LINE.CONT:" WITH @ID LIKE 'NWGL...' AND ASST.CONSOL.KEY EQ ":CONSOL.KEY.TEMP:" AND ASSET.TYPE EQ '50000'"
*        CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
*        RE.STAT.REP.ID.INT = SEL.LIST<1>
            GOSUB GET.RE.STAT.REP.ID.INT
*        RE.STAT.REP.ID.INT = RE.STAT.REP.ID.INT[1,9]
        END
    END

    Y.NAME = '' ; R.STAT.REP.LINE.INT = ''
    CALL F.READ(FN.RE.STAT.REP.LINE,RE.STAT.REP.ID.INT,R.STAT.REP.LINE.INT,F.RE.STAT.REP.LINE,STAT.REP.LINE.ERR)
    Y.SAP.ACC.NO = R.STAT.REP.LINE.INT<RE.SRL.DESC,3,1>
    Y.SIB.ACC.NO = ''         ;* Accounting CR change this account number is removed in SAP Report
    Y.NAME = R.STAT.REP.LINE.INT<RE.SRL.DESC,2,1>

    Y.NAME = '' ; R.STAT.REP.LINE.CAP = ''
    CALL F.READ(FN.RE.STAT.REP.LINE,RE.STAT.REP.ID.BAL,R.STAT.REP.LINE.CAP,F.RE.STAT.REP.LINE,STAT.REP.LINE.ERR)
    Y.SAP.ACC.NO = R.STAT.REP.LINE.CAP<RE.SRL.DESC,3,1>
    Y.SIB.ACC.NO = ''         ;* Accounting CR change this account number is removed in SAP Report
    Y.NAME = R.STAT.REP.LINE.CAP<RE.SRL.DESC,2,1>

    RETURN

GET.RE.STAT.REP.ID.INT:
***********************

    CALL F.READ(FN.RE.CONSOL.ASSET.LINE,Y.AC.CATEG,R.RE.CONSOL.ASSET.LINE,F.RE.CONSOL.ASSET.LINE,ASSET.LINE.ERR)
    Y.VARIABLE.7.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.VARIABLE.7>
    Y.TYPE.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.TYPE>
    Y.REPORT.NAME.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.REPORT.NAME>
    Y.REPORT.LINE.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.REPORT.LINE>
    Y.VARIABLE.7.LIST = CHANGE(Y.VARIABLE.7.LIST,@VM,@FM)
    Y.VARIABLE.7.LIST = CHANGE(Y.VARIABLE.7.LIST,@SM,@FM)
    Y.TYPE.LIST = CHANGE(Y.TYPE.LIST,@VM,@FM)
    Y.TYPE.LIST = CHANGE(Y.TYPE.LIST,@SM,@FM)
    Y.REPORT.NAME.LIST = CHANGE(Y.REPORT.NAME.LIST,@VM,@FM)
    Y.REPORT.NAME.LIST = CHANGE(Y.REPORT.NAME.LIST,@SM,@FM)
    Y.REPORT.LINE.LIST = CHANGE(Y.REPORT.LINE.LIST,@VM,@FM)
    Y.REPORT.LINE.LIST = CHANGE(Y.REPORT.LINE.LIST,@SM,@FM)

    TOT.LINES = DCOUNT(Y.VARIABLE.7.LIST,@FM)
    CNT = 1
    LOOP
    WHILE CNT LE TOT.LINES
        IF Y.VARIABLE.7.LIST<CNT> EQ ACCT.STATUS AND Y.TYPE.LIST<CNT> EQ '50000' AND Y.REPORT.NAME.LIST<CNT> EQ 'NWGL' THEN
            RE.STAT.REP.ID.INT = 'NWGL.':Y.REPORT.LINE.LIST<CNT>
            CNT = TOT.LINES
        END
        CNT = CNT + 1
    REPEAT

    RETURN

GET.RE.STAT.REP.ID.DEP:
***************************
**for deposit account**
    CALL F.READ(FN.RE.CONSOL.ASSET.LINE,Y.AC.CATEG,R.RE.CONSOL.ASSET.LINE,F.RE.CONSOL.ASSET.LINE,ASSET.LINE.ERR)
    Y.VARIABLE.7.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.VARIABLE.7>
    Y.VARIABLE.4.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.VARIABLE.4>
    Y.TYPE.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.TYPE>
    Y.REPORT.NAME.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.REPORT.NAME>
    Y.REPORT.LINE.LIST = R.RE.CONSOL.ASSET.LINE<RE.CAL.REPORT.LINE>
    Y.VARIABLE.7.LIST = CHANGE(Y.VARIABLE.7.LIST,@VM,@FM)
    Y.VARIABLE.7.LIST = CHANGE(Y.VARIABLE.7.LIST,@SM,@FM)
    Y.VARIABLE.4.LIST = CHANGE(Y.VARIABLE.4.LIST,@VM,@FM)
    Y.VARIABLE.4.LIST = CHANGE(Y.VARIABLE.4.LIST,@SM,@FM)
    Y.TYPE.LIST = CHANGE(Y.TYPE.LIST,@VM,@FM)
    Y.TYPE.LIST = CHANGE(Y.TYPE.LIST,@SM,@FM)
    Y.REPORT.NAME.LIST = CHANGE(Y.REPORT.NAME.LIST,@VM,@FM)
    Y.REPORT.NAME.LIST = CHANGE(Y.REPORT.NAME.LIST,@SM,@FM)
    Y.REPORT.LINE.LIST = CHANGE(Y.REPORT.LINE.LIST,@VM,@FM)
    Y.REPORT.LINE.LIST = CHANGE(Y.REPORT.LINE.LIST,@SM,@FM)
    RE.STAT.REP.ID.INT = '' ; RE.STAT.REP.ID.BAL = ''
    TOT.LINES = DCOUNT(Y.VARIABLE.7.LIST,@FM)
    CNT = 1
    LOOP
    WHILE CNT LE TOT.LINES    ;* for deposit accounts
        IF Y.VARIABLE.7.LIST<CNT> EQ ACCT.STATUS AND Y.TYPE.LIST<CNT> EQ '50000' AND Y.REPORT.NAME.LIST<CNT> EQ 'NWGL' AND Y.VARIABLE.4.LIST<CNT> EQ Y.TERM THEN
            RE.STAT.REP.ID.INT = 'NWGL.':Y.REPORT.LINE.LIST<CNT>
        END
        IF Y.VARIABLE.7.LIST<CNT> EQ ACCT.STATUS AND Y.TYPE.LIST<CNT> EQ 'CREDIT' AND Y.REPORT.NAME.LIST<CNT> EQ 'NWGL' AND Y.VARIABLE.4.LIST<CNT> EQ Y.TERM THEN
            RE.STAT.REP.ID.BAL = 'NWGL.':Y.REPORT.LINE.LIST<CNT>
        END
        IF RE.STAT.REP.ID.INT AND  RE.STAT.REP.ID.BAL THEN
            CNT = TOT.LINES
        END
        CNT = CNT + 1
    REPEAT

    RETURN

GET.PREVALANCE.STATUS:
**********************
    PARAM.STATUS = ''; PREVALANCE.STATUS = ''; STAT.FM.CNTR = 0 ; ACCT.TYPE.LIST = ''
    FN.REDO.PREVALANCE.STATUS = 'F.REDO.PREVALANCE.STATUS'
    F.REDO.PREVALANCE.STATUS = ''
    CALL OPF(FN.REDO.PREVALANCE.STATUS,F.REDO.PREVALANCE.STATUS)

    CALL CACHE.READ(FN.REDO.PREVALANCE.STATUS,'SYSTEM',R.REDO.PREVALANCE.STATUS,F.ERR)

    PARAM.STATUS.VAL = R.REDO.PREVALANCE.STATUS<REDO.PRE.STATUS>
    PREVALANCE.STATUS.VAL = CHANGE(R.REDO.PREVALANCE.STATUS<REDO.PRE.PREVALANT.STATUS>,@VM,@FM)
    ACCT.TYPE.VAL = CHANGE(R.REDO.PREVALANCE.STATUS<REDO.PRE.ACCT.TYPE>,@VM,@FM)
    Y.BAL.RECLASSIFY.VAL = CHANGE(R.REDO.PREVALANCE.STATUS<REDO.PRE.BAL.RECLASS>,@VM,@FM)
    Y.INT.RECLASSIFY.VAL = CHANGE(R.REDO.PREVALANCE.STATUS<REDO.PRE.INT.RECLASS>,@VM,@FM)
    Y.BAL.RECLASSIFY.LIST = '' ; Y.INT.RECLASSIFY.LIST = ''
    STAT.FM.CNTR = DCOUNT(PARAM.STATUS.VAL,@VM)
    LOOP.FM.CNTR = 1

    LOOP
    WHILE LOOP.FM.CNTR LE STAT.FM.CNTR
        Y.FM.STATUS = PARAM.STATUS.VAL<1,LOOP.FM.CNTR>
        Y.FM.STATUS = CHANGE(Y.FM.STATUS,@FM,':')
        Y.FM.STATUS = CHANGE(Y.FM.STATUS,@SM,':')
        PARAM.STATUS<-1> = Y.FM.STATUS
        PREVALANCE.STATUS<-1> = PREVALANCE.STATUS.VAL<LOOP.FM.CNTR>
        ACCT.TYPE.LIST<-1> = ACCT.TYPE.VAL<LOOP.FM.CNTR>
        LOOP.FM.CNTR + = 1
    REPEAT
    RETURN

CHECK.REVERSE.AMOUNT:
**********************
    Y.ACCT.DATE = ACCT.ID:"-":CURR.DATE
    R.APAP.H.GARNISHMENT.REVERSE = ''
    CALL F.READ(FN.APAP.H.GARNISHMENT.REVERSE,Y.ACCT.DATE,R.APAP.H.GARNISHMENT.REVERSE,F.APAP.H.GARNISHMENT.REVERSE,REV.ERR)
    IF R.APAP.H.GARNISHMENT.REVERSE THEN
        Y.GARNISH.REV.ID = R.APAP.H.GARNISHMENT.REVERSE<AHGR.GARNISHMENT.ID>
        Y.REV.AMOUNT = TRIM(R.APAP.H.GARNISHMENT.REVERSE<AHGR.LOCK.AMT>,' ','B')          ;* Trimming extra spaces
    END

    RETURN
END
