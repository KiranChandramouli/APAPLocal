$PACKAGE EB.Repgen
  SUBROUTINE RGS.LD1000
REM "RGS.LD1000",230614-4
*************************************************************************
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_RC.COMMON
$INSERT I_SCREEN.VARIABLES
$INSERT I_F.COMPANY
$INSERT I_F.USER
$INSERT I_F.STANDARD.SELECTION
$INSERT I_F.DATES
  SAVE.ID.COMPANY = ID.COMPANY
*************************************************************************
  LD.GET.OVERDUE.DAYS = "LD.GET.OVERDUE.DAYS"
  LD.EXTRCT.VAL = "LD.EXTRCT.VAL"
*************************************************************************
  YT.SMS.COMP = ID.COMPANY
  YT.SMS.FILE = "LMM.ACCOUNT.BALANCES"
  YT.SMS.FILE<-1> = "LD.LOANS.AND.DEPOSITS"
  YT.SMS.FILE<-1> = "CUSTOMER"
  YT.SMS.FILE<-1> = "LMM.INSTALL.CONDS"
  YCOUNT = COUNT(YT.SMS.FILE,@FM)+1
  LOOP
    YID.COMP = YT.SMS.COMP<1>; DEL YT.SMS.COMP<1>
    FOR YAF = 1 TO YCOUNT
      YSMS.FILE = YT.SMS.FILE<YAF>
      YPW.OK = 0; Y = 1; X = 1
      LOOP WHILE X DO
        LOCATE YSMS.FILE IN R.USER<EB.USE.APPLICATION,Y> SETTING X ELSE X = 0
        IF X THEN
          GOSUB 9300000
          IF X THEN
            IF R.USER<EB.USE.FUNCTION,X> = "N" THEN
              IF R.USER<EB.USE.VERSION,X> THEN
                Y += 1; X = 1
              END ELSE
                X = 0; YPW.OK = "NO"
              END
            END ELSE
              Y = X+1; YPW.OK = 1; X = 0
            END
          END ELSE
            Y += 1; X = 1
          END
        END
* update pointers to definitions in version record
      REPEAT
      IF NOT(YPW.OK) THEN
* when no password for selected pgm ask for a global password
        LOCATE "ALL.PG" IN R.USER<EB.USE.APPLICATION,1> SETTING X ELSE X = 0
        GOSUB 9300000
* ask for a password for all programs
        IF NOT(X) THEN
          YPGM.TYPE = ""; CALL PGM.TABLE (YSMS.FILE, YPGM.TYPE)  
          Y = "ALL.PG.":YPGM.TYPE[1,1]
          LOCATE Y IN R.USER<EB.USE.APPLICATION,1> SETTING X ELSE X = 0
          GOSUB 9300000
* ask for a password for the type of the program
        END
        YPW.OK = 1
      END
      IF NOT(YPW.OK) OR YPW.OK = "NO" THEN
      MSG = "NO PASSWORD FOR FILE=":YSMS.FILE 
      MSG<2> = "SECURITY" 
        CALL PRO("NO PASSWORD FOR FILE=":YSMS.FILE)  
        TEXT = "SECURITY VIOLATION"
        CALL REM  ; RETURN  ;* end of pgm
      END
    NEXT YAF
  WHILE YT.SMS.COMP REPEAT
*************************************************************************
  YBLOCKNO = 0; YKEYNO = 0; YWRITNO = 0
  YT.FORFIL = ""; YKEYFD = ""
  YFD.LEN = ""; YPART.S = ""; YPART.L = ""
  DIM YR.REC(25)
  YFILE = "F":R.COMPANY(EB.COM.MNEMONIC):".RGS.LD1000"
  YOLDFILE = 1
  OPEN "", YFILE TO F.FILE ELSE YOLDFILE = 0
  IF NOT(PHNO) THEN PRINT @(0,10):
  IF YOLDFILE THEN
     CLEARFILE F.FILE
     PRINT "FILE ":YFILE:"  CLEARED"
  END ELSE
    ERROR.MESSAGE = ""
    Y.OUT.FILE = FIELD(YFILE,".",2,99)
    SCHEMA.NAME = ""
    CALL EB.DETERMINE.SCHEMA(Y.OUT.FILE, ID.COMPANY, SCHEMA.NAME)
    IF SCHEMA.NAME THEN
        Y.OUT.FILE<7> = SCHEMA.NAME
    END
    CALL EBS.CREATE.FILE(Y.OUT.FILE,"",ERROR.MESSAGE)
  END
  OPEN "", YFILE TO F.FILE ELSE
    TEXT = "CANNOT OPEN ":YFILE
    CALL FATAL.ERROR ("RGS.LD1000")
  END
*
  YCOM = ID.COMPANY
*
  YT.SMS = ""
  YT.SMS.FILE = "LMM.ACCOUNT.BALANCES"
  YT.SMS.FILE<-1> = "LD.LOANS.AND.DEPOSITS"
  YT.SMS.FILE<-1> = "CUSTOMER"
  YT.SMS.FILE<-1> = "LMM.INSTALL.CONDS"
  YCOUNT = COUNT(R.USER<EB.USE.APPLICATION>,@VM)+1
  FOR YAV = 1 TO YCOUNT
    IF R.USER<EB.USE.DATA.COMPARISON,YAV> THEN
      YRESTR = R.USER<EB.USE.COMPANY.RESTR,YAV>
      IF YRESTR THEN
         IF YRESTR = YCOM THEN YRESTR = ""
      END
      IF NOT(YRESTR) THEN
        YAPPLI = R.USER<EB.USE.APPLICATION,YAV>
        LOCATE YAPPLI IN YT.SMS.FILE<1> SETTING X ELSE X = 0
        IF X THEN
          IF (INDEX(R.USER<EB.USE.FUNCTION,YAV>,"P",1)) OR (INDEX(R.USER<EB.USE.FUNCTION,YAV>,"S",1)) THEN
          LOCATE YAPPLI IN YT.SMS<1,1> SETTING X ELSE
            YT.SMS<1,-1> = YAPPLI
          END
          YT.SMS<2,X,-1> = YAV
          END
        END
      END
    END
  NEXT YAV
*
  YFILE = "F.LD.LOANS.AND.DEPOSITS"; YF.LD.LOANS.AND.DEPOSITS = ""
  CALL OPF (YFILE, YF.LD.LOANS.AND.DEPOSITS)
  YFILE = "F.CUSTOMER"; YF.CUSTOMER = ""
  CALL OPF (YFILE, YF.CUSTOMER)
  YFILE = "F.LMM.INSTALL.CONDS"; YF.LMM.INSTALL.CONDS = ""
  CALL OPF (YFILE, YF.LMM.INSTALL.CONDS)
*************************************************************************
  YFILE = "LMM.ACCOUNT.BALANCES"
  FULL.FNAME = "F.LMM.ACCOUNT.BALANCES"; YF.LMM.ACCOUNT.BALANCES = ""
  LOCATE YFILE IN YT.SMS<1,1> SETTING X ELSE
    X = 0; T.PWD = ""
  END
  IF X THEN
    T.PWD = YT.SMS<2,X>
    CONVERT @SM TO @FM IN T.PWD
  END
 SS.REC = ""
 CALL GET.STANDARD.SELECTION.DETS(YFILE,SS.REC)
 LOCATE "CO.CODE" IN SS.REC<SSL.SYS.FIELD.NAME,1> SETTING COMP.FOUND ELSE COMP.FOUND = ""
  CALL OPF (FULL.FNAME, YF.LMM.ACCOUNT.BALANCES)
  CLEARSELECT
 IF C$MULTI.BOOK AND COMP.FOUND THEN
     SEL.ARGS = " WITH CO.CODE EQUAL ":ID.COMPANY
 END ELSE 
     SEL.ARGS = ""
 END
  SELECT.CMMD = "SELECT ":FULL.FNAME:SEL.ARGS
  CALL EB.READLIST(SELECT.CMMD,YID.LIST,"","","")
  LOOP
    REMOVE ID.NEW FROM YID.LIST SETTING YDELIM
  WHILE ID.NEW:YDELIM
    MATREAD R.NEW FROM YF.LMM.ACCOUNT.BALANCES, ID.NEW ELSE ID.NEW = "" ; MAT R.NEW = ""
    IF T.PWD THEN
      CALL CONTROL.USER.PROFILE ("RECORD")
      IF ETEXT THEN ID.NEW = ""
    END
    IF ID.NEW <> "" THEN
*
* Handle Decision Table
      YM.ACCBAL.KEY = ID.NEW
      YM.CONTRACT.NO = YM.ACCBAL.KEY
      YM.CONTRACT.NO = FMT(YM.CONTRACT.NO,"14L"); YM.CONTRACT.NO = YM.CONTRACT.NO[1,12]
      YM.LIQ.CD = YM.CONTRACT.NO
      IF YM.LIQ.CD <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_33_":YM.LIQ.CD
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.LIQ.CD = YFOR.FD
      END
      YM.CATEGORY = YM.CONTRACT.NO
      IF YM.CATEGORY <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_11_":YM.CATEGORY
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CATEGORY = YFOR.FD
      END
      YM.CONTRACT.NO.PARAM = YM.CONTRACT.NO
      YM5.GOSUB = YM.CONTRACT.NO.PARAM
      YM.CONTRACT.STATUS = YM.CONTRACT.NO
      IF YM.CONTRACT.STATUS <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_90_":YM.CONTRACT.STATUS
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.CONTRACT.STATUS = YFOR.FD
      END
      YM.STATUS.PARAM = YM.CONTRACT.STATUS
      YM6.GOSUB = YM.STATUS.PARAM
      YM.OVERDUE.FLAG = ""
      YM7.GOSUB = YM.OVERDUE.FLAG
      YM.OVERDUE.DATE = ""
      YM8.GOSUB = YM.OVERDUE.DATE
      YM.OD.DAYS.CATEGORY = ""
      YM9.GOSUB = YM.OD.DAYS.CATEGORY
      YM.DAYS.DESC = ""
      YM10.GOSUB = YM.DAYS.DESC
      CALL @LD.GET.OVERDUE.DAYS (YM5.GOSUB, YM6.GOSUB, YM7.GOSUB, YM8.GOSUB, YM9.GOSUB, YM10.GOSUB)
      YM.CONTRACT.NO.PARAM = YM5.GOSUB
      YM.STATUS.PARAM = YM6.GOSUB
      YM.OVERDUE.FLAG = YM7.GOSUB
      YM.OVERDUE.DATE = YM8.GOSUB
      YM.OD.DAYS.CATEGORY = YM9.GOSUB
      YM.DAYS.DESC = YM10.GOSUB
      YM.LD.CHAR = YM.CONTRACT.NO
      YM.LD.CHAR = FMT(YM.LD.CHAR,"12L"); YM.LD.CHAR = YM.LD.CHAR[1,2]
      IF (YM.LIQ.CD <> 1) AND ((YM.CATEGORY >= 21050 AND YM.CATEGORY <= 21074) OR (YM.CATEGORY >= 21095 AND YM.CATEGORY <= 21099)) AND (YM.OVERDUE.FLAG <> "") AND (YM.LD.CHAR = "LD") THEN
        GOSUB 2000000
      END
1000:
    END
*
  REPEAT
  IF YKEYNO THEN
  YR.REC(25)  := @FM
     MATWRITE YR.REC TO F.FILE, YKEY
  END 
*
  IF NOT(PHNO) THEN PRINT @(41,L1ST-3):YBLOCKNO+YWRITNO:
  IF SAVE.ID.COMPANY # ID.COMPANY THEN
     CALL LOAD.COMPANY(SAVE.ID.COMPANY)
  END
  RETURN
*************************************************************************
*
* Define and Write record
2000000:
*
  YKEY = ""; MAT YR.REC = ""
  YM.ACCBAL.KEY = ID.NEW
  YM.CONTRACT.NO = YM.ACCBAL.KEY
  YM.CONTRACT.NO = FMT(YM.CONTRACT.NO,"14L"); YM.CONTRACT.NO = YM.CONTRACT.NO[1,12]
  YM.CONTRACT.NO.PARAM = YM.CONTRACT.NO
  YM5.GOSUB = YM.CONTRACT.NO.PARAM
  YM.CONTRACT.STATUS = YM.CONTRACT.NO
  IF YM.CONTRACT.STATUS <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_90_":YM.CONTRACT.STATUS
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.CONTRACT.STATUS = YFOR.FD
  END
  YM.STATUS.PARAM = YM.CONTRACT.STATUS
  YM6.GOSUB = YM.STATUS.PARAM
  YM.OVERDUE.FLAG = ""
  YM7.GOSUB = YM.OVERDUE.FLAG
  YM.OVERDUE.DATE = ""
  YM8.GOSUB = YM.OVERDUE.DATE
  YM.OD.DAYS.CATEGORY = ""
  YM9.GOSUB = YM.OD.DAYS.CATEGORY
  YM.DAYS.DESC = ""
  YM10.GOSUB = YM.DAYS.DESC
  CALL @LD.GET.OVERDUE.DAYS (YM5.GOSUB, YM6.GOSUB, YM7.GOSUB, YM8.GOSUB, YM9.GOSUB, YM10.GOSUB)
  YM.CONTRACT.NO.PARAM = YM5.GOSUB
  YM.STATUS.PARAM = YM6.GOSUB
  YM.OVERDUE.FLAG = YM7.GOSUB
  YM.OVERDUE.DATE = YM8.GOSUB
  YM.OD.DAYS.CATEGORY = YM9.GOSUB
  YM.DAYS.DESC = YM10.GOSUB
  YKEYFD = YM.OD.DAYS.CATEGORY

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

  FULL.TXN.ID = ""
  CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

  YKEYFD = FMT(YM.OD.DAYS.CATEGORY,"5L")


  IF LEN(YKEYFD) > 5 THEN YKEYFD = YKEYFD[1,4]:"|"
  GOSUB 8000000
  YM.DAYS.CATEG.BREAK = YM.OD.DAYS.CATEGORY
  YKEYFD = YM.DAYS.CATEG.BREAK

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

  FULL.TXN.ID = ""
  CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

  YKEYFD = FMT(YM.DAYS.CATEG.BREAK,"5L")


  IF LEN(YKEYFD) > 5 THEN YKEYFD = YKEYFD[1,4]:"|"
  GOSUB 8000000
  YM.DAYS.DESC.PRINT = YM.DAYS.DESC
  YR.REC(1) = YM.DAYS.DESC.PRINT
  YM.TOTAL.CONTRACTS = "1"
  YR.REC(2) = YM.TOTAL.CONTRACTS
  YM.SEPARATOR1 = "*********************************"
  YR.REC(3) = YM.SEPARATOR1
  YM.SEPARATOR2 = "*********************************"
  YR.REC(4) = YM.SEPARATOR2
  YM.SEPARATOR3 = "*********************************"
  YR.REC(5) = YM.SEPARATOR3
  YM.SEPARATOR4 = "*********************************"
  YR.REC(6) = YM.SEPARATOR4
  YM.CUST.ID = YM.CONTRACT.NO
  IF YM.CUST.ID <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_1_":YM.CUST.ID
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.CUST.ID = YFOR.FD
  END
  YKEYFD = YM.CUST.ID

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

  FULL.TXN.ID = ""
  CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

  YKEYFD = FMT(YM.CUST.ID,"12L")


  IF LEN(YKEYFD) > 12 THEN YKEYFD = YKEYFD[1,11]:"|"
  GOSUB 8000000
  YM.CCY = YM.CONTRACT.NO
  IF YM.CCY <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_2_":YM.CCY
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.CCY = YFOR.FD
  END
  YKEYFD = YM.CCY

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

  FULL.TXN.ID = ""
  CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

  YKEYFD = FMT(YM.CCY,"5L")


  IF LEN(YKEYFD) > 5 THEN YKEYFD = YKEYFD[1,4]:"|"
  GOSUB 8000000
  YM.CONTRACT.NO.PRINT = YM.CONTRACT.NO
  YKEYFD = YM.CONTRACT.NO.PRINT

* check ID to see if it matches keys with contract no. in the format
* xxyydddnnnnn. if it does, extend the year (yy) component of the key
* to yyyy and use this as the id to the REPGEN work file. all the
* aforementioned processing is done in ENQ.BUILD.TXN and is part of
* Year 2000 compliance

  FULL.TXN.ID = ""
  CALL ENQ.BUILD.TXN(FULL.TXN.ID,YKEYFD)

  YKEYFD = FMT(YM.CONTRACT.NO.PRINT,"14L")


  IF LEN(YKEYFD) > 14 THEN YKEYFD = YKEYFD[1,13]:"|"
  GOSUB 8000000
  YR.REC(7) = YM.CONTRACT.NO.PRINT
  YM.CUST.NAME = YM.CUST.ID
  IF YM.CUST.NAME <> "" THEN
    YCOMP = "CUSTOMER_2_":YM.CUST.NAME
    YFORFIL = YF.CUSTOMER
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.CUST.NAME = YFOR.FD
  END
  YR.REC(8) = YM.CUST.NAME
  YM.CCY.PRINT = YM.CCY
  YR.REC(9) = YM.CCY.PRINT
  YTRUE.1 = 0
  YM.FILE.NAME1 = "F.LMM.ACCOUNT.BALANCES"
  YM27.GOSUB = YM.FILE.NAME1
  YM.KEY1 = YM.ACCBAL.KEY
  YM28.GOSUB = YM.KEY1
  YM.FIELD.NO1 = "6"
  YM29.GOSUB = YM.FIELD.NO1
  YM.OP.CODE1 = "LAST"
  YM30.GOSUB = YM.OP.CODE1
  YM.OUTS.PRINC = ""
  YM31.GOSUB = YM.OUTS.PRINC
  CALL @LD.EXTRCT.VAL (YM27.GOSUB, YM28.GOSUB, YM29.GOSUB, YM30.GOSUB, YM31.GOSUB)
  YM.FILE.NAME1 = YM27.GOSUB
  YM.KEY1 = YM28.GOSUB
  YM.FIELD.NO1 = YM29.GOSUB
  YM.OP.CODE1 = YM30.GOSUB
  YM.OUTS.PRINC = YM31.GOSUB
  YM.OUTS.PRINC.CHECK = YM.OUTS.PRINC
  IF YM.OUTS.PRINC.CHECK <> "" AND YM.OUTS.PRINC.CHECK <> 0 THEN
    YTRUE.1 = 1
    YM.OUTS.PRINC.DUMMY = YM.OUTS.PRINC
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.PRINC.CHECK = YM.OUTS.PRINC
    IF YM.OUTS.PRINC.CHECK = "" OR YM.OUTS.PRINC.CHECK = 0 THEN
      YTRUE.1 = 1
      YM.OUTS.PRINC.DUMMY = ". . NONE . ."
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.PRINC.DUMMY = ""
  YM.OUTS.PRINC.PRINT = YM.OUTS.PRINC.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.PRINC.PRINT <> "" THEN
    YM.OUTS.PRINC.PRINT = TRIM(FMT(YM.OUTS.PRINC.PRINT,"19R":YDEC))
  END
  YR.REC(10) = YM.OUTS.PRINC.PRINT
  YTRUE.1 = 0
  YM.OUTS.INT = R.NEW(11)
  YM.OUTS.INT.CHECK = YM.OUTS.INT
  IF YM.OUTS.INT.CHECK <> "" AND YM.OUTS.INT.CHECK <> 0 THEN
    YTRUE.1 = 1
    YM.OUTS.INT = R.NEW(11)
    YM.OUTS.INT.DUMMY = YM.OUTS.INT
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.INT = R.NEW(11)
    YM.OUTS.INT.CHECK = YM.OUTS.INT
    IF YM.OUTS.INT.CHECK = "" OR YM.OUTS.INT.CHECK = 0 THEN
      YTRUE.1 = 1
      YM.OUTS.INT.DUMMY = ". . NONE . ."
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.INT.DUMMY = ""
  YM.OUTS.INT.PRINT = YM.OUTS.INT.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.INT.PRINT <> "" THEN
    YM.OUTS.INT.PRINT = TRIM(FMT(YM.OUTS.INT.PRINT,"19R":YDEC))
  END
  YR.REC(11) = YM.OUTS.INT.PRINT
  YTRUE.1 = 0
  YM.OUTS.COM = R.NEW(14)
  YM.OUTS.COM.CHECK = YM.OUTS.COM
  IF YM.OUTS.COM.CHECK <> "" AND YM.OUTS.COM.CHECK <> 0 THEN
    YTRUE.1 = 1
    YM.OUTS.COM = R.NEW(14)
    YM.OUTS.COM.DUMMY = YM.OUTS.COM
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.COM = R.NEW(14)
    YM.OUTS.COM.CHECK = YM.OUTS.COM
    IF YM.OUTS.COM.CHECK = "" OR YM.OUTS.COM.CHECK = 0 THEN
      YTRUE.1 = 1
      YM.OUTS.COM.DUMMY = ". . NONE . ."
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.COM.DUMMY = ""
  YM.OUTS.COM.PRINT = YM.OUTS.COM.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.COM.PRINT <> "" THEN
    YM.OUTS.COM.PRINT = TRIM(FMT(YM.OUTS.COM.PRINT,"19R":YDEC))
  END
  YR.REC(12) = YM.OUTS.COM.PRINT
  YTRUE.1 = 0
  YM.FILE.NAME2 = "F.LMM.ACCOUNT.BALANCES"
  YM46.GOSUB = YM.FILE.NAME2
  YM.KEY2 = YM.ACCBAL.KEY
  YM47.GOSUB = YM.KEY2
  YM.FIELD.NO2 = "44"
  YM48.GOSUB = YM.FIELD.NO2
  YM.OP.CODE2 = "SUM"
  YM49.GOSUB = YM.OP.CODE2
  YM.FEE.DUE = ""
  YM50.GOSUB = YM.FEE.DUE
  CALL @LD.EXTRCT.VAL (YM46.GOSUB, YM47.GOSUB, YM48.GOSUB, YM49.GOSUB, YM50.GOSUB)
  YM.FILE.NAME2 = YM46.GOSUB
  YM.KEY2 = YM47.GOSUB
  YM.FIELD.NO2 = YM48.GOSUB
  YM.OP.CODE2 = YM49.GOSUB
  YM.FEE.DUE = YM50.GOSUB
  YM.FEE.DUE.TOTAL = YM.FEE.DUE
  YM.OUTS.FEES = YM.FEE.DUE.TOTAL
  YM1.OUTS.FEES = YM.OUTS.FEES
  YM.FILE.NAME3 = "F.LMM.ACCOUNT.BALANCES"
  YM52.GOSUB = YM.FILE.NAME3
  YM.KEY3 = YM.ACCBAL.KEY
  YM53.GOSUB = YM.KEY3
  YM.FIELD.NO3 = "47"
  YM54.GOSUB = YM.FIELD.NO3
  YM.OP.CODE3 = "SUM"
  YM55.GOSUB = YM.OP.CODE3
  YM.FEE.RECD = ""
  YM56.GOSUB = YM.FEE.RECD
  CALL @LD.EXTRCT.VAL (YM52.GOSUB, YM53.GOSUB, YM54.GOSUB, YM55.GOSUB, YM56.GOSUB)
  YM.FILE.NAME3 = YM52.GOSUB
  YM.KEY3 = YM53.GOSUB
  YM.FIELD.NO3 = YM54.GOSUB
  YM.OP.CODE3 = YM55.GOSUB
  YM.FEE.RECD = YM56.GOSUB
  YM.FEE.RECD.TOTAL = YM.FEE.RECD
  YM.OUTS.FEES = YM.FEE.RECD.TOTAL
  IF NUM(YM1.OUTS.FEES) = NUMERIC THEN IF NUM(YM.OUTS.FEES) = NUMERIC THEN
    YM1.OUTS.FEES = YM1.OUTS.FEES + YM.OUTS.FEES
    IF YM1.OUTS.FEES = 0 THEN YM1.OUTS.FEES = ""
  END
  YM.OUTS.FEES = YM1.OUTS.FEES
  YM.OUTS.FEES.CHECK = YM.OUTS.FEES
  IF YM.OUTS.FEES.CHECK = "" OR YM.OUTS.FEES.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OUTS.FEES.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.FEE.DUE.TOTAL = YM.FEE.DUE
    YM.OUTS.FEES = YM.FEE.DUE.TOTAL
    YM1.OUTS.FEES = YM.OUTS.FEES
    YM.FEE.RECD.TOTAL = YM.FEE.RECD
    YM.OUTS.FEES = YM.FEE.RECD.TOTAL
    IF NUM(YM1.OUTS.FEES) = NUMERIC THEN IF NUM(YM.OUTS.FEES) = NUMERIC THEN
      YM1.OUTS.FEES = YM1.OUTS.FEES + YM.OUTS.FEES
      IF YM1.OUTS.FEES = 0 THEN YM1.OUTS.FEES = ""
    END
    YM.OUTS.FEES = YM1.OUTS.FEES
    YM.OUTS.FEES.CHECK = YM.OUTS.FEES
    IF YM.OUTS.FEES.CHECK <> "" AND YM.OUTS.FEES.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.FEE.DUE.TOTAL = YM.FEE.DUE
      YM.OUTS.FEES = YM.FEE.DUE.TOTAL
      YM1.OUTS.FEES = YM.OUTS.FEES
      YM.FEE.RECD.TOTAL = YM.FEE.RECD
      YM.OUTS.FEES = YM.FEE.RECD.TOTAL
      IF NUM(YM1.OUTS.FEES) = NUMERIC THEN IF NUM(YM.OUTS.FEES) = NUMERIC THEN
        YM1.OUTS.FEES = YM1.OUTS.FEES + YM.OUTS.FEES
        IF YM1.OUTS.FEES = 0 THEN YM1.OUTS.FEES = ""
      END
      YM.OUTS.FEES = YM1.OUTS.FEES
      YM.OUTS.FEES.DUMMY = YM.OUTS.FEES
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.FEES.DUMMY = ""
  YM.OUTS.FEES.PRINT = YM.OUTS.FEES.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.FEES.PRINT <> "" THEN
    YM.OUTS.FEES.PRINT = TRIM(FMT(YM.OUTS.FEES.PRINT,"19R":YDEC))
  END
  YR.REC(13) = YM.OUTS.FEES.PRINT
  YM.STATUS = YM.CONTRACT.NO
  IF YM.STATUS <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_90_":YM.STATUS
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.STATUS = YFOR.FD
  END
  YR.REC(14) = YM.STATUS
  YM.VALUE.DATE = YM.CONTRACT.NO
  IF YM.VALUE.DATE <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_6_":YM.VALUE.DATE
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.VALUE.DATE = YFOR.FD
  END
  YR.REC(15) = YM.VALUE.DATE
  YTRUE.1 = 0
  YM.FILE.NAME4 = "F.LMM.ACCOUNT.BALANCES"
  YM65.GOSUB = YM.FILE.NAME4
  YM.KEY4 = YM.ACCBAL.KEY
  YM66.GOSUB = YM.KEY4
  YM.FIELD.NO4 = "7"
  YM67.GOSUB = YM.FIELD.NO4
  YM.OP.CODE4 = "LAST"
  YM68.GOSUB = YM.OP.CODE4
  YM.OD.PRINC = ""
  YM69.GOSUB = YM.OD.PRINC
  CALL @LD.EXTRCT.VAL (YM65.GOSUB, YM66.GOSUB, YM67.GOSUB, YM68.GOSUB, YM69.GOSUB)
  YM.FILE.NAME4 = YM65.GOSUB
  YM.KEY4 = YM66.GOSUB
  YM.FIELD.NO4 = YM67.GOSUB
  YM.OP.CODE4 = YM68.GOSUB
  YM.OD.PRINC = YM69.GOSUB
  YM.OD.PRINC.CHECK = YM.OD.PRINC
  IF YM.OD.PRINC.CHECK = "" OR YM.OD.PRINC.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OD.PRINC.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.OD.PRINC.CHECK = YM.OD.PRINC
    IF YM.OD.PRINC.CHECK <> "" AND YM.OD.PRINC.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.OD.PRINC.DUMMY = YM.OD.PRINC
    END
  END
  IF NOT(YTRUE.1) THEN YM.OD.PRINC.DUMMY = ""
  YM.OD.PRINC.PRINT = YM.OD.PRINC.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OD.PRINC.PRINT <> "" THEN
    YM.OD.PRINC.PRINT = TRIM(FMT(YM.OD.PRINC.PRINT,"19R":YDEC))
  END
  YR.REC(16) = YM.OD.PRINC.PRINT
  YTRUE.1 = 0
  YM.OD.INT = R.NEW(12)
  YM.OD.INT.CHECK = YM.OD.INT
  IF YM.OD.INT.CHECK = "" OR YM.OD.INT.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OD.INT.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.OD.INT = R.NEW(12)
    YM.OD.INT.CHECK = YM.OD.INT
    IF YM.OD.INT.CHECK <> "" AND YM.OD.INT.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.OD.INT = R.NEW(12)
      YM.OD.INT.DUMMY = YM.OD.INT
    END
  END
  IF NOT(YTRUE.1) THEN YM.OD.INT.DUMMY = ""
  YM.OD.INT.PRINT = YM.OD.INT.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OD.INT.PRINT <> "" THEN
    YM.OD.INT.PRINT = TRIM(FMT(YM.OD.INT.PRINT,"19R":YDEC))
  END
  YR.REC(17) = YM.OD.INT.PRINT
  YTRUE.1 = 0
  YM.OD.COM = R.NEW(15)
  YM.OD.COM.CHECK = YM.OD.COM
  IF YM.OD.COM.CHECK = "" OR YM.OD.COM.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OD.COM.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.OD.COM = R.NEW(15)
    YM.OD.COM.CHECK = YM.OD.COM
    IF YM.OD.COM.CHECK <> "" AND YM.OD.COM.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.OD.COM = R.NEW(15)
      YM.OD.COM.DUMMY = YM.OD.COM
    END
  END
  IF NOT(YTRUE.1) THEN YM.OD.COM.DUMMY = ""
  YM.OD.COM.PRINT = YM.OD.COM.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OD.COM.PRINT <> "" THEN
    YM.OD.COM.PRINT = TRIM(FMT(YM.OD.COM.PRINT,"19R":YDEC))
  END
  YR.REC(18) = YM.OD.COM.PRINT
  YM.TRIGGER.DATE = YM.OVERDUE.DATE
  YR.REC(19) = YM.TRIGGER.DATE
  YTRUE.1 = 0
  YM.FILE.NAME5 = "F.LMM.ACCOUNT.BALANCES"
  YM85.GOSUB = YM.FILE.NAME5
  YM.KEY5 = YM.ACCBAL.KEY
  YM86.GOSUB = YM.KEY5
  YM.FIELD.NO5 = "8"
  YM87.GOSUB = YM.FIELD.NO5
  YM.OP.CODE5 = "LAST"
  YM88.GOSUB = YM.OP.CODE5
  YM.OUTS.NAB.PRINC = ""
  YM89.GOSUB = YM.OUTS.NAB.PRINC
  CALL @LD.EXTRCT.VAL (YM85.GOSUB, YM86.GOSUB, YM87.GOSUB, YM88.GOSUB, YM89.GOSUB)
  YM.FILE.NAME5 = YM85.GOSUB
  YM.KEY5 = YM86.GOSUB
  YM.FIELD.NO5 = YM87.GOSUB
  YM.OP.CODE5 = YM88.GOSUB
  YM.OUTS.NAB.PRINC = YM89.GOSUB
  YM.OUTS.NAB.PRINC.CHECK = YM.OUTS.NAB.PRINC
  IF YM.OUTS.NAB.PRINC.CHECK <> "" AND YM.OUTS.NAB.PRINC.CHECK <> 0 THEN
    YTRUE.1 = 1
    YM.OUTS.NAB.PRINC.DUMMY = YM.OUTS.NAB.PRINC
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.NAB.PRINC.CHECK = YM.OUTS.NAB.PRINC
    IF YM.OUTS.NAB.PRINC.CHECK = "" OR YM.OUTS.NAB.PRINC.CHECK = 0 THEN
      YTRUE.1 = 1
      YM.OUTS.NAB.PRINC.DUMMY = ". . NONE . ."
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.NAB.PRINC.DUMMY = ""
  YM.OUTS.NAB.PRINC.PRINT = YM.OUTS.NAB.PRINC.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.NAB.PRINC.PRINT <> "" THEN
    YM.OUTS.NAB.PRINC.PRINT = TRIM(FMT(YM.OUTS.NAB.PRINC.PRINT,"19R":YDEC))
  END
  YR.REC(20) = YM.OUTS.NAB.PRINC.PRINT
  YTRUE.1 = 0
  YTRUE.2 = 0
  YM.INT.FIN.OR.MEM = "1"
  IF YM.INT.FIN.OR.MEM <> "" THEN
    YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
    YFORFIL = YF.LMM.INSTALL.CONDS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.INT.FIN.OR.MEM = YFOR.FD
  END
  IF YM.INT.FIN.OR.MEM = "F" THEN
    YTRUE.2 = 1
    YM.PEN.INT.DUMM = R.NEW(17)
  END
  IF NOT(YTRUE.2) THEN
    YM.INT.FIN.OR.MEM = "1"
    IF YM.INT.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.INT.FIN.OR.MEM = YFOR.FD
    END
    IF YM.INT.FIN.OR.MEM = "M" THEN
      YTRUE.2 = 1
      YM.PEN.INT.DUMM = R.NEW(20)
    END
  END
  IF NOT(YTRUE.2) THEN YM.PEN.INT.DUMM = ""
  YM.OUTS.PEN.INT = YM.PEN.INT.DUMM
  YM1.OUTS.PEN.INT = YM.OUTS.PEN.INT
  YM.OUTS.PEN.INT = R.NEW(19)
  IF NUM(YM1.OUTS.PEN.INT) = NUMERIC THEN IF NUM(YM.OUTS.PEN.INT) = NUMERIC THEN
    YM1.OUTS.PEN.INT = YM1.OUTS.PEN.INT + YM.OUTS.PEN.INT
    IF YM1.OUTS.PEN.INT = 0 THEN YM1.OUTS.PEN.INT = ""
  END
  YM.OUTS.PEN.INT = YM1.OUTS.PEN.INT
  YM.OUTS.PEN.INT.CHECK = YM.OUTS.PEN.INT
  YTRUE.2 = 0
  YM.INT.FIN.OR.MEM = "1"
  IF YM.INT.FIN.OR.MEM <> "" THEN
    YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
    YFORFIL = YF.LMM.INSTALL.CONDS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.INT.FIN.OR.MEM = YFOR.FD
  END
  IF YM.INT.FIN.OR.MEM = "F" THEN
    YTRUE.2 = 1
    YM.PEN.INT.DUMM = R.NEW(17)
  END
  IF NOT(YTRUE.2) THEN
    YM.INT.FIN.OR.MEM = "1"
    IF YM.INT.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.INT.FIN.OR.MEM = YFOR.FD
    END
    IF YM.INT.FIN.OR.MEM = "M" THEN
      YTRUE.2 = 1
      YM.PEN.INT.DUMM = R.NEW(20)
    END
  END
  IF NOT(YTRUE.2) THEN YM.PEN.INT.DUMM = ""
  YM.OUTS.PEN.INT = YM.PEN.INT.DUMM
  YM1.OUTS.PEN.INT = YM.OUTS.PEN.INT
  YM.OUTS.PEN.INT = R.NEW(19)
  IF NUM(YM1.OUTS.PEN.INT) = NUMERIC THEN IF NUM(YM.OUTS.PEN.INT) = NUMERIC THEN
    YM1.OUTS.PEN.INT = YM1.OUTS.PEN.INT + YM.OUTS.PEN.INT
    IF YM1.OUTS.PEN.INT = 0 THEN YM1.OUTS.PEN.INT = ""
  END
  YM.OUTS.PEN.INT = YM1.OUTS.PEN.INT
  YM.OUTS.PEN.INT.CHECK = YM.OUTS.PEN.INT
  IF YM.OUTS.PEN.INT.CHECK = "" OR YM.OUTS.PEN.INT.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OUTS.PEN.INT.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YTRUE.2 = 0
    YM.INT.FIN.OR.MEM = "1"
    IF YM.INT.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.INT.FIN.OR.MEM = YFOR.FD
    END
    IF YM.INT.FIN.OR.MEM = "F" THEN
      YTRUE.2 = 1
      YM.PEN.INT.DUMM = R.NEW(17)
    END
    IF NOT(YTRUE.2) THEN
      YM.INT.FIN.OR.MEM = "1"
      IF YM.INT.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.INT.FIN.OR.MEM = YFOR.FD
      END
      IF YM.INT.FIN.OR.MEM = "M" THEN
        YTRUE.2 = 1
        YM.PEN.INT.DUMM = R.NEW(20)
      END
    END
    IF NOT(YTRUE.2) THEN YM.PEN.INT.DUMM = ""
    YM.OUTS.PEN.INT = YM.PEN.INT.DUMM
    YM1.OUTS.PEN.INT = YM.OUTS.PEN.INT
    YM.OUTS.PEN.INT = R.NEW(19)
    IF NUM(YM1.OUTS.PEN.INT) = NUMERIC THEN IF NUM(YM.OUTS.PEN.INT) = NUMERIC THEN
      YM1.OUTS.PEN.INT = YM1.OUTS.PEN.INT + YM.OUTS.PEN.INT
      IF YM1.OUTS.PEN.INT = 0 THEN YM1.OUTS.PEN.INT = ""
    END
    YM.OUTS.PEN.INT = YM1.OUTS.PEN.INT
    YM.OUTS.PEN.INT.CHECK = YM.OUTS.PEN.INT
    YTRUE.2 = 0
    YM.INT.FIN.OR.MEM = "1"
    IF YM.INT.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.INT.FIN.OR.MEM = YFOR.FD
    END
    IF YM.INT.FIN.OR.MEM = "F" THEN
      YTRUE.2 = 1
      YM.PEN.INT.DUMM = R.NEW(17)
    END
    IF NOT(YTRUE.2) THEN
      YM.INT.FIN.OR.MEM = "1"
      IF YM.INT.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.INT.FIN.OR.MEM = YFOR.FD
      END
      IF YM.INT.FIN.OR.MEM = "M" THEN
        YTRUE.2 = 1
        YM.PEN.INT.DUMM = R.NEW(20)
      END
    END
    IF NOT(YTRUE.2) THEN YM.PEN.INT.DUMM = ""
    YM.OUTS.PEN.INT = YM.PEN.INT.DUMM
    YM1.OUTS.PEN.INT = YM.OUTS.PEN.INT
    YM.OUTS.PEN.INT = R.NEW(19)
    IF NUM(YM1.OUTS.PEN.INT) = NUMERIC THEN IF NUM(YM.OUTS.PEN.INT) = NUMERIC THEN
      YM1.OUTS.PEN.INT = YM1.OUTS.PEN.INT + YM.OUTS.PEN.INT
      IF YM1.OUTS.PEN.INT = 0 THEN YM1.OUTS.PEN.INT = ""
    END
    YM.OUTS.PEN.INT = YM1.OUTS.PEN.INT
    YM.OUTS.PEN.INT.CHECK = YM.OUTS.PEN.INT
    IF YM.OUTS.PEN.INT.CHECK <> "" AND YM.OUTS.PEN.INT.CHECK <> 0 THEN
      YTRUE.1 = 1
      YTRUE.2 = 0
      YM.INT.FIN.OR.MEM = "1"
      IF YM.INT.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.INT.FIN.OR.MEM = YFOR.FD
      END
      IF YM.INT.FIN.OR.MEM = "F" THEN
        YTRUE.2 = 1
        YM.PEN.INT.DUMM = R.NEW(17)
      END
      IF NOT(YTRUE.2) THEN
        YM.INT.FIN.OR.MEM = "1"
        IF YM.INT.FIN.OR.MEM <> "" THEN
          YCOMP = "LMM.INSTALL.CONDS_24_":YM.INT.FIN.OR.MEM
          YFORFIL = YF.LMM.INSTALL.CONDS
          YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
          YM.INT.FIN.OR.MEM = YFOR.FD
        END
        IF YM.INT.FIN.OR.MEM = "M" THEN
          YTRUE.2 = 1
          YM.PEN.INT.DUMM = R.NEW(20)
        END
      END
      IF NOT(YTRUE.2) THEN YM.PEN.INT.DUMM = ""
      YM.OUTS.PEN.INT = YM.PEN.INT.DUMM
      YM1.OUTS.PEN.INT = YM.OUTS.PEN.INT
      YM.OUTS.PEN.INT = R.NEW(19)
      IF NUM(YM1.OUTS.PEN.INT) = NUMERIC THEN IF NUM(YM.OUTS.PEN.INT) = NUMERIC THEN
        YM1.OUTS.PEN.INT = YM1.OUTS.PEN.INT + YM.OUTS.PEN.INT
        IF YM1.OUTS.PEN.INT = 0 THEN YM1.OUTS.PEN.INT = ""
      END
      YM.OUTS.PEN.INT = YM1.OUTS.PEN.INT
      YM.OUTS.PEN.INT.DUMMY = YM.OUTS.PEN.INT
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.PEN.INT.DUMMY = ""
  YM.OUTS.PEN.INT.PRINT = YM.OUTS.PEN.INT.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.PEN.INT.PRINT <> "" THEN
    YM.OUTS.PEN.INT.PRINT = TRIM(FMT(YM.OUTS.PEN.INT.PRINT,"19R":YDEC))
  END
  YR.REC(21) = YM.OUTS.PEN.INT.PRINT
  YTRUE.1 = 0
  YTRUE.2 = 0
  YM.COM.FIN.OR.MEM = "1"
  IF YM.COM.FIN.OR.MEM <> "" THEN
    YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
    YFORFIL = YF.LMM.INSTALL.CONDS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.COM.FIN.OR.MEM = YFOR.FD
  END
  IF YM.COM.FIN.OR.MEM = "F" THEN
    YTRUE.2 = 1
    YM.PEN.COM.DUMM = R.NEW(21)
  END
  IF NOT(YTRUE.2) THEN
    YM.COM.FIN.OR.MEM = "1"
    IF YM.COM.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.COM.FIN.OR.MEM = YFOR.FD
    END
    IF YM.COM.FIN.OR.MEM = "M" THEN
      YTRUE.2 = 1
      YM.PEN.COM.DUMM = R.NEW(24)
    END
  END
  IF NOT(YTRUE.2) THEN YM.PEN.COM.DUMM = ""
  YM.OUTS.PEN.COM = YM.PEN.COM.DUMM
  YM1.OUTS.PEN.COM = YM.OUTS.PEN.COM
  YM.OUTS.PEN.COM = R.NEW(23)
  IF NUM(YM1.OUTS.PEN.COM) = NUMERIC THEN IF NUM(YM.OUTS.PEN.COM) = NUMERIC THEN
    YM1.OUTS.PEN.COM = YM1.OUTS.PEN.COM + YM.OUTS.PEN.COM
    IF YM1.OUTS.PEN.COM = 0 THEN YM1.OUTS.PEN.COM = ""
  END
  YM.OUTS.PEN.COM = YM1.OUTS.PEN.COM
  YM.OUTS.PEN.COM.CHECK = YM.OUTS.PEN.COM
  YTRUE.2 = 0
  YM.COM.FIN.OR.MEM = "1"
  IF YM.COM.FIN.OR.MEM <> "" THEN
    YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
    YFORFIL = YF.LMM.INSTALL.CONDS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.COM.FIN.OR.MEM = YFOR.FD
  END
  IF YM.COM.FIN.OR.MEM = "F" THEN
    YTRUE.2 = 1
    YM.PEN.COM.DUMM = R.NEW(21)
  END
  IF NOT(YTRUE.2) THEN
    YM.COM.FIN.OR.MEM = "1"
    IF YM.COM.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.COM.FIN.OR.MEM = YFOR.FD
    END
    IF YM.COM.FIN.OR.MEM = "M" THEN
      YTRUE.2 = 1
      YM.PEN.COM.DUMM = R.NEW(24)
    END
  END
  IF NOT(YTRUE.2) THEN YM.PEN.COM.DUMM = ""
  YM.OUTS.PEN.COM = YM.PEN.COM.DUMM
  YM1.OUTS.PEN.COM = YM.OUTS.PEN.COM
  YM.OUTS.PEN.COM = R.NEW(23)
  IF NUM(YM1.OUTS.PEN.COM) = NUMERIC THEN IF NUM(YM.OUTS.PEN.COM) = NUMERIC THEN
    YM1.OUTS.PEN.COM = YM1.OUTS.PEN.COM + YM.OUTS.PEN.COM
    IF YM1.OUTS.PEN.COM = 0 THEN YM1.OUTS.PEN.COM = ""
  END
  YM.OUTS.PEN.COM = YM1.OUTS.PEN.COM
  YM.OUTS.PEN.COM.CHECK = YM.OUTS.PEN.COM
  IF YM.OUTS.PEN.COM.CHECK = "" OR YM.OUTS.PEN.COM.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OUTS.PEN.COM.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YTRUE.2 = 0
    YM.COM.FIN.OR.MEM = "1"
    IF YM.COM.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.COM.FIN.OR.MEM = YFOR.FD
    END
    IF YM.COM.FIN.OR.MEM = "F" THEN
      YTRUE.2 = 1
      YM.PEN.COM.DUMM = R.NEW(21)
    END
    IF NOT(YTRUE.2) THEN
      YM.COM.FIN.OR.MEM = "1"
      IF YM.COM.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.COM.FIN.OR.MEM = YFOR.FD
      END
      IF YM.COM.FIN.OR.MEM = "M" THEN
        YTRUE.2 = 1
        YM.PEN.COM.DUMM = R.NEW(24)
      END
    END
    IF NOT(YTRUE.2) THEN YM.PEN.COM.DUMM = ""
    YM.OUTS.PEN.COM = YM.PEN.COM.DUMM
    YM1.OUTS.PEN.COM = YM.OUTS.PEN.COM
    YM.OUTS.PEN.COM = R.NEW(23)
    IF NUM(YM1.OUTS.PEN.COM) = NUMERIC THEN IF NUM(YM.OUTS.PEN.COM) = NUMERIC THEN
      YM1.OUTS.PEN.COM = YM1.OUTS.PEN.COM + YM.OUTS.PEN.COM
      IF YM1.OUTS.PEN.COM = 0 THEN YM1.OUTS.PEN.COM = ""
    END
    YM.OUTS.PEN.COM = YM1.OUTS.PEN.COM
    YM.OUTS.PEN.COM.CHECK = YM.OUTS.PEN.COM
    YTRUE.2 = 0
    YM.COM.FIN.OR.MEM = "1"
    IF YM.COM.FIN.OR.MEM <> "" THEN
      YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
      YFORFIL = YF.LMM.INSTALL.CONDS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.COM.FIN.OR.MEM = YFOR.FD
    END
    IF YM.COM.FIN.OR.MEM = "F" THEN
      YTRUE.2 = 1
      YM.PEN.COM.DUMM = R.NEW(21)
    END
    IF NOT(YTRUE.2) THEN
      YM.COM.FIN.OR.MEM = "1"
      IF YM.COM.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.COM.FIN.OR.MEM = YFOR.FD
      END
      IF YM.COM.FIN.OR.MEM = "M" THEN
        YTRUE.2 = 1
        YM.PEN.COM.DUMM = R.NEW(24)
      END
    END
    IF NOT(YTRUE.2) THEN YM.PEN.COM.DUMM = ""
    YM.OUTS.PEN.COM = YM.PEN.COM.DUMM
    YM1.OUTS.PEN.COM = YM.OUTS.PEN.COM
    YM.OUTS.PEN.COM = R.NEW(23)
    IF NUM(YM1.OUTS.PEN.COM) = NUMERIC THEN IF NUM(YM.OUTS.PEN.COM) = NUMERIC THEN
      YM1.OUTS.PEN.COM = YM1.OUTS.PEN.COM + YM.OUTS.PEN.COM
      IF YM1.OUTS.PEN.COM = 0 THEN YM1.OUTS.PEN.COM = ""
    END
    YM.OUTS.PEN.COM = YM1.OUTS.PEN.COM
    YM.OUTS.PEN.COM.CHECK = YM.OUTS.PEN.COM
    IF YM.OUTS.PEN.COM.CHECK <> "" AND YM.OUTS.PEN.COM.CHECK <> 0 THEN
      YTRUE.1 = 1
      YTRUE.2 = 0
      YM.COM.FIN.OR.MEM = "1"
      IF YM.COM.FIN.OR.MEM <> "" THEN
        YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
        YFORFIL = YF.LMM.INSTALL.CONDS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.COM.FIN.OR.MEM = YFOR.FD
      END
      IF YM.COM.FIN.OR.MEM = "F" THEN
        YTRUE.2 = 1
        YM.PEN.COM.DUMM = R.NEW(21)
      END
      IF NOT(YTRUE.2) THEN
        YM.COM.FIN.OR.MEM = "1"
        IF YM.COM.FIN.OR.MEM <> "" THEN
          YCOMP = "LMM.INSTALL.CONDS_25_":YM.COM.FIN.OR.MEM
          YFORFIL = YF.LMM.INSTALL.CONDS
          YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
          YM.COM.FIN.OR.MEM = YFOR.FD
        END
        IF YM.COM.FIN.OR.MEM = "M" THEN
          YTRUE.2 = 1
          YM.PEN.COM.DUMM = R.NEW(24)
        END
      END
      IF NOT(YTRUE.2) THEN YM.PEN.COM.DUMM = ""
      YM.OUTS.PEN.COM = YM.PEN.COM.DUMM
      YM1.OUTS.PEN.COM = YM.OUTS.PEN.COM
      YM.OUTS.PEN.COM = R.NEW(23)
      IF NUM(YM1.OUTS.PEN.COM) = NUMERIC THEN IF NUM(YM.OUTS.PEN.COM) = NUMERIC THEN
        YM1.OUTS.PEN.COM = YM1.OUTS.PEN.COM + YM.OUTS.PEN.COM
        IF YM1.OUTS.PEN.COM = 0 THEN YM1.OUTS.PEN.COM = ""
      END
      YM.OUTS.PEN.COM = YM1.OUTS.PEN.COM
      YM.OUTS.PEN.COM.DUMMY = YM.OUTS.PEN.COM
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.PEN.COM.DUMMY = ""
  YM.OUTS.PEN.COM.PRINT = YM.OUTS.PEN.COM.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.PEN.COM.PRINT <> "" THEN
    YM.OUTS.PEN.COM.PRINT = TRIM(FMT(YM.OUTS.PEN.COM.PRINT,"19R":YDEC))
  END
  YR.REC(22) = YM.OUTS.PEN.COM.PRINT
  YTRUE.1 = 0
  YM.MAT.DATE = YM.CONTRACT.NO
  IF YM.MAT.DATE <> "" THEN
    YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
    YFORFIL = YF.LD.LOANS.AND.DEPOSITS
    YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
    YM.MAT.DATE = YFOR.FD
  END
  YM.MAT.DATE.TEMP = YM.MAT.DATE
  IF YM.MAT.DATE.TEMP > 999 THEN
    YTRUE.1 = 1
    YM.MAT.DATE = YM.CONTRACT.NO
    IF YM.MAT.DATE <> "" THEN
      YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
      YFORFIL = YF.LD.LOANS.AND.DEPOSITS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.MAT.DATE = YFOR.FD
    END
    YM.MAT.DATE.DUMMY = YM.MAT.DATE
  END
  IF NOT(YTRUE.1) THEN
    YM.MAT.DATE = YM.CONTRACT.NO
    IF YM.MAT.DATE <> "" THEN
      YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
      YFORFIL = YF.LD.LOANS.AND.DEPOSITS
      YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
      YM.MAT.DATE = YFOR.FD
    END
    YM.MAT.DATE.TEMP = YM.MAT.DATE
    IF YM.MAT.DATE.TEMP <= 999 THEN
      YTRUE.1 = 1
      YM.MAT.DATE = YM.CONTRACT.NO
      IF YM.MAT.DATE <> "" THEN
        YCOMP = "LD.LOANS.AND.DEPOSITS_7_":YM.MAT.DATE
        YFORFIL = YF.LD.LOANS.AND.DEPOSITS
        YPART.S = ""; YFD.LEN = ""; YHANDLE.LNGG = 0; GOSUB 9000000
        YM.MAT.DATE = YFOR.FD
      END
      YM.CALL.NOTICE.LIT = YM.MAT.DATE
      YM1.CALL.NOTICE.LIT = YM.CALL.NOTICE.LIT
      YM.CALL.NOTICE.LIT = " D/N"
      YM1.CALL.NOTICE.LIT = YM1.CALL.NOTICE.LIT : YM.CALL.NOTICE.LIT
      YM.CALL.NOTICE.LIT = YM1.CALL.NOTICE.LIT
      YM.MAT.DATE.DUMMY = YM.CALL.NOTICE.LIT
    END
  END
  IF NOT(YTRUE.1) THEN YM.MAT.DATE.DUMMY = ""
  YM.MAT.DATE.PRINT = YM.MAT.DATE.DUMMY
  YR.REC(23) = YM.MAT.DATE.PRINT
  YTRUE.1 = 0
  YM.OUTS.NAB.INT = R.NEW(25)
  YM.OUTS.NAB.INT.CHECK = YM.OUTS.NAB.INT
  IF YM.OUTS.NAB.INT.CHECK = "" OR YM.OUTS.NAB.INT.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OUTS.NAB.INT.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.NAB.INT = R.NEW(25)
    YM.OUTS.NAB.INT.CHECK = YM.OUTS.NAB.INT
    IF YM.OUTS.NAB.INT.CHECK <> "" AND YM.OUTS.NAB.INT.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.OUTS.NAB.INT = R.NEW(25)
      YM.OUTS.NAB.INT.DUMMY = YM.OUTS.NAB.INT
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.NAB.INT.DUMMY = ""
  YM.OUTS.NAB.INT.PRINT = YM.OUTS.NAB.INT.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.NAB.INT.PRINT <> "" THEN
    YM.OUTS.NAB.INT.PRINT = TRIM(FMT(YM.OUTS.NAB.INT.PRINT,"19R":YDEC))
  END
  YR.REC(24) = YM.OUTS.NAB.INT.PRINT
  YTRUE.1 = 0
  YM.OUTS.NAB.COM = R.NEW(26)
  YM.OUTS.NAB.COM.CHECK = YM.OUTS.NAB.COM
  IF YM.OUTS.NAB.COM.CHECK = "" OR YM.OUTS.NAB.COM.CHECK = 0 THEN
    YTRUE.1 = 1
    YM.OUTS.NAB.COM.DUMMY = ". . NONE . ."
  END
  IF NOT(YTRUE.1) THEN
    YM.OUTS.NAB.COM = R.NEW(26)
    YM.OUTS.NAB.COM.CHECK = YM.OUTS.NAB.COM
    IF YM.OUTS.NAB.COM.CHECK <> "" AND YM.OUTS.NAB.COM.CHECK <> 0 THEN
      YTRUE.1 = 1
      YM.OUTS.NAB.COM = R.NEW(26)
      YM.OUTS.NAB.COM.DUMMY = YM.OUTS.NAB.COM
    END
  END
  IF NOT(YTRUE.1) THEN YM.OUTS.NAB.COM.DUMMY = ""
  YM.OUTS.NAB.COM.PRINT = YM.OUTS.NAB.COM.DUMMY
  YDEC = "NO.OF.DECIMALS"; CALL UPD.CCY (YM.CCY, YDEC)
  IF YM.OUTS.NAB.COM.PRINT <> "" THEN
    YM.OUTS.NAB.COM.PRINT = TRIM(FMT(YM.OUTS.NAB.COM.PRINT,"19R":YDEC))
  END
  YR.REC(25) = YM.OUTS.NAB.COM.PRINT
*
  YKEYNO = YKEYNO + 1
  IF YKEYNO > 9999 THEN
    YKEY = YKEY:YKEYNO
  END ELSE
    YKEY = YKEY : FMT(YKEYNO,'5"0"R')
  END
  MATWRITE YR.REC TO F.FILE, YKEY
*
  IF NOT(PHNO) THEN
    IF YWRITNO < 9 THEN
      YWRITNO = YWRITNO + 1
    END ELSE
      YWRITNO = 0; YBLOCKNO = YBLOCKNO + 10
      PRINT @(41,L1ST-3):YBLOCKNO+YWRITNO:
    END
  END
  RETURN
*************************************************************************
*
* Update Key (and convert invalid Key char.)
8000000:
*
  YLEN.KEY = LEN(YKEYFD)
  FOR YNO = 1 TO YLEN.KEY
    YKEY.CHR = YKEYFD[YNO,1]
   IF YKEY.CHR MATCHES "1A" OR YKEY.CHR MATCHES "1N" THEN
        YKEY = YKEY : YKEY.CHR
   END ELSE
        IF INDEX(".$",YKEY.CHR,1) THEN
          YKEY = YKEY : YKEY.CHR
        END ELSE
          YKEY = YKEY : "&"
        END
   END
  NEXT YNO
  RETURN
*************************************************************************
*
* Update table of Parameters of foreign file
9000000:
*
  LOCATE YCOMP IN YT.FORFIL<1,1> SETTING YLOC.FOR ELSE
    YFOR.ID = FIELD(YCOMP,"_",3)
    YFOR.FD = FIELD(YCOMP,"_",2)
    YFOR.AF = FIELD(YFOR.FD,".",1)
    YFOR.AV = FIELD(YFOR.FD,".",2)
    YFOR.AS = FIELD(YFOR.FD,".",3)
*
    T.PWD.SAVE = T.PWD; T.PWD = ""
    IF YT.SMS THEN
      LOCATE FIELD(YCOMP,"_",1) IN YT.SMS<1,1> SETTING T.PWD ELSE NULL
    END
    IF T.PWD THEN
      MAT R.NEW.LAST = MAT R.NEW
      ID.NEW.SAVE = ID.NEW; ID.NEW = YFOR.ID
      MATREAD R.NEW FROM YFORFIL, ID.NEW ELSE MAT R.NEW = ""
      T.PWD = YT.SMS<2,T.PWD>; CONVERT @SM TO @FM IN T.PWD
      CALL CONTROL.USER.PROFILE ("RECORD")
      IF ETEXT THEN
        YFOR.FD = "@"
      END ELSE
        YFOR.FD = R.NEW(YFOR.AF)
      END
      MAT R.NEW = MAT R.NEW.LAST; ID.NEW = ID.NEW.SAVE
    END ELSE
     IF FIELD(YCOMP,"_",1) = "DATES"  AND (RUNNING.UNDER.BATCH) THEN
        COB.N.W.DATE = R.DATES(YFOR.AF)
        YFOR.FD = COB.N.W.DATE
     END ELSE
        READV YFOR.FD FROM YFORFIL, YFOR.ID, YFOR.AF ELSE YFOR.FD = ""
     END
    END
    T.PWD = T.PWD.SAVE; T.PWD.SAVE = ""
*
    IF NOT(YHANDLE.LNGG) THEN
      IF YFOR.AV <> "" THEN YFOR.FD = YFOR.FD<1,YFOR.AV,YFOR.AS>
    END ELSE
      IF YFOR.FD<1,LNGG> = "" THEN
        YFOR.FD = YFOR.FD<1,1>
      END ELSE
        YFOR.FD = YFOR.FD<1,LNGG>
      END
    END
    IF NOT(COUNT(YFOR.FD,@VM)) THEN
      DEL YT.FORFIL<1,50>; DEL YT.FORFIL<2,50>
      INS YCOMP BEFORE YT.FORFIL<1,1>
      INS YFOR.FD BEFORE YT.FORFIL<2,1>
    END
    YLOC.FOR = 0
  END
  IF YLOC.FOR THEN YFOR.FD = YT.FORFIL<2,YLOC.FOR>
  IF YPART.S <> "" THEN
    YCOUNT.FOR = COUNT(YFOR.FD,@VM)+1
    FOR YAV.FOR = 1 TO YCOUNT.FOR
      YCOUNT.AS.FOR = COUNT(YFOR.FD<1,YAV.FOR>,@SM)+1
      FOR YAS.FOR = 1 TO YCOUNT.AS.FOR
        IF YFD.LEN = "" THEN
          YFOR.FD<1,YAV.FOR,YAS.FOR> = FIELD(YFOR.FD<1,YAV.FOR,YAS.FOR>,YPART.S,YPART.L)
        END ELSE
          X = FMT(YFOR.FD<1,YAV.FOR,YAS.FOR>,YFD.LEN)
          YFOR.FD<1,YAV.FOR,YAS.FOR> = X[YPART.S,YPART.L]
        END
      NEXT YAS.FOR
    NEXT YAV.FOR
  END
  RETURN
*************************************************************************
*
* Ask for valid file password in connection with Company code
9300000:
*
  IF X THEN IF R.USER<EB.USE.COMPANY.RESTR,X> THEN
    IF R.USER<EB.USE.COMPANY.RESTR,X> <> YID.COMP THEN X = 0
  END
  RETURN
*************************************************************************
END
