SUBROUTINE DR.REP.AC.INT.CALC(ACCT.ID,R.ACCOUNT,INT.RATE)
*----------------------------------------------------------------------------
* Company Name   : APAP
*----------------------------------------------------------------------------
* Description:
*------------
* The Interest rate calculation routine
*----------------------------------------------------------------------------
*
* Modification History :
* ----------------------
*   Date       Author              Modification Description
*
* 01-Dec-2014  Ashokkumar.V.P      PACS00305233:- Fixed the saving account interest calculation bug.
*----------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_F.ACCOUNT
    $INSERT I_F.BASIC.INTEREST
    $INSERT I_F.GROUP.DATE
    $INSERT I_F.ACCOUNT.CREDIT.INT
    $INSERT I_F.PERIODIC.INTEREST
    $INSERT I_F.AZ.PRODUCT.PARAMETER
    $INSERT I_F.GROUP.CREDIT.INT
    $INSERT I_DAS.COMMON
    $INSERT I_DAS.BASIC.INTEREST
*Tus Start
    $INSERT I_F.EB.CONTRACT.BALANCES ;*Tus End

    GOSUB INIT
    GOSUB CALC.AC.INT.RATE
RETURN


CALC.AC.INT.RATE:
*****************
    LAST.WORK.DAY = R.DATES(EB.DAT.LAST.WORKING.DAY)
    CR.MAR.OPR = ''; CR.MAR.RATE = ''; YG.CR.INT.RATE = ''; CR.BASIC.RTE = ''; CR.LIMIT.AMT = ''
    CR.INT.RATE = ''; YAC.CR.INT = ''; CNT.AC.CR.INT = ''; WORK.BAL = '' ; R.ECB= '';ECB.ERR=''; *Tus Start
    CALL EB.READ.HVT("EB.CONTRACT.BALANCES",ACCT.ID,R.ECB,ECB.ERR)
*WORK.BAL = R.ACCOUNT<AC.WORKING.BALANCE>
    WORK.BAL = R.ECB<ECB.WORKING.BALANCE> ;* Tus End
    CCY.VAL = R.ACCOUNT<AC.CURRENCY>
    YAC.CR.INT = R.ACCOUNT<AC.ACCT.CREDIT.INT>
    CNT.AC.CR.INT = DCOUNT(YAC.CR.INT,@VM)
    AC.CR.INT = R.ACCOUNT<AC.ACCT.CREDIT.INT,CNT.AC.CR.INT>
    COND.GRP = R.ACCOUNT<AC.CONDITION.GROUP>
    IF AC.CR.INT THEN
        ACI.ID = ACCT.ID:'-':AC.CR.INT
        CALL F.READ(FN.ACCOUNT.CREDIT.INT,ACI.ID,R.ACCOUNT.CREDIT.INT,F.ACCOUNT.CREDIT.INT,ACCOUNT.CREDIT.INT.ERR)
        CR.MAR.RATE = R.ACCOUNT.CREDIT.INT<IC.ACI.CR.MARGIN.RATE,1>
        CR.MAR.OPR = R.ACCOUNT.CREDIT.INT<IC.ACI.CR.MARGIN.OPER,1>
        YG.CR.INT.RATE = R.ACCOUNT.CREDIT.INT<IC.ACI.CR.INT.RATE>
        CR.LIMIT.AMT = R.ACCOUNT.CREDIT.INT<IC.ACI.CR.LIMIT.AMT>
        CR.BASIC.RTE = R.ACCOUNT.CREDIT.INT<IC.ACI.CR.BASIC.RATE,1>
        IF YG.CR.INT.RATE THEN
            GOSUB CR.LMT.AMT
            GOSUB CR.INT.CASE
        END
        IF NOT(YG.CR.INT.RATE) AND CR.BASIC.RTE THEN
            GD.ID = CR.BASIC.RTE:CCY.VAL
            GOSUB READ.GROUP.DTE
            BI.ID = CR.BASIC.RTE:CCY.VAL:GRP.CR.DATE
            GOSUB READ.BASIC.INT
            GOSUB BI.INT.CASE
            CALL EB.GET.INTEREST.RATE(YINT.KEY,INT.RATE)
        END
    END ELSE
        GD.ID = COND.GRP:CCY.VAL
        GOSUB READ.GROUP.DTE
        GCI.ID = COND.GRP:CCY.VAL:GRP.CR.DATE
        R.GROUP.CREDIT.INT = ''; GROUP.CREDIT.INT.ERR = ''
        CALL CACHE.READ(FN.GROUP.CREDIT.INT, GCI.ID, R.GROUP.CREDIT.INT, GROUP.CREDIT.INT.ERR)
        CR.MAR.OPR = R.GROUP.CREDIT.INT<IC.GCI.CR.MARGIN.OPER,1>
        CR.MAR.RATE = R.GROUP.CREDIT.INT<IC.GCI.CR.MARGIN.RATE,1>
        CR.INT.RATE = R.GROUP.CREDIT.INT<IC.GCI.CR.INT.RATE,1>
        CR.BAS.RATE = R.GROUP.CREDIT.INT<IC.GCI.CR.BASIC.RATE,1>
        IF CR.INT.RATE THEN
            GOSUB CR.INT.CASE
        END ELSE
            KEY.PART = ''
            KEY.PART = CR.BAS.RATE:CCY.VAL
            ID.LIST = dasBasicInterestIdLikeByDsndId
            THE.ARGS = KEY.PART:'...'
            TABLE.SUFFIX = ''
            CALL DAS ('BASIC.INTEREST', ID.LIST, THE.ARGS, TABLE.SUFFIX)
            BI.ID = ID.LIST<1>
            GOSUB READ.BASIC.INT
            GOSUB BI.INT.CASE

        END
    END
RETURN

CR.LMT.AMT:
***********

    YCNT.INT.RATE = DCOUNT(YG.CR.INT.RATE,@VM)
    IF YCNT.INT.RATE EQ 1 THEN
        CR.INT.RATE = YG.CR.INT.RATE
    END
    YCNT = 0
    LOOP
    UNTIL YCNT EQ YCNT.INT.RATE
        YCNT+=1
        YT.CR.LIMIT.AMT = CR.LIMIT.AMT<1,YCNT>
        IF NOT(YT.CR.LIMIT.AMT) THEN
            CR.INT.RATE = ''
            CR.INT.RATE = YG.CR.INT.RATE<1,YCNT>
            YCNT = YCNT.INT.RATE
            RETURN
        END

        IF WORK.BAL GT YT.CR.LIMIT.AMT THEN
            CONTINUE
        END ELSE
            CR.INT.RATE = ''
            CR.INT.RATE = YG.CR.INT.RATE<1,YCNT>
            YCNT = YCNT.INT.RATE
        END

    REPEAT
RETURN

CR.INT.CASE:
************
    BEGIN CASE
        CASE CR.MAR.OPR EQ 'ADD'
            INT.RATE = CR.INT.RATE + CR.MAR.RATE
        CASE CR.MAR.OPR EQ 'SUBTRACT'
            INT.RATE = CR.INT.RATE - CR.MAR.RATE
        CASE 1
            INT.RATE = CR.INT.RATE
    END CASE
RETURN

BI.INT.CASE:
************
    BEGIN CASE
        CASE CR.MAR.OPR EQ 'ADD'
            INT.RATE = BI.INT.RATE + CR.MAR.RATE
        CASE CR.MAR.OPR EQ 'SUBTRACT'
            INT.RATE = BI.INT.RATE - CR.MAR.RATE
        CASE 1
            INT.RATE = BI.INT.RATE
    END CASE
RETURN

READ.GROUP.DTE:
***************
    R.GROUP.DATE = ''; GROUP.DATE.ERR = ''
    CALL CACHE.READ(FN.GROUP.DATE, GD.ID, R.GROUP.DATE, GROUP.DATE.ERR)
    GRP.CR.DATE = R.GROUP.DATE<AC.GRD.CREDIT.GROUP.DATE>
RETURN

READ.BASIC.INT:
***************
    R.BASIC.INTEREST = ''; BASIC.INTEREST.ERR = ''
    CALL CACHE.READ(FN.BASIC.INTEREST, BI.ID, R.BASIC.INTEREST, BASIC.INTEREST.ERR)
    BI.INT.RATE = R.BASIC.INTEREST<EB.BIN.INTEREST.RATE>
RETURN

INIT:
*****
    FN.BASIC.INTEREST = 'F.BASIC.INTEREST' ; F.BASIC.INTEREST = ''
    FN.GROUP.DATE = 'F.GROUP.DATE' ; F.GROUP.DATE = ''
    FN.PERIODIC.INTEREST = 'F.PERIODIC.INTEREST'  ; F.PERIODIC.INTEREST = ''
    FN.ACCOUNT.CREDIT.INT = 'F.ACCOUNT.CREDIT.INT' ; F.ACCOUNT.CREDIT.INT = ''
    FN.GROUP.CREDIT.INT = 'F.GROUP.CREDIT.INT' ; F.GROUP.CREDIT.INT = ''

    CALL OPF(FN.BASIC.INTEREST,F.BASIC.INTEREST)
    CALL OPF(FN.GROUP.DATE,F.GROUP.DATE)
    CALL OPF(FN.PERIODIC.INTEREST,F.PERIODIC.INTEREST)
    CALL OPF(FN.ACCOUNT.CREDIT.INT,F.ACCOUNT.CREDIT.INT)
    CALL OPF(FN.GROUP.CREDIT.INT,F.GROUP.CREDIT.INT)
RETURN
END
