*-----------------------------------------------------------------------------
* <Rating>-67</Rating>
*-----------------------------------------------------------------------------
  SUBROUTINE REDO.INP.PR.REMAIN.AMT.REPAY
*-----------------------------------------------------------------------------
*Company   Name    :Asociacion Popular de Ahorros y Prestamos
*Developed By      :Marimuthu S
*Program   Name    :REDO.INP.PR.REMAIN.AMT.REPAY
*----------------------------------------------------------------------------------
*DESCRIPTION       : This input routine will be attached to the version and will be triggered
*                    at the stage of reversal. This will reverse the cheque amount in the scheduled
*                    Payment
*
*---------------------------------------------------------------------------------
*Modification Details:
*=====================
*   Date               who             Reference            Description
* 10-SEP-2010       MARIMUTHU S       PACS00078861         Initial Creation
* 17-OCT-2010       MARIMUTHU S       PACS00146454
* 16-JAN-2012       MARIMUTHU S       PACS00170057
*--------------------------------------------------------------------------------
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.FUNDS.TRANSFER
$INSERT I_F.REDO.LOAN.FT.TT.TXN
$INSERT I_F.ACCOUNT
$INSERT I_F.AA.ARRANGEMENT
$INSERT I_F.AA.ARRANGEMENT
$INSERT I_F.AA.ARRANGEMENT.ACTIVITY
$INSERT I_F.REDO.H.AA.DIS.CHG
$INSERT I_F.REDO.APAP.CLEAR.PARAM
$INSERT I_GTS.COMMON

MAIN:

  GOSUB OPENFILES
  GOSUB PROCESS
  GOSUB PGM.END

OPENFILES:

  FN.REDO.LOAN.FT.TT.TXN = 'F.REDO.LOAN.FT.TT.TXN'
  F.REDO.LOAN.FT.TT.TXN = ''
  CALL OPF(FN.REDO.LOAN.FT.TT.TXN,F.REDO.LOAN.FT.TT.TXN)

  FN.ACCOUNT = 'F.ACCOUNT'
  F.ACCOUNT = ''
  CALL OPF(FN.ACCOUNT,F.ACCOUNT)

  FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'
  F.AA.ARRANGEMENT = ''
  CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

  FN.REDO.H.AA.DIS.CHG = 'F.REDO.H.AA.DIS.CHG'
  F.REDO.H.AA.DIS.CHG = ''

  FN.REDO.APAP.CLEAR.PARAM = 'F.REDO.APAP.CLEAR.PARAM'
  F.REDO.APAP.CLEAR.PARAM = ''

  FN.REDO.TEMP.WORK.TXN = 'F.REDO.TEMP.WORK.TXN'
  F.REDO.TEMP.WORK.TXN = ''
  CALL OPF(FN.REDO.TEMP.WORK.TXN,F.REDO.TEMP.WORK.TXN)

  RETURN

PROCESS:


  NEW.ID.REF = ID.NEW

  Y.FUN = V$FUNCTION

  IF V$FUNCTION NE 'R' THEN
    RETURN
  END

  Y.ID = ID.NEW

  CALL F.READ(FN.REDO.TEMP.WORK.TXN,Y.ID,R.TXN.ID,F.REDO.TEMP.WORK.TXN,TM.ERR)

  CK.ID = R.TXN.ID<1>
  CALL F.READ(FN.REDO.LOAN.FT.TT.TXN,CK.ID,R.REDO.LOAN.FT.TT.TXN,F.REDO.LOAN.FT.TT.TXN,FT.TT.ERR)
  Y.TOT.AMT = R.REDO.LOAN.FT.TT.TXN<LN.FT.TT.TOTAL.AMOUNT>
  Y.CHQ = R.REDO.LOAN.FT.TT.TXN<LN.FT.TT.CHEQUE.NO>
  Y.CHQ = CHANGE(Y.CHQ,SM,VM)
  Y.CNT = DCOUNT(Y.CHQ,VM)
  FLG = ''

  LOOP
  WHILE Y.CNT GT 0 DO
    FLG += 1
    Y.CHQ.STATUS = R.REDO.LOAN.FT.TT.TXN<LN.FT.TT.CHEQUE.STATUS,FLG>
    IF Y.CHQ.STATUS EQ 'RETURN' THEN
      Y.RES.AMT = Y.RES.AMT + R.REDO.LOAN.FT.TT.TXN<LN.FT.TT.REQ.TXN.AMT,FLG>
* R.REDO.LOAN.FT.TT.TXN<LN.FT.TT.CHEQUE.STATUS> = 'PROCESSED'
    END ELSE
      Y.PROCESS = 'SET'
    END
    Y.CNT -= 1
  REPEAT

  CALL CACHE.READ(FN.REDO.APAP.CLEAR.PARAM,'SYSTEM',R.REDO.APAP.CLEAR.PARAM,CLEAR.ERR)
  Y.AA.WASH.AC = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.AA.WASHTHROUGH>

  IF NOT(Y.AA.WASH.AC) THEN
    RETURN
  END


  Y.FIN.AMT = Y.TOT.AMT - Y.RES.AMT
  IF Y.FIN.AMT EQ 0 THEN
    Y.ACC = R.NEW(FT.CREDIT.ACCT.NO)
    CALL F.READ(FN.ACCOUNT,Y.ACC,R.ACCOUNT,F.ACCOUNT,ACC.ER)
    Y.ARR.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
    GOSUB MAKE.CHARGE
    GOSUB UPDATE.3.RETUN.CHQ
    CALL REDO.UPD.FUL.CHQ.REV(CK.ID)
    RETURN
  END

  R.FT<FT.TRANSACTION.TYPE> = R.NEW(FT.TRANSACTION.TYPE)
  R.FT<FT.CREDIT.CURRENCY> = LCCY
  R.FT<FT.CREDIT.ACCT.NO> = R.NEW(FT.CREDIT.ACCT.NO)
  Y.ACC = R.NEW(FT.CREDIT.ACCT.NO)
  CALL F.READ(FN.ACCOUNT,Y.ACC,R.ACCOUNT,F.ACCOUNT,ACC.ER)
  Y.CUS = R.ACCOUNT<AC.CUSTOMER>
  Y.ARR.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
  R.FT<FT.DEBIT.CURRENCY> = LCCY
  R.FT<FT.DEBIT.ACCT.NO> = Y.AA.WASH.AC
  R.FT<FT.DEBIT.AMOUNT> = Y.FIN.AMT
  R.FT<FT.ORDERING.CUST> = Y.CUS
  R.FT<FT.DEBIT.VALUE.DATE> = R.NEW(FT.DEBIT.VALUE.DATE)
  R.FT<FT.CREDIT.VALUE.DATE> = R.NEW(FT.CREDIT.VALUE.DATE)
  R.FT<FT.CREDIT.THEIR.REF> = CK.ID


  APP.NAME='FUNDS.TRANSFER'
  OFSFUNCTION='I'
  PROCESS='PROCESS'
  OFS.SOURCE.ID='FT.RET.CHQ'
  OFSVERSION='FUNDS.TRANSFER,RET.CHQ'
  GTSMODE=''
  NO.OF.AUTH='0'
  TRANSACTION.ID = ''
  OFSSTRING=''
  OFS.ERR = ''

  CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.FT,OFSSTR)
  CALL OFS.POST.MESSAGE(OFSSTR,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)

* PACS00146454 -S
  GOSUB MAKE.CHARGE
  GOSUB UPDATE.3.RETUN.CHQ
* PACS00146454 -E

  RETURN

MAKE.CHARGE:

* PACS00146454 -S
  CALL F.READ(FN.AA.ARRANGEMENT,Y.ARR.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARR.ERR)
  Y.PRODUCT.ID = R.AA.ARRANGEMENT<AA.ARR.PRODUCT>

  CALL CACHE.READ(FN.REDO.H.AA.DIS.CHG,'SYSTEM',R.REDO.H.AA.DIS.CHG,CHG.ERR)
  Y.RET.CHQ.PROP = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.RET.CHQ.CHARGE>

  IF Y.RET.CHQ.PROP THEN
    APP.NAME = 'AA.ARRANGEMENT.ACTIVITY'
    OFS.FUNCTION='I'
    PROCESS='PROCESS'
    OFS.SOURCE.ID='REDO.CHQ.ISSUE'
    OFSVERSION='AA.ARRANGEMENT.ACTIVITY,'
    GTSMODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    R.APP.RECORD=''
    OFS.STRING=''
    R.APP.RECORD<AA.ARR.ACT.ARRANGEMENT> = Y.ARR.ID
    R.APP.RECORD<AA.ARR.ACT.ACTIVITY> = 'LENDING-CHANGE-':Y.RET.CHQ.PROP
    R.APP.RECORD<AA.ARR.ACT.EFFECTIVE.DATE> = TODAY
    R.APP.RECORD<AA.ARR.ACT.PRODUCT> = Y.PRODUCT.ID
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.MESSAGE)

    OFS.MSG.ID = ''
    OPTIONS = ''
    OFS.ERR = ''

    CALL OFS.POST.MESSAGE(OFS.MESSAGE,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)
  END

  RETURN
* PACS00146454 -E

UPDATE.3.RETUN.CHQ:

* PACS00146454 -S
  CALL REDO.UPDATE.CHQ.RETURN.B10(Y.ARR.ID,CK.ID)

  RETURN

* PACS00146454 -E

PGM.END:


END
