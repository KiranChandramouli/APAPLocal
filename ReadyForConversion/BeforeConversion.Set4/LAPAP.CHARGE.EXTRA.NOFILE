*-----------------------------------------------------------------------------
* <Rating>-72</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE LAPAP.CHARGE.EXTRA.NOFILE(Y.FINAL)
    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_ENQUIRY.COMMON
    $INSERT T24.BP I_F.FUNDS.TRANSFER
    $INSERT T24.BP I_F.STMT.ENTRY

    GOSUB LOAD
    GOSUB DO.LOCATE
    GOSUB ACCOUNT.PORCESS
    GOSUB DELETE.DUP
    RETURN

LOAD:
    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER';
    F.FUNDS.TRANSFER = '';
    CALL OPF(FN.FUNDS.TRANSFER, F.FUNDS.TRANSFER)

    FN.FUNDS.TRANSFER$HIS = 'F.FUNDS.TRANSFER$HIS';
    F.FUNDS.TRANSFER$HIS = '';
    CALL OPF(FN.FUNDS.TRANSFER$HIS, F.FUNDS.TRANSFER$HIS)

    FN.STMT.ENTRY = 'F.STMT.ENTRY';
    F.STMT.ENTRY = '';
    CALL OPF(FN.STMT.ENTRY, F.STMT.ENTRY)

    RETURN

DO.LOCATE:

    LOCATE "Y.TXN.REF" IN D.FIELDS<1> SETTING TXN.POS THEN
        Y.TXN.ID = D.RANGE.AND.VALUE<TXN.POS>
    END

    LOCATE "Y.ACCOUNT.ID" IN D.FIELDS<1> SETTING ACC.POS THEN
        Y.ACC.ID = D.RANGE.AND.VALUE<ACC.POS>
    END

    LOCATE "START.DATE" IN D.FIELDS<2> SETTING ACC.POS THEN
        Y.START.DATE = D.RANGE.AND.VALUE<ACC.POS>
    END

    LOCATE "END.DATE" IN D.FIELDS<3> SETTING ACC.POS THEN
        Y.END.DATE = D.RANGE.AND.VALUE<ACC.POS>
    END
    RETURN

ACCOUNT.PORCESS:

    IF NOT(Y.TXN.ID) THEN
        NO.OF.REC = ''; SEL.ERR = ''; Y.COUNT.ACT = ''; ACTIVITY.POS = '';
        SEL.CMD = "SELECT ":FN.STMT.ENTRY:" WITH ACCOUNT.NUMBER EQ ":Y.ACC.ID:" AND BOOKING.DATE GE ":Y.START.DATE:" AND BOOKING.DATE LE ":Y.END.DATE;
        CALL EB.READLIST(SEL.CMD, SEL.LIST, "", NO.OF.REC, SEL.ERR);

        LOOP
            REMOVE Y.STMT.ID FROM SEL.LIST SETTING STMT.POS
        WHILE Y.STMT.ID DO

            R.STMT= ''; STMT.ERR = ''
            CALL F.READ(FN.STMT.ENTRY,Y.STMT.ID,R.STMT,F.STMT.ENTRY,STMT.ERR)
            Y.TRANS.REF = R.STMT<AC.STE.TRANS.REFERENCE>

            Y.INPUT = R.STMT<AC.STE.INPUTTER>
            Y.TXN.ID1 = FIELD(Y.INPUT,'_',9)

            R.FT= ''; FT.ERR = ''
            CALL F.READ(FN.FUNDS.TRANSFER,Y.TXN.ID1,R.FT,F.FUNDS.TRANSFER,FT.ERR)
            IF NOT(R.FT) THEN
                Y.TXN.ID1 = Y.TXN.ID1:";1"
                R.FT = ''; FT.ERR = ''
                CALL F.READ(FN.FUNDS.TRANSFER$HIS,Y.TXN.ID1,R.FT,F.FUNDS.TRANSFER$HIS,FT.ERR)
            END
            Y.DEBIT.ACC = R.FT<FT.DEBIT.ACCT.NO>

            NO.OF.REC = ''; SEL.ERR = ''; Y.COUNT.ACT = ''; ACTIVITY.POS = '';
            SEL.CMD = "SELECT ":FN.STMT.ENTRY:" WITH ACCOUNT.NUMBER EQ ":Y.DEBIT.ACC:" AND BOOKING.DATE GE ":Y.START.DATE:" AND BOOKING.DATE LE ":Y.END.DATE:" AND TRANSACTION.CODE EQ '77'";
            CALL EB.READLIST(SEL.CMD, SEL.LIST1, "", NO.OF.REC, SEL.ERR);
            GOSUB PROCESS
        REPEAT
    END ELSE
        R.FT1= ''; FT.ERR1 = ''
        CALL F.READ(FN.FUNDS.TRANSFER,Y.TXN.ID,R.FT1,F.FUNDS.TRANSFER,FT.ERR1)
        IF NOT(R.FT1) THEN
            Y.TXN.ID = Y.TXN.ID:";1"
            R.FT = ''; FT.ERR = ''
            CALL F.READ(FN.FUNDS.TRANSFER$HIS,Y.TXN.ID,R.FT1,F.FUNDS.TRANSFER$HIS,FT.ERR1)
        END
        Y.TRANS.TYPE = R.FT1<FT.TRANSACTION.TYPE>
        IF Y.TRANS.TYPE EQ 'AC36' THEN
            Y.FINAL.TXN = Y.TXN.ID
            Y.DEBIT.ACC = R.FT1<FT.DEBIT.ACCT.NO>
            Y.CREDIT.ACC = R.FT1<FT.CREDIT.ACCT.NO>
            Y.CURRENCY = R.FT1<FT.CREDIT.CURRENCY>
            Y.CREDIT.AMT = R.FT1<FT.CREDIT.AMOUNT>
            Y.DATE = R.FT1<FT.PROCESSING.DATE>
            GOSUB WRITE.ARR
        END
    END
    RETURN

PROCESS:
    LOOP
        REMOVE Y.CHARG.ID FROM SEL.LIST1 SETTING STMT1.POS
    WHILE Y.CHARG.ID DO

        R.STMT1= ''; STMT.ERR1 = ''
        CALL F.READ(FN.STMT.ENTRY,Y.CHARG.ID,R.STMT1,F.STMT.ENTRY,STMT.ERR1)
        Y.FT.CHAR = R.STMT1<AC.STE.TRANS.REFERENCE>

        R.FT1= ''; FT.ERR1 = ''
        CALL F.READ(FN.FUNDS.TRANSFER,Y.FT.CHAR,R.FT1,F.FUNDS.TRANSFER,FT.ERR1)
        IF NOT(R.FT1) THEN
            Y.FT.CHAR = Y.FT.CHAR:";1"
            R.FT1 = ''; FT.ERR1 = ''
            CALL F.READ(FN.FUNDS.TRANSFER$HIS,Y.FT.CHAR,R.FT1,F.FUNDS.TRANSFER$HIS,FT.ERR1)
        END

        Y.CHAR.ACC.POS = '';
        CALL GET.LOC.REF("FUNDS.TRANSFER","L.CHAR.ACC",Y.CHAR.ACC.POS)
        Y.CHAR.ACC =  R.FT1<FT.LOCAL.REF,Y.CHAR.ACC.POS>

        Y.TRANS.TYPE = R.FT1<FT.TRANSACTION.TYPE>
        IF Y.CHAR.ACC EQ Y.ACC.ID THEN
            IF Y.TRANS.TYPE EQ 'AC36' THEN
                Y.FINAL.TXN = Y.FT.CHAR
                Y.DEBIT.ACC = R.FT1<FT.DEBIT.ACCT.NO>
                Y.CREDIT.ACC = R.FT1<FT.CREDIT.ACCT.NO>
                Y.CURRENCY = R.FT1<FT.CREDIT.CURRENCY>
                Y.CREDIT.AMT = R.FT1<FT.CREDIT.AMOUNT>
                Y.DATE = R.FT1<FT.PROCESSING.DATE>
                GOSUB WRITE.ARR
            END
        END
    REPEAT
    RETURN

WRITE.ARR:
    Y.FINAL<-1> = Y.FINAL.TXN: '*' :Y.TRANS.TYPE: '*' :Y.DEBIT.ACC: '*' :Y.CREDIT.ACC: '*' :Y.CURRENCY: '*' :Y.CREDIT.AMT: '*' :Y.DATE
    RETURN

DELETE.DUP:
    Y.QTY.ELEMENTS = DCOUNT(Y.FINAL,@FM)
    Y.FINAL.ARR.CP = ''

    FOR A = 1 TO Y.QTY.ELEMENTS STEP 1
        Y.CURR.VALUE = Y.FINAL<A>
        FINDSTR Y.CURR.VALUE IN Y.FINAL.ARR.CP SETTING Ap, Vp ELSE
            Y.FINAL.ARR.CP<-1> = Y.CURR.VALUE
        END

    NEXT A
    Y.FINAL = ''
    Y.FINAL = Y.FINAL.ARR.CP

    RETURN
END
