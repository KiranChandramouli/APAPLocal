*-----------------------------------------------------------------------------
* <Rating>-31</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE LAPAP.MAS.REDON.RT.LOAD
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_GTS.COMMON
    $INSERT T24.BP I_System
    $INSERT T24.BP I_F.DATES
    $INCLUDE BP I_F.ST.LAPAP.CRC.ROUNDUP.DET
    $INCLUDE BP I_F.ST.LAPAP.CRC.ROUNDUP
    $INCLUDE BP I_F.LAPAP.CRC.ROUNDUP.PARA
    $INSERT LAPAP.BP I_LAPAP.MAS.REDON.RT.COMMON

    GOSUB DO.INITIALIZE
    GOSUB GET.LRT
    GOSUB GET.PENDING.REDON
    GOSUB DO.READ.PARAM
    RETURN

DO.INITIALIZE:
    FN.CRC.ROUNDUP = 'FBNK.ST.LAPAP.CRC.ROUNDUP'
    F.CRC.ROUNDUP = ''
    CALL OPF(FN.CRC.ROUNDUP,F.CRC.ROUNDUP)

    FN.CRC.ROUNDUP.DET = 'FBNK.ST.LAPAP.CRC.ROUNDUP.DET'
    F.CRC.ROUNDUP.DET = ''
    CALL OPF(FN.CRC.ROUNDUP.DET,F.CRC.ROUNDUP.DET)

    FN.CRC.ROUNDUP.PARA = 'F.ST.LAPAP.CRC.ROUNDUP.PARA'
    F.CRC.ROUNDUP.PARA = ''
    CALL OPF(FN.CRC.ROUNDUP.PARA,F.CRC.ROUNDUP.PARA)

    RETURN

GET.LRT:
    APPL.NAME.ARR = "FUNDS.TRANSFER"
    FLD.NAME.ARR = "L.COMMENTS" : @VM : "L.PAYROLL.ID" : @VM : "L.FTST.ACH.PART" : @VM : "L.ROUNDUP.DET"
    CALL MULTI.GET.LOC.REF(APPL.NAME.ARR,FLD.NAME.ARR,FLD.POS.ARR)
    Y.L.COMMENTS.POS = FLD.POS.ARR<1,1>
    Y.L.PAYROLL.ID.POS = FLD.POS.ARR<1,2>
    Y.L.FTST.ACH.PART.POS  = FLD.POS.ARR<1,3>
    Y.L.ROUNDUP.DET.POS = FLD.POS.ARR<1,4>

    CALL OCOMO('Y.L.COMMENTS.POS=':Y.L.COMMENTS.POS : ", Y.L.ROUNDUP.DET.POS=":Y.L.ROUNDUP.DET.POS)
    RETURN

GET.PENDING.REDON:
    SEL.ERR = ''; SEL.LIST = ''; SEL.REC = ''; SEL.CMD = ''
    SEL.CMD = "SELECT " : FN.CRC.ROUNDUP : " WITH BATCH.STATUS EQ PENDING"

    CALL OCOMO("SEL.CMD : " : SEL.CMD)

    CALL EB.READLIST(SEL.CMD,SEL.REC,'',SEL.LIST,SEL.ERR)

    Y.BATCH.ID.L = ''
    Y.BATCH.ARR = ''
    LOOP

        REMOVE Y.REDON.ID FROM SEL.REC SETTING TAG

    WHILE Y.REDON.ID:TAG
        CALL OCOMO("REDONDEO BATCH TO PROCESS = " : Y.REDON.ID)
        Y.BATCH.ID.L := Y.REDON.ID : ' '
        Y.BATCH.ARR<-1> = Y.REDON.ID
    REPEAT


    RETURN

DO.READ.PARAM:
    CALL F.READ(FN.CRC.ROUNDUP.PARA,"SYSTEM",R.CRC.ROUNDUP.PARA,F.CRC.ROUNDUP.PARA,ERR.CRC.ROUNDUP.PARA)
    IF R.CRC.ROUNDUP.PARA THEN
        Y.TRANSACTION.TYPE = R.CRC.ROUNDUP.PARA<ST.LAP25.TRANSACTION.TYPE>
        Y.DR.ACCT.NO = R.CRC.ROUNDUP.PARA<ST.LAP25.DEBIT.ACCT.NO>
    END ELSE
        CALL OCOMO("ERROR, could not get SYSTEM parameters of " : FN.CRC.ROUNDUP.PARA)
    END
    RETURN

END

