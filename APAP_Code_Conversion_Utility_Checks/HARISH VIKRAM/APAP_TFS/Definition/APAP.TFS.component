component APAP.TFS
# Component Isolation Definition
metamodelVersion 1.6
# -------------------------------------------------

public method convTfsParameterG14 (
)
{
    jBC: CONV.TFS.PARAMETER.G14
}



public method getLocRefUpdate (
    INOUT ofsBody string
)
{
    jBC: GET.LOC.REF.UPDATE
}



public method in2tfsAc (
    INOUT n1 string,
    INOUT t1 string
) 
{
    jBC: IN2TFS.AC
}



public method t24FsCheckFields (
)
{
    jBC: T24.FS.CHECK.FIELDS
}



public method t24FsCheckRecord (
)
{
    jBC: T24.FS.CHECK.RECORD
}



public method t24FsCrossval (
)
{
    jBC: T24.FS.CROSSVAL
}



public method t24FsFieldDefinitions (
)
{
    jBC: T24.FS.FIELD.DEFINITIONS
}



public method t24FsInitialise (
)
{
    jBC: T24.FS.INITIALISE
}



public method t24FsInterface (
    INOUT ofsAction string
)
{
    jBC: T24.FS.INTERFACE
}



public method t24FsInterfaceDc (
    INOUT mvNo string,
    INOUT ofsBody string
)
{
    jBC: T24.FS.INTERFACE.DC
}



public method t24FsInterfaceFt (
    INOUT mvNo string,
    INOUT ofsBody string
)
{
    jBC: T24.FS.INTERFACE.FT
}



public method t24FsInterfaceTt (
    INOUT mvNo string,
    INOUT ofsBody string
)
{
    jBC: T24.FS.INTERFACE.TT
}



public method t24FsValidate (
)
{
    jBC: T24.FS.VALIDATE
}



public method t24FundServices (
)
{
    jBC: T24.FUND.SERVICES
}



public method vTfsFtPopulateStoDetails (
)
{
    jBC: V.TFS.FT.POPULATE.STO.DETAILS
}



public method vTfsReplicate (
)
{
    jBC: V.TFS.REPLICATE
}



public method vTfsRestrictAmendment (
)
{
    jBC: V.TFS.RESTRICT.AMENDMENT
}



public method vTfsStoTidyupBeneficiary (
)
{
    jBC: V.TFS.STO.TIDYUP.BENEFICIARY
}



public method vTfsTtImportDenom (
)
{
    jBC: V.TFS.TT.IMPORT.DENOM
}



public method vTfsTtImportExposure (
)
{
    jBC: V.TFS.TT.IMPORT.EXPOSURE
}



public method vUsRegccRestrictVerAutNo (
)
{
    jBC: V.US.REGCC.RESTRICT.VER.AUT.NO
}




public method tfsAnalyseOfsMsg (
    INOUT ofsMsg string,
    INOUT retMsg string,
    INOUT ofsOverrides string,
    INOUT ulCoCode string
)
{
    jBC: TFS.ANALYSE.OFS.MSG
}



public method tfsBuildDenom (
)
{
    jBC: TFS.BUILD.DENOM
}



public method tfsChkOverride (
)
{
    jBC: TFS.CHK.OVERRIDE
}



public method tfsExpSchFieldDefinitions (
)
{
    jBC: TFS.EXP.SCH.FIELD.DEFINITIONS
}



public method tfsExposureSchedule (
)
{
    jBC: TFS.EXPOSURE.SCHEDULE
}



public method tfsFacilitateMixWd (
)
{
    jBC: TFS.FACILITATE.MIX.WD
}



public method tfsGetOpenTill (
    INOUT tillId string
)
{
    jBC: TFS.GET.OPEN.TILL
}



public method tfsImportUnderlying (
    INOUT defaultedField string,
    INOUT defaultedEnri string
)
{
    jBC: TFS.IMPORT.UNDERLYING
}



public method tfsLoadTransaction (
    INOUT tfsTxn string,
    INOUT rTfsTxn string,
    INOUT futArg1 string,
    INOUT futArg2 string,
    INOUT futArg3 string
)
{
    jBC: TFS.LOAD.TRANSACTION
}



public method tfsModifyDenom (
)
{
    jBC: TFS.MODIFY.DENOM
}



public method tfsParCheckFields (
)
{
    jBC: TFS.PAR.CHECK.FIELDS
}



public method tfsParCrossval (
)
{
    jBC: TFS.PAR.CROSSVAL
}



public method tfsParFieldDefinitions (
)
{
    jBC: TFS.PAR.FIELD.DEFINITIONS
}



public method tfsParameter (
)
{
    jBC: TFS.PARAMETER
}



public method tfsParseStmtNos (
    INOUT ulStmtNos string,
    INOUT resvArg1 string,
    INOUT resvArg2 string,
    INOUT resvArg3 string
)
{
    jBC: TFS.PARSE.STMT.NOS
}



public method tfsTransaction (
)
{
    jBC: TFS.TRANSACTION
}



public method tfsTxnCheckFields (
)
{
    jBC: TFS.TXN.CHECK.FIELDS
}



public method tfsTxnCrossval (
)
{
    jBC: TFS.TXN.CROSSVAL
}



public method tfsTxnFieldDefinitions (
)
{
    jBC: TFS.TXN.FIELD.DEFINITIONS
}



public method tfsUlImportConcat (
)
{
    jBC: TFS.UL.IMPORT.CONCAT
}



public method vDefaultRate (
)
{
    jBC: V.DEFAULT.RATE
}

