* @ValidationCode : MjotMTkxNjc1Mzk4NjpVVEYtODoxNzAyNjI2ODA0MTkyOkFkbWluOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 15 Dec 2023 13:23:24
* @ValidationInfo : Encoding          : UTF-8
* @ValidationInfo : User Name         : Admin
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOEB
*---------------------------------------------------------------------------------------
*MODIFICATION HISTORY:
*DATE          WHO                 REFERENCE               DESCRIPTION
*13-07-2023    CONVERSION TOOL     R22 AUTO CONVERSION     = TO EQ, PERIODIC.RENT- TO -=
*13-07-2023    VICTORIA S          R22 MANUAL CONVERSION   INSERT FILE ADDED
*15-12-2023    Narmadha V          Manual R22 Conversion   Call routine format Modified,F.READ changed.
*----------------------------------------------------------------------------------------
SUBROUTINE MB.SDB.AMORT.CHARGE(SDB.ID)

*    $INCLUDE GLOBUS.BP I_COMMON        ;*/ TUS START
*    $INCLUDE GLOBUS.BP I_EQUATE
*    $INCLUDE GLOBUS.BP I_F.DATES
*    $INCLUDE GLOBUS.BP I_F.ACCOUNT
*    $INCLUDE GLOBUS.BP I_F.STANDING.ORDER
*    $INCLUDE CAPLATFORM.BP I_F.MB.SDB.PARAM
*    $INCLUDE CAPLATFORM.BP I_F.MB.SDB.TYPE
*    $INCLUDE CAPLATFORM.BP I_F.MB.SDB.CHARGES
*    $INCLUDE CAPLATFORM.BP I_F.MB.SDB.STATUS
*    $INCLUDE CAPLATFORM.BP I_MB.SDB.AMORT.CHARGE.COMMON

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_F.ACCOUNT
* $INSERT I_F.OFS.SOURCE ;*R22 MANUAL CONVERSION
    $INSERT I_F.STANDING.ORDER
    $INSERT I_F.MB.SDB.PARAM
    $INSERT I_F.MB.SDB.TYPE
    $INSERT I_F.MB.SDB.CHARGES
    $INSERT I_F.MB.SDB.STATUS
    $INSERT I_MB.SDB.AMORT.CHARGE.COMMON        ;*/ TUS END
    $USING ST.CompanyCreation
    $USING EB.Interface


    IF SDB.ID THEN
        MB.SDB.STATUS.ID = SDB.ID
        SDB.COMPANY = FIELD(SDB.ID,'.',1,1)

        SDB.NO = FIELD(SDB.ID,'.',2,2)

        STATUS.YERR = ''; R.MB.SDB.STATUS = ''
        CALL F.READ(FN.MB.SDB.STATUS, MB.SDB.STATUS.ID, R.MB.SDB.STATUS, FP.MB.SDB.STATUS, STATUS.YERR)
        IF NOT(STATUS.YERR) THEN

            UPDATE.SDB.STATUS = ''

            GOSUB READ.SDB.PARAM

            GOSUB PROCESS.SDB.AMT.FREQ.CHANGES

            IF R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON> GE TODAY AND R.MB.SDB.STATUS<SDB.STA.UNAMORT.AMT> GT 0 AND TODAY GT R.MB.SDB.STATUS<SDB.STA.LAST.RENEWAL.DATE> THEN

                AMOUNT.TO.AMORT = 0
                AMORTISED.AMT = R.MB.SDB.STATUS<SDB.STA.AMORT.AMT>
                UNAMORTISED.AMT = R.MB.SDB.STATUS<SDB.STA.UNAMORT.AMT>
                RENEW.DATE = R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON>
                OFFER.EXPIRY.DATE = R.MB.SDB.STATUS<SDB.STA.OFFER.EXPIRY.DATE>
                TOTAL.RENT = R.MB.SDB.STATUS<SDB.STA.RENT.AMT>

                ONE.DAY = 0
                START.DATE = R.MB.SDB.STATUS<SDB.STA.LAST.RENEWAL.DATE>
                IF START.DATE EQ '' THEN
                    ONE.DAY = 1
                    START.DATE = R.MB.SDB.STATUS<SDB.STA.OPENING.DATE>
                END

                TOT.DAYS = 'C'
                CALL CDD("",START.DATE, RENEW.DATE, TOT.DAYS)
                TOT.DAYS += ONE.DAY

                Y.END.DATE = R.DATES(EB.DAT.NEXT.WORKING.DAY)
                CALL CDT("", Y.END.DATE, "-1C")

                NO.DAYS = 'C'
                CALL CDD("",START.DATE, Y.END.DATE, NO.DAYS)
                NO.DAYS += 1

                IF RENEW.DATE LE Y.END.DATE THEN
                    AMOUNT.TO.AMORT = TOTAL.RENT
                END ELSE
                    AMOUNT.TO.AMORT = (TOTAL.RENT / TOT.DAYS) * NO.DAYS
                    CALL EB.ROUND.AMOUNT(LCCY, AMOUNT.TO.AMORT, '2', '')
                END

                AMOUNT.TO.POST = AMOUNT.TO.AMORT - AMORTISED.AMT

                IF AMOUNT.TO.POST GT 0 THEN
                    UPDATE.SDB.STATUS = 'YES'
                    R.MB.SDB.STATUS<SDB.STA.AMORT.AMT> = AMOUNT.TO.AMORT
                    R.MB.SDB.STATUS<SDB.STA.UNAMORT.AMT> = TOTAL.RENT - AMOUNT.TO.AMORT
                    IF RENT.ACCT AND RENT.PL AND SDB.OFS.SOURCE THEN
                        GOSUB AMORTISE.CHARGES
                    END
                END
            END
            IF UPDATE.SDB.STATUS EQ 'YES' THEN ;*R22 AUTO CONVERSION
                CALL F.WRITE(FN.MB.SDB.STATUS, MB.SDB.STATUS.ID, R.MB.SDB.STATUS)
            END

        END
    END

RETURN

********************************************************************************************
AMORTISE.CHARGES:

    FT.OFS.STR = ''
    FT.OFS.HEADER = 'FUNDS.TRANSFER,MB.SDB.TRF,//':SDB.COMPANY:','
    FT.OFS.STR = ',TRANSACTION.TYPE::="AC"'
    FT.OFS.STR := ',CREDIT.ACCT.NO::=':DQUOTE(RENT.PL)
    FT.OFS.STR := ',DEBIT.THEIR.REF::=':DQUOTE(SDB.NO)
    FT.OFS.STR := ',CREDIT.THEIR.REF::=':DQUOTE(SDB.NO)
    FT.OFS.STR := ',DEBIT.CURRENCY::=':DQUOTE(RENT.CCY)
    FT.OFS.STR := ',DEBIT.ACCT.NO::=':DQUOTE(RENT.ACCT)
    FT.OFS.STR := ',DEBIT.AMOUNT::=':DQUOTE(AMOUNT.TO.POST)
    FT.OFS.STR := ',ORDERING.CUST::="999999"'
    SDB.OFS.STR = FT.OFS.HEADER:FT.OFS.STR

    GOSUB CALL.OGM
    IF OFS.ERR.MSG THEN
        TEXT = OFS.ERR.MSG
        CALL FATAL.ERROR('MB.SDB.AMORT.CHARGE')
    END

RETURN

********************************************************************************************
CALL.OGM:

    SV.RUNNING.UNDER.BATCH = RUNNING.UNDER.BATCH
    RUNNING.UNDER.BATCH = ''
    SV.COMPANY = ID.COMPANY
*CALL LOAD.COMPANY(SDB.COMPANY)
    ST.CompanyCreation.LoadCompany(SDB.COMPANY) ;*Manual R22 Conversion - Call routine Modified
   
* PACS00329153 -S


*CALL F.READ (FN.OFS.SOURCE,SDB.OFS.SOURCE,R.OFS.SOURCE,F.OFS.SOURCE,OFS.SOURCE.ERR)
    R.OFS.SOURCE = EB.Interface.OfsSource.Read(SDB.OFS.SOURCE, OFS.SOURCE.ERR) ;*Manual R22 Conversion - F.READ changed.
* GENERIC.USER = R.OFS.SOURCE<OFS.SRC.GENERIC.USER>;*R22 MANUAL CONVERSION
    GENERIC.USER = R.OFS.SOURCE<EB.Interface.OfsSource.OfsSrcGenericUser> ;*Manual R22 Conversion - Call Routine format Modified
    OFS$SOURCE.REC = R.OFS.SOURCE
    OFS$SOURCE.ID = SDB.OFS.SOURCE
*CALL OFS.PROCESS.MANAGER(SDB.OFS.STR,Y.OFS.RES.MSG)
    EB.Interface.OfsProcessManager(SDB.OFS.STR,Y.OFS.RES.MSG) ;*Manual R22 Conversion - Call Routine format Modified
    ID.COMPANY = SV.COMPANY
*CALL LOAD.COMPANY(ID.COMPANY)
    ST.CompanyCreation.LoadCompany(ID.COMPANY) ;*Manual R22 Conversion - Call routine format Modified
    RUNNING.UNDER.BATCH = SV.RUNNING.UNDER.BATCH
    OFS.TXN.ID = ''; OFS.ERROR = ''; OFS.ERR.MSG = ''
    OFS.TXN.ID = FIELD(Y.OFS.RES.MSG,'/',1)
    OFS.ERROR = FIELD(Y.OFS.RES.MSG,'/',3,1)
    IF OFS.ERROR EQ '-1' THEN ;*R22 AUTO CONVERSION
        OFS.ERR.MSG = FIELD(Y.OFS.RES.MSG,'/',4)[4,LEN(Y.OFS.RES.MSG)]
    END

* CALL OFS.GLOBUS.MANAGER(SDB.OFS.SOURCE, SDB.OFS.STR)
* OFS.MSG.ID = '' ; OFS.OPTION = ''
* CALL OFS.POST.MESSAGE(SDB.OFS.STR, OFS.MSG.ID, SDB.OFS.SOURCE, OFS.OPTION)
* ID.COMPANY = SV.COMPANY
* CALL LOAD.COMPANY(ID.COMPANY)
* RUNNING.UNDER.BATCH = SV.RUNNING.UNDER.BATCH
* OFS.TXN.ID = ''; OFS.ERROR = ''; OFS.ERR.MSG = ''
* OFS.TXN.ID = FIELD(SDB.OFS.STR,'/',1)
* OFS.ERROR = FIELD(SDB.OFS.STR,'/',3,1)
* IF OFS.ERROR = '-1' THEN
* OFS.ERR.MSG = FIELD(SDB.OFS.STR,'/',4)[4,LEN(SDB.OFS.STR)]
* END

* PACS00329153 -E

RETURN

********************************************************************************************
PROCESS.SDB.AMT.FREQ.CHANGES:

    SV.COMI = COMI
    LAST.RENEWAL.DATE = R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON>
    LAST.RENEW.FREQUENCY = R.MB.SDB.STATUS<SDB.STA.RENEW.FREQUENCY>
    IF LAST.RENEWAL.DATE GT TODAY AND LAST.RENEWAL.DATE LE R.DATES(EB.DAT.NEXT.WORKING.DAY) THEN
        IF NOT(RENEW.FREQUENCY) AND ((FREQ.TYPE EQ 'YEARLY' AND LAST.RENEW.FREQUENCY[9,3] NE 'M12') OR  (FREQ.TYPE EQ 'MONTHLY' AND LAST.RENEW.FREQUENCY[9,3] NE 'M01')) THEN
            IF FREQ.TYPE EQ 'YEARLY' THEN
                COMI = LAST.RENEWAL.DATE:'M12':LAST.RENEWAL.DATE[7,2]
            END ELSE
                COMI = LAST.RENEWAL.DATE:'M01':LAST.RENEWAL.DATE[7,2]
            END
            CALL CFQ
            RENEW.FREQUENCY = COMI
        END

        IF NOT(RENEW.FREQUENCY) THEN
            COMI = LAST.RENEW.FREQUENCY
            CALL CFQ
            RENEW.FREQUENCY = COMI
        END


        IF LAST.RENEW.FREQUENCY NE RENEW.FREQUENCY THEN
            UPDATE.SDB.STATUS = 'YES'
            R.MB.SDB.STATUS<SDB.STA.RENEW.FREQUENCY> = RENEW.FREQUENCY
        END

        GOSUB GET.CUST.GROUP

        CUST.DISC.AMT = 0
        IF DISCOUNT.FLAT OR DISCOUNT.PERCENT THEN
            IF DISCOUNT.PERCENT THEN
                CUST.DISC.AMT = PERIODIC.RENT * (DISCOUNT.PERCENT/100)
                CALL EB.ROUND.AMOUNT(LCCY, CUST.DISC.AMT, '2', '')
                PERIODIC.RENT -= CUST.DISC.AMT ;*R22 AUTO CONVERSION
            END ELSE
                CUST.DISC.AMT = DISCOUNT.FLAT
                PERIODIC.RENT -= CUST.DISC.AMT ;*R22 AUTO CONVERSION
                IF PERIODIC.RENT LT 0 THEN
                    PERIODIC.RENT = 0
                END
            END
        END

        LAST.PERIODIC.RENT = R.MB.SDB.STATUS<SDB.STA.PERIODIC.RENT> + 0
        LAST.DISCOUNT.AMT = R.MB.SDB.STATUS<SDB.STA.DISCOUNT.AMT> + 0
        IF LAST.PERIODIC.RENT  NE PERIODIC.RENT OR LAST.DISCOUNT.AMT NE CUST.DISC.AMT THEN
            UPDATE.SDB.STATUS = 'YES'
            R.MB.SDB.STATUS<SDB.STA.PERIODIC.RENT> = PERIODIC.RENT
            R.MB.SDB.STATUS<SDB.STA.DISCOUNT.AMT> = CUST.DISC.AMT + 0
        END

        Z.RENT.AMT = R.MB.SDB.STATUS<SDB.STA.RENT.AMT> + 0
        IF Z.RENT.AMT EQ 0 THEN
            UPDATE.SDB.STATUS = 'YES'
            R.MB.SDB.STATUS<SDB.STA.LAST.RENEWAL.DATE> = R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON>
            R.MB.SDB.STATUS<SDB.STA.RENEW.FREQUENCY> = RENEW.FREQUENCY
            R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON> = RENEW.FREQUENCY[1,8]
        END

        IF (LAST.PERIODIC.RENT NE PERIODIC.RENT) OR (LAST.RENEW.FREQUENCY NE RENEW.FREQUENCY) THEN
            GOSUB PROCESS.STANDING.ORDER
        END

    END

    Z.RENT.AMT = R.MB.SDB.STATUS<SDB.STA.RENT.AMT> + 0
    Z.RENEWAL.DATE = R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON>

    IF Z.RENT.AMT EQ 0 AND (NOT(Z.RENEWAL.DATE) OR (Z.RENEWAL.DATE AND Z.RENEWAL.DATE LE TODAY)) THEN
        UPDATE.SDB.STATUS = 'YES'
        R.MB.SDB.STATUS<SDB.STA.LAST.RENEWAL.DATE> = R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON>
        R.MB.SDB.STATUS<SDB.STA.RENEW.FREQUENCY> = RENEW.FREQUENCY
        R.MB.SDB.STATUS<SDB.STA.RENEWAL.DUE.ON> = RENEW.FREQUENCY[1,8]
    END


    COMI = SV.COMI

RETURN

********************************************************************************************
READ.SDB.PARAM:

    MB.SDB.PARAM.ID = SDB.COMPANY; R.MB.SDB.PARAM = ''; PARAM.YERR = ''
    CALL F.READ(FN.MB.SDB.PARAM,MB.SDB.PARAM.ID,R.MB.SDB.PARAM,F.MB.SDB.PARAM,PARAM.YERR)

    MB.SDB.TYPE.ID = FIELD(SDB.NO,'.',1); R.MB.SDB.TYPE = ''; TYPE.YERR = ''
    CALL F.READ(FN.MB.SDB.TYPE,MB.SDB.TYPE.ID,R.MB.SDB.TYPE,F.MB.SDB.TYPE,TYPE.YERR)

    SDBVAT = R.MB.SDB.PARAM<SDB.PAR.FT.COMM.1>
    SAFEDEP = R.MB.SDB.PARAM<SDB.PAR.FT.COMM.2>
    FT.TXN.RENT = R.MB.SDB.PARAM<SDB.PAR.FT.TXN.TYPE.RENT>
    FT.TXN.REFUND = R.MB.SDB.PARAM<SDB.PAR.FT.TXN.TYPE.REFUND>
    RENT.ACCT = R.MB.SDB.PARAM<SDB.PAR.ADV.RENT.ACCT>
    RENT.PL = 'PL':R.MB.SDB.PARAM<SDB.PAR.RENT.PL>
    RENEW.ADV = R.MB.SDB.PARAM<SDB.PAR.RENEW.ADV>
    SDB.OFS.SOURCE = R.MB.SDB.PARAM<SDB.PAR.OFS.SOURCE>
    DISC.GROUP = R.MB.SDB.PARAM<SDB.PAR.DISC.GROUP>
    DISC.FLAT.AMT = R.MB.SDB.PARAM<SDB.PAR.DISC.FLAT.AMT>
    DISC.PERCENT = R.MB.SDB.PARAM<SDB.PAR.DISC.PERCENT>
    STAFF.GROUP = R.MB.SDB.PARAM<SDB.PAR.STAFF.GROUP>
    FREQ.TYPE = R.MB.SDB.PARAM<SDB.PAR.FREQ.TYPE>
    VAT.PERCENT = R.MB.SDB.PARAM<SDB.PAR.VAT.PERCENT>
    RENEW.FREQUENCY = R.MB.SDB.PARAM<SDB.PAR.RENEW.FREQUENCY>

    SDB.AVAIL.COMP = R.MB.SDB.TYPE<SDB.TYP.BRANCH.CODE>; PERIODIC.RENT = ''
    LOCATE SDB.COMPANY IN SDB.AVAIL.COMP<1,1> SETTING SDB.COMP.POS THEN
        PERIODIC.RENT = R.MB.SDB.TYPE<SDB.TYP.PERIODIC.RENT,SDB.COMP.POS> + 0
    END

    SV.COMI = ''; SV.COMI = COMI
    IF RENEW.FREQUENCY AND RENEW.FREQUENCY[1,8] LE TODAY THEN
        LOOP UNTIL RENEW.FREQUENCY[1,8] GT TODAY
            COMI = RENEW.FREQUENCY; CALL CFQ
            RENEW.FREQUENCY = COMI
        REPEAT
        R.MB.SDB.PARAM<SDB.PAR.RENEW.FREQUENCY> = RENEW.FREQUENCY
        CALL F.WRITE(FN.MB.SDB.PARAM,MB.SDB.PARAM.ID,R.MB.SDB.PARAM)
    END

    COMI = SV.COMI

    AC.ID = RENT.ACCT; AC.REC = ''; AC.ERR = ''
    CALL F.READ(FN.ACCOUNT, AC.ID, AC.REC, F.ACCOUNT, AC.ERR)
    RENT.CCY = AC.REC<AC.CURRENCY>

RETURN

************************************************************************
GET.CUST.GROUP:

    CUST.GROUP = ''
    DISCOUNT.FLAT = ''; DISCOUNT.PERCENT = ''; STAFF.FLAG = ''

    IF R.MB.SDB.STATUS<SDB.STA.CUSTOMER.NO> THEN
        APPL.R = ''
        APPL.ID = MB.SDB.STATUS.ID

        APPL.R = R.MB.SDB.STATUS

        CALL APPL.GRP.CONDITION('MB.SDB.STATUS', APPL.ID, APPL.R, CUST.GROUP)
        IF CUST.GROUP THEN
            LOCATE CUST.GROUP IN STAFF.GROUP<1,1> SETTING POS THEN
                STAFF.FLAG = '1'
            END
        END

        IF CUST.GROUP THEN
            LOCATE CUST.GROUP IN DISC.GROUP<1,1> SETTING POS THEN
                DISCOUNT.FLAT = DISC.FLAT.AMT<1,POS>
                DISCOUNT.PERCENT = DISC.PERCENT<1,POS>
            END
        END

    END

RETURN

********************************************************************************************
PROCESS.STANDING.ORDER:

    OFS.STO.ID = ''
    STO.ID = R.MB.SDB.STATUS<SDB.STA.STO.REF>
    IF STO.ID THEN
        OFS.STO.ID = STO.ID
        STO.REC = ''; STO.ERR = ''
        CALL F.READ(FN.STANDING.ORDER, STO.ID, STO.REC, F.STANDING.ORDER, STO.ERR)
        IF NOT(STO.ERR) THEN
            IF (LAST.PERIODIC.RENT NE PERIODIC.RENT) OR RENEW.FREQUENCY NE STO.REC<STO.CURRENT.FREQUENCY> THEN
                GOSUB UPDATE.STANDING.ORDER
            END
        END
    END ELSE
        OFS.STO.ID = R.MB.SDB.STATUS<SDB.STA.CUSTOMER.ACCT>
        IF PERIODIC.RENT GT 0 THEN
            GOSUB UPDATE.STANDING.ORDER
            R.MB.SDB.STATUS<SDB.STA.STO.REF> = OFS.TXN.ID
        END
    END


RETURN

********************************************************************************************
UPDATE.STANDING.ORDER:

    OFS.ERR.MSG = ''
    ACCT.ID = R.MB.SDB.STATUS<SDB.STA.CUSTOMER.ACCT>; ACCT.REC = ''; ACCT.ERR = ''
    CALL F.READ(FN.ACCOUNT, ACCT.ID, ACCT.REC, F.ACCOUNT, ACCT.ERR)
    YOFS.COMPANY = ACCT.REC<AC.CO.CODE>

    IF NOT(STO.ID) AND PERIODIC.RENT GT 0 THEN
        STO.END.DATE = ''
        STO.OFS.HEADER = 'STANDING.ORDER,MB.SDB,//':YOFS.COMPANY
        STO.OFS.HEADER := ",":OFS.STO.ID
        STO.OFS.STR = ',TYPE::="FI"'
        STO.OFS.STR := ',PAY.METHOD::=':DQUOTE(FT.TXN.RENT)
        STO.OFS.STR := ',CURRENCY::=':DQUOTE(LCCY)
        STO.OFS.STR := ',CURRENT.AMOUNT.BAL::=':DQUOTE(PERIODIC.RENT)
        STO.OFS.STR := ',CURRENT.FREQUENCY::=':DQUOTE(RENEW.FREQUENCY)
        STO.OFS.STR := ',CPTY.ACCT.NO::=':DQUOTE(RENT.ACCT)
        STO.OFS.STR := ',COMMISSION.CODE::="DEBIT PLUS CHARGES"'
        STO.OFS.STR := ',COMMISSION.TYPE::=':DQUOTE(SDBVAT)
        STO.OFS.STR := ',DEBIT.THEIR.REF::=':SDB.NO
        STO.OFS.STR := ',BEN.REFERENCE::=':SDB.NO
        STO.OFS.STR := ',PRINT.ADVICE::="N"'
        STO.OFS.STR := ',FT.ROUTINE::="@MB.SDB.STO.RENEW"'
        SDB.OFS.STR = STO.OFS.HEADER:STO.OFS.STR
        GOSUB CALL.OGM
    END

    IF STO.ID AND PERIODIC.RENT EQ 0 THEN
        STO.END.DATE = ''
        STO.OFS.HEADER = 'STANDING.ORDER,MB.SDB,//':YOFS.COMPANY
        STO.OFS.HEADER := ",":OFS.STO.ID
        STO.OFS.STR := ',CURRENT.END.DATE::=':DQUOTE(LAST.RENEWAL.DATE)
        SDB.OFS.STR = STO.OFS.HEADER:STO.OFS.STR
        GOSUB CALL.OGM
    END

    IF STO.ID AND PERIODIC.RENT GT 0 THEN
        STO.END.DATE = ''
        STO.OFS.HEADER = 'STANDING.ORDER,MB.SDB,//':YOFS.COMPANY
        STO.OFS.HEADER := ",":OFS.STO.ID
        STO.OFS.STR := ',CURRENT.AMOUNT.BAL::=':DQUOTE(PERIODIC.RENT)
        SDB.OFS.STR = STO.OFS.HEADER:STO.OFS.STR
        GOSUB CALL.OGM
    END

    IF OFS.ERR.MSG THEN
        TEXT = OFS.ERR.MSG
        CALL FATAL.ERROR('MB.SDB.STO.RENEW')
    END

RETURN

********************************************************************************************

PROGRAM.END:

RETURN

END
