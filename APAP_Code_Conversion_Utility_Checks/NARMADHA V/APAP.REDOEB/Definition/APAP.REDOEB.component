component APAP.REDOEB
# Component Isolation Definition
metamodelVersion 1.6
# -------------------------------------------------


public method apapMUpdProdCode (
)
{
    jBC: APAP.M.UPD.PROD.CODE
}



public method apapMismatchRepGen (
)
{
    jBC: APAP.MISMATCH.REP.GEN
}



public method mbDefaultSdbInfo (
)
{
    jBC: MB.DEFAULT.SDB.INFO
}



public method mbSdbStoRenew (
    INOUT ftId string,
    INOUT ftStatus string
)
{
    jBC: MB.SDB.STO.RENEW
}



public method tafcMenuAccessValidate (
)
{
    jBC: TAFC.MENU.ACCESS.VALIDATE
}



public method mbSdbReadSdbStatus (
   INOUT mbSdbStatusId string,
   INOUT rMbSdbStatus string
)
{
   jBC: MB.SDB.READ.SDB.STATUS
}



public method mbSdbRemindLettersLoad (
)
{
   jBC: MB.SDB.REMIND.LETTERS.LOAD
}



public method mbSdbRemindLettersSelect (
)
{
   jBC: MB.SDB.REMIND.LETTERS.SELECT
}



public method mbSdbRemindLetters (
   INOUT sdbId string
)
{
   jBC: MB.SDB.REMIND.LETTERS
}



public method mbEReminderDueOn (
   INOUT remindDueOn string,
   INOUT sdbId string
)
{
   jBC: MB.E.REMINDER.DUE.ON
}



public method mbESdbTypeDetails (
)
{
   jBC: MB.E.SDB.TYPE.DETAILS
}



public method mbSdbCalcAmort (
   INOUT sdbNo string,
   INOUT retAmortDetail string,
   INOUT retErr string
)
{
   jBC: MB.SDB.CALC.AMORT
}



public method mbSdbAmortChargeLoad (
)
{
   jBC: MB.SDB.AMORT.CHARGE.LOAD
}



public method mbSdbAmortChargeSelect (
)
{
   jBC: MB.SDB.AMORT.CHARGE.SELECT
}



public method mbSdbAmortCharge (
   INOUT sdbId string
)
{
   jBC: MB.SDB.AMORT.CHARGE
}



public method mbSdbFtRenew (
)
{
   jBC: MB.SDB.FT.RENEW
}



public method mbSdbFtVal (
)
{
   jBC: MB.SDB.FT.VAL
}



public method mbSdbParam (
)
{
   jBC: MB.SDB.PARAM
}



public method mbSdbPost (
)
{
   jBC: MB.SDB.POST
}



public method mbSdbPostCheckFields (
)
{
   jBC: MB.SDB.POST.CHECK.FIELDS
}



public method mbSdbPostCrossval (
)
{
   jBC: MB.SDB.POST.CROSSVAL
}



public method mbSdbRenewalLettersLoad (
)
{
   jBC: MB.SDB.RENEWAL.LETTERS.LOAD
}



public method mbSdbRenewalLettersSelect (
)
{
   jBC: MB.SDB.RENEWAL.LETTERS.SELECT
}



public method mbSdbRenewalLetters (
   INOUT sdbId string
)
{
   jBC: MB.SDB.RENEWAL.LETTERS
}



public method mbSdbType (
)
{
   jBC: MB.SDB.TYPE
}



public method mbSdbTypeCheckFields (
)
{
   jBC: MB.SDB.TYPE.CHECK.FIELDS
}



public method mbSdbTypeFieldDefinitions (
)
{
   jBC: MB.SDB.TYPE.FIELD.DEFINITIONS
}



public method reMismatchAppInfoLoad (
)
{
   jBC: RE.MISMATCH.APP.INFO.LOAD
}



public method reMismatchAppInfoSelect (
)
{
   jBC: RE.MISMATCH.APP.INFO.SELECT
}



public method reMismatchAppInfo (
   INOUT yid string
)
{
   jBC: RE.MISMATCH.APP.INFO
}



public method reMismatchConsRunLoad (
)
{
   jBC: RE.MISMATCH.CONS.RUN.LOAD
}



public method reMismatchConsRunSelect (
)
{
   jBC: RE.MISMATCH.CONS.RUN.SELECT
}



public method reMismatchConsRun (
   INOUT lineNo string
)
{
   jBC: RE.MISMATCH.CONS.RUN
}



public method redoAdminCqAccDef (
)
{
   jBC: REDO.ADMIN.CQ.ACC.DEF
}



public method redoAnaliseInterCrAccbal (
   INOUT winternAcct string,
   INOUT wtranAmount string,
   INOUT werrorBal string
)
{
   jBC: REDO.ANALISE.INTER.CR.ACCBAL
}



public method redoAnaliseInternaAccbal (
   INOUT winternAcct string,
   INOUT wtranAmount string,
   INOUT werrorBal string
)
{
   jBC: REDO.ANALISE.INTERNA.ACCBAL
}



public method redoAnaliseNostroBalance (
   INOUT wnostroAcct string,
   INOUT wtranAmount string,
   INOUT werrorBal string
)
{
   jBC: REDO.ANALISE.NOSTRO.BALANCE
}



public method redoAncArcDefCreditAcc (
)
{
   jBC: REDO.ANC.ARC.DEF.CREDIT.ACC
}



public method redoAncDefCracct (
)
{
   jBC: REDO.ANC.DEF.CRACCT
}



public method redoAncReinvApp (
)
{
   jBC: REDO.ANC.REINV.APP
}



public method redoApGenNcfUnmap (
   INOUT stmtId string,
   INOUT rStmtRecord string
)
{
   jBC: REDO.AP.GEN.NCF.UNMAP
}



public method redoAuditorPdfGen (
   INOUT yArray string
)
{
   jBC: REDO.AUDITOR.PDF.GEN
}



public method redoEbCheckChar (
)
{
   jBC: REDO.EB.CHECK.CHAR
}



public method redoEbCheckNumId (
)
{
   jBC: REDO.EB.CHECK.NUM.ID
}



public method tafcAccessParamValidate (
)
{
   jBC: TAFC.ACCESS.PARAM.VALIDATE
}



public method tafcAccessParam (
)
{
   jBC: TAFC.ACCESS.PARAM
}



public method tafcAccessParamFields (
)
{
   jBC: TAFC.ACCESS.PARAM.FIELDS
}



public method tafcMenuAccess (
)
{
   jBC: TAFC.MENU.ACCESS
}



public method tafcMenuAccessFields (
)
{
   jBC: TAFC.MENU.ACCESS.FIELDS
}



public method mbSdbMigCharges (
   INOUT boxTypeNo string,
   INOUT stoRef string
)
{
   jBC: MB.SDB.MIG.CHARGES
}



public method mbSdbParamFldDefinitions (
)
{
   jBC: MB.SDB.PARAM.FLD.DEFINITIONS
}



public method mbSdbParamCheckFields (
)
{
   jBC: MB.SDB.PARAM.CHECK.FIELDS
}



public method mbSdbPostFieldDefinitions (
)
{
   jBC: MB.SDB.POST.FIELD.DEFINITIONS
}



public method mbSdbStatus (
)
{
   jBC: MB.SDB.STATUS
}

